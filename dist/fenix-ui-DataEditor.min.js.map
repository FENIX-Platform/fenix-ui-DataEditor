{"version":3,"sources":["webpack:///fenix-ui-DataEditor.min.js","webpack:///webpack/bootstrap c0624ccf6ac7ad9e34ec","webpack:///./src/js/index.js","webpack:///external \"jquery\"","webpack:///./src/js/DataEditor/DataEdit.js","webpack:///./src/nls/labels.js","webpack:///./src/nls/en/labels.js","webpack:///./src/nls/fr/labels.js","webpack:///./src/js/DataEditor/simpleEditors/DataEditor.js","webpack:///external \"loglevel\"","webpack:///./src/js/DataEditor/simpleEditors/RowEditorPopup.js","webpack:///./src/js/DataEditor/simpleEditors/rE/RowEditorFactory.js","webpack:///./src/js/DataEditor/simpleEditors/rE/RowEditor_bool.js","webpack:///./src/js/DataEditor/simpleEditors/rE/RowEditor_base.js","webpack:///external \"bootstrap\"","webpack:///./src/js/DataEditor/simpleEditors/rE/RowEditor_code.js","webpack:///./src/js/DataEditor/simpleEditors/rE/RowEditor_date.js","webpack:///external \"eonasdan-bootstrap-datetimepicker\"","webpack:///./src/html/DataEditor/simpleEditors/RowEditorTime.html","webpack:///external \"moment\"","webpack:///./src/js/DataEditor/simpleEditors/rE/RowEditor_month.js","webpack:///./src/js/DataEditor/simpleEditors/rE/RowEditor_number.js","webpack:///./src/js/DataEditor/simpleEditors/rE/RowEditor_string.js","webpack:///./src/js/DataEditor/simpleEditors/rE/RowEditor_year.js","webpack:///./src/html/DataEditor/simpleEditors/DataEditor.html","webpack:///external \"amplify-pubsub\"","webpack:///./src/js/DataEditor/simpleEditors/ValidationResultsViewer.js","webpack:///./src/js/DataEditor/helpers/Data_Validator.js","webpack:///./src/js/DataEditor/helpers/CodelistUtils.js","webpack:///./src/html/DataEditor/DataEdit.html","webpack:///./src/js/DataEditor/helpers/CSV_To_Dataset.js","webpack:///./src/js/DataEditor/helpers/Validator_CSV.js","webpack:///./src/js/DataEditor/helpers/Validator_CSV_Errors.js","webpack:///./src/js/DataEditor/ColumnsMatch/ColumnsMatch.js","webpack:///./src/html/DataEditor/ColumnsMatch/ColumnsMatch.html"],"names":["define","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_8__","__WEBPACK_EXTERNAL_MODULE_13__","__WEBPACK_EXTERNAL_MODULE_16__","__WEBPACK_EXTERNAL_MODULE_18__","__WEBPACK_EXTERNAL_MODULE_25__","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","$","DataEdit","Csv2Dataset","ValidatorCSV","DataValidator","ColumnsMatch","init","containerID","config","callB","cfg","dataEdit","render","setColumns","columns","cLists","getColumns","getCodelists","getData","getDataWithoutValidation","setData","data","appendData","removeAllData","getColumnsWithDistincts","isEditable","editable","destroy","hasChanged","CSV_To_Dataset","a","b","Validator_CSV","Columns_Match","Data_Validator","apply","undefined","mlRes","DataEditor","ValidationResultsViewer","DataEditHTML","amplify","defConfig","e","dataEditorValueChanged","dataEditorRowAdded","dataEditorRowDeleted","console","log","this","extend","$container","dataEditor","$dataEditor","valResView","$valResView","cols","codelists","editEnabled","changed","prototype","container","html","find","lang","doML","me","subscribe","updateValidationOnChange","on","args","newRow","updateValidation","val","valRes","validate","updateValRes","showValidationResults","evt","allData","length","hide","show","setValidationResults","getValidationResults","Error","uiEnabled","checkCodeColumnsAndCodelists","enabled","removeAttr","attr","i","dataType","cListId","domain","codes","idCodeList","version","col","dist","getColumnDistinct","values","d","push","code","timeList","idx","toRet","inArray","unsubscribe","off","i18nEn","i18nFr","en","fr","confirmDelete","unsavedData","nullKey","sameKeyVals","unknownCode","invalidYear","invalidMonth","invalidDate","invalidNumber","invalidBool","NAN","OutOfRange","Null","RowEditorPopup","DataEditorHTML","MLUtils","createTblRow","row","editControls","addLabelToData","btnEdit","replace","btnDel","cListUID","getCodelistUid","lbl","getCodeLabel","convertCodelists","cl","metadata","convertCodes","recFlatten","node","list","convertCode","children","MLUtils_getAvailableLang","ml","toUpperCase","langs","level","title","widgetName","thButtons","EVT_VALUE_CHANGED","EVT_ROW_ADDED","EVT_ROW_DELETED","h","divDataGrid","divRowEditorPopup","btnEditRowCanc","btnEditRowOk","tblDataBody","tblDataHead","editButtonsClass","delButtonsClass","rowEditor","$cnt","$editWindow","$dataGrid","$tBody","localStorage","getItem","_bindEvents","_doML","info","updateTableHeader","createTH","label","_showEditWindow","modal","reset","setRow","keyCode","rowEditOk","confirm","_unbindEvents","isValid","updateValidationHelp","getRow","uid","evtArgs","newData","publish","updateTable","tHead","append","rowId","res","deleteRow","index","splice","getRowByRowId","rows","cListUid","resetValidationResults","setRowColor","rowIdx","color","setCellColor","colId","setCellError","changeCellBackgroundColor","htmlCell","MLRes","reFactory","generateEditFiledId","YMin","YMax","decimalDigits","$window","toLowerCase","editors","uidInEdit","oldVal","createStrucure","toAppend","$tbl","tBody","cnt","create","codelistUid","yMin","yMax","period","from","to","key","isMandatory","setValue","getValue","parseFloat","newVal","reBool","reCode","reDate","reMonth","reNumber","reString","reYear","RowEditorFactory","rowEditorBase","RowEditor_bool","parent","constructor","Object","$chk","error","prop","popover","mandatory","RowEditor_base","ERROR_NAN","ERROR_OUT_OF_RANGE","ERROR_NULL","errMSG","content","_getTitle","levels","optionCode","blanks","elemCode","elemClass","emptyEntryValue","emptyEntryLabel","RowEditor_code","$ddl","createEditor","toApp","datetimepicker","RowEditorTimeHTML","RowEditor_date","$datePicker","viewMode","locale","format","clear","substring","y","date","Date","dt","month","year","rowEditorDate","RowEditor_month","RowEditor_number","$txt","trim","isNaN","RowEditor_string","txt","RowEditor_year","$valResGrid","toAdd","dataIndex","clUtils","MSG_NULL_KEY","MSG_SAME_KEY_VALS","MSG_UNKNOWN_CODE","MSG_INVALID_YEAR","MSG_INVALID_MONTH","MSG_INVALID_DATE","MSG_INVALID_NUMBER","MSG_INVALID_BOOL","emptyKeyVals","checkEmptyKeyVals","duplicateKeyVals","checkDuplicateKeyVals","wrongDataTypes","checkWrongDataTypes","valueFlags","checkValueFlags","arrConcat","r1","r2","sameDimVals","row1","row2","checkRowDataTypes","dataRow","checkCode","checkYear","yearLimitFrom","yearValue","yearLimitTo","checkMonth","checkDate","checkNumber","checkBool","codelist","clU","findCodeInCodelist","isNumeric","toString","num","toCheck","dest","dataAppendCheck","dataOld","dataNew","o","n","dimValsCollision","dataOldIndex","dataNewIndex","dataMerge","mode","oldLen","found","copyRow","src","dst","CodelistUtils","isInNode","arr","separator","fSep","rSep","quot","head","stringsArr","_cleanEmptyCols","_removeEmptyCol","colIndex","r","stringArrToCol","stringArrToData","toStringArray","str","f","q","charAt","shift","pop","convert","csv","Err","nullOnEmpty","isInCodelist","dsdCols","csvCols","csvData","type","DSD_COLUMNS_NULL","CSV_COLUMNS_NULL","WRONG_COLUMN_COUNT","validateCodes","clId","unkCodes","checkCodes","UNKNOWN_CODES","columnId","codelistId","dsdCol","isIn","uCode","colsMatchHTML","findIndex","csvRowToRow","csvRow","csvOrder","maxRows","trDSD","trCSV","tblColMatch","rowDSD","rowCSV","$tblColMatch","$trDsd","$trCsv","dsd","toSet","bindCsvHeadEvents","_updateView","getCsvCols","newOrder","_getColIndexes","getCsvData","j","maxRCount","_removeDataRows","$tdCsv","remove","tds","event","drop","allowDrop","drag","ev","originalEvent","dataTransfer","target","preventDefault","$toMoveDest","$cntDest","$toMoveSrc","$cntSrc","is"],"mappings":"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","file":"fenix-ui-DataEditor.min.js","sourcesContent":["define([\"jquery\",\"loglevel\",\"bootstrap\",\"eonasdan-bootstrap-datetimepicker\",\"moment\",\"amplify-pubsub\"], function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_16__, __WEBPACK_EXTERNAL_MODULE_18__, __WEBPACK_EXTERNAL_MODULE_25__) { return /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t    __webpack_require__(2),\r\n\t    __webpack_require__(3),\r\n\t    __webpack_require__(30),\r\n\t    __webpack_require__(31),\r\n\t    __webpack_require__(27),\r\n\t    __webpack_require__(33)\r\n\t\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, DataEdit, Csv2Dataset, ValidatorCSV, DataValidator, ColumnsMatch) {\r\n\t    var cfg = {};\r\n\t    var dataEdit;\r\n\t\r\n\t    function init(containerID, config, callB) {\r\n\t        cfg = config;\r\n\t        dataEdit = new DataEdit();\r\n\t        dataEdit.render($(containerID), cfg, callB);\r\n\t    }\r\n\t\r\n\t    function setColumns(columns, cLists, callB) {\r\n\t        dataEdit.setColumns(columns, cLists, callB);\r\n\t    }\r\n\t    function getColumns() { return dataEdit.getColumns(); }\r\n\t    function getCodelists() { return dataEdit.getCodelists(); }\r\n\t\r\n\t    function getData() { return dataEdit.getData(); }\r\n\t    function getDataWithoutValidation() { return dataEdit.getDataWithoutValidation(); }\r\n\t    function setData(data) { dataEdit.setData(data); }\r\n\t    function appendData(data) { dataEdit.appendData(data); }\r\n\t    function removeAllData() { dataEdit.removeAllData(); }\r\n\t    function getColumnsWithDistincts() { return dataEdit.getColumnsWithDistincts(); }\r\n\t\r\n\t    function isEditable(editable) {\r\n\t        if (typeof (editable) != 'undefined')\r\n\t            dataEdit.isEditable(editable);\r\n\t        else\r\n\t            return dataEdit.isEditable();\r\n\t    }\r\n\t    function destroy() {\r\n\t        if (dataEdit)\r\n\t            dataEdit.destroy();\r\n\t    }\r\n\t    function hasChanged() { return dataEdit.hasChanged(); }\r\n\t\r\n\t    function CSV_To_Dataset(a,b) {\r\n\t        return new Csv2Dataset(a,b);\r\n\t    }\r\n\t\r\n\t    function Validator_CSV() {\r\n\t        return ValidatorCSV;\r\n\t    }\r\n\t\r\n\t    function Columns_Match() {\r\n\t        return new ColumnsMatch();\r\n\t    }\r\n\t\r\n\t    function Data_Validator() {\r\n\t        return new DataValidator();\r\n\t    }\r\n\t\r\n\t    return {\r\n\t        init: init,\r\n\t        setColumns: setColumns,\r\n\t        getColumns: getColumns,\r\n\t        getCodelists: getCodelists,\r\n\t        getData: getData,\r\n\t        getDataWithoutValidation: getDataWithoutValidation,\r\n\t        setData: setData,\r\n\t        appendData: appendData,\r\n\t        removeAllData: removeAllData,\r\n\t        getColumnsWithDistincts: getColumnsWithDistincts,\r\n\t        isEditable: isEditable,\r\n\t        destroy: destroy,\r\n\t        hasChanged: hasChanged,\r\n\t        CSV_To_Dataset: CSV_To_Dataset,\r\n\t        Validator_CSV: Validator_CSV,\r\n\t        Columns_Match: Columns_Match,\r\n\t        Data_Validator: Data_Validator\r\n\t    }\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t__webpack_require__(2),\r\n\t__webpack_require__(4),\r\n\t__webpack_require__(7),\r\n\t__webpack_require__(26),\r\n\t__webpack_require__(27),\r\n\t__webpack_require__(29),\r\n\t__webpack_require__(25)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, mlRes, DataEditor, ValidationResultsViewer, Data_Validator, DataEditHTML, amplify) {\r\n\t\r\n\t    var widgetName = \"DataEdit\";\r\n\t    var defConfig = {};\r\n\t    var e = {\r\n\t        dataEditorValueChanged: 'valueChanged.DataEditor.fenix',\r\n\t        dataEditorRowAdded: 'rowAdded.DataEditor.fenix',\r\n\t        dataEditorRowDeleted: 'rowDeleted.DataEditor.fenix'\r\n\t    };\r\n\t\r\n\t    var DataEdit = function (config) {\r\n\t        console.log('DataEdit');\r\n\t        this.config = {};\r\n\t        $.extend(true, this.config, defConfig, config);\r\n\t\r\n\t        this.$container;\r\n\t\r\n\t        this.dataEditor;\r\n\t        this.$dataEditor;\r\n\t\r\n\t        this.valResView;\r\n\t        this.$valResView;\r\n\t\r\n\t        this.cols;\r\n\t        this.codelists;\r\n\t\r\n\t        this.editEnabled = true;\r\n\t        this.changed = false;\r\n\t    };\r\n\t\r\n\t    //Render - creation\r\n\t    DataEdit.prototype.render = function (container, config, callB) {\r\n\t        console.log('Render - creation');\r\n\t        $.extend(true, this.config, config);\r\n\t\r\n\t        this.$container = container;\r\n\t        this.$container.html(DataEditHTML);\r\n\t\r\n\t        this.$dataEditor = this.$container.find('#divDataEditor');\r\n\t        this.dataEditor = new DataEditor();\r\n\t        this.dataEditor.render(this.$container.find('#divDataEdit'), this.config);\r\n\t\r\n\t        this.$valResView = this.$container.find('#divValRes');\r\n\t        this.valResView = new ValidationResultsViewer(this.config.lang);\r\n\t        this.valResView.render(this.$valResView);\r\n\t\r\n\t        this.doML();\r\n\t\r\n\t        var me = this;\r\n\t\r\n\t        //Merge valueChanged, rowAdded and rowDeleted?\r\n\t        amplify.subscribe(e.dataEditorValueChanged, this, this.updateValidationOnChange);\r\n\t        amplify.subscribe(e.dataEditorRowAdded, this, this.updateValidationOnChange);\r\n\t        amplify.subscribe(e.dataEditorRowDeleted, this, this.updateValidationOnChange);\r\n\t\r\n\t        this.$dataEditor.find('#btnAddRow').on('click', function (args) { me.dataEditor.newRow(); });\r\n\t\r\n\t        if (callB)\r\n\t            callB();\r\n\t    }\r\n\t    //Validation\r\n\t    DataEdit.prototype.updateValidation = function (data) {\r\n\t        this.changed = true;\r\n\t        var val = new Data_Validator();\r\n\t        var valRes = val.validate(this.cols, this.codelists, data);\r\n\t        this.updateValRes(valRes);\r\n\t        this.dataEditor.showValidationResults(valRes);\r\n\t    };\r\n\t    DataEdit.prototype.updateValidationOnChange = function (evt) { this.updateValidation(evt.allData); };\r\n\t    DataEdit.prototype.updateValRes = function (valRes) {\r\n\t        if (!valRes)\r\n\t            this.$valResView.hide();\r\n\t        else if (valRes.length == 0)\r\n\t            this.$valResView.hide();\r\n\t        else {\r\n\t            this.$valResView.show();\r\n\t            this.valResView.setValidationResults(valRes);\r\n\t        }\r\n\t    };    \r\n\t\r\n\t    DataEdit.prototype.getValidationResults = function () {\r\n\t        var val = new Data_Validator();\r\n\t        return val.validate(this.cols, this.codelists, this.dataEditor.getData());\r\n\t    };\r\n\t    //END Validation\r\n\t\r\n\t    //Set columns and codelists\r\n\t    DataEdit.prototype.setColumns = function (columns, codelists, callB) {\r\n\t        this.cols = columns;\r\n\t        this.codelists = codelists;\r\n\t        if (!this.cols || this.cols.length == 0)\r\n\t            throw new Error(\"At least one column must be defined\");\r\n\t\r\n\t        this.uiEnabled(false);\r\n\t        checkCodeColumnsAndCodelists(this.cols, this.codelists);\r\n\t        this.dataEditor.setColumns(this.cols, this.codelists, callB);\r\n\t        this.uiEnabled(true);\r\n\t    };\r\n\t    DataEdit.prototype.getColumns = function () { return this.cols; };\r\n\t    DataEdit.prototype.getCodelists = function () { return this.codelists; };\r\n\t\r\n\t    DataEdit.prototype.uiEnabled = function (enabled) {\r\n\t        if (enabled) {\r\n\t            this.$dataEditor.find('#btnAddRow').removeAttr('disabled');\r\n\t            this.$dataEditor.removeAttr('disabled');\r\n\t        }\r\n\t        else {\r\n\t            this.$dataEditor.find('#btnAddRow').attr('disabled', 'disabled');\r\n\t            this.$dataEditor.attr('disabled', 'disabled');\r\n\t        }\r\n\t    };\r\n\t\r\n\t    var checkCodeColumnsAndCodelists = function (cols, cLists) {\r\n\t        //console.log(\"cLists\",cLists);\r\n\t        if (!cols) return;\r\n\t        for (var i = 0; i < cols.length; i++)\r\n\t            if (cols[i].dataType == 'code') {\r\n\t                if (!cLists)\r\n\t                    throw new Error(\"Codelist for the column \" + cols[i].id + \" missing\");\r\n\t                //TODO: extend to multiple codelists\r\n\t                var cListId = cols[i].domain.codes[0].idCodeList;\r\n\t\r\n\t                if (cols[i].domain.codes[0].version)\r\n\t                    cListId = cListId + \"|\" + cols[i].domain.codes[0].version;\r\n\t\r\n\t                if (!(cListId in cLists))\r\n\t                    throw new Error(\"Codelist '\"+cListId+\"' for the column '\"+cols[i].id+\"' missing\");\r\n\t            }\r\n\t    };\r\n\t\r\n\t    DataEdit.prototype.getData = function () {\r\n\t        var valRes = this.getValidationResults();\r\n\t\r\n\t        if (valRes == null || valRes.length == 0)\r\n\t            return this.dataEditor.getData();\r\n\t        else\r\n\t            return false;\r\n\t    };\r\n\t    DataEdit.prototype.getDataWithoutValidation = function () {\r\n\t        return this.dataEditor.getData();\r\n\t    };\r\n\t    DataEdit.prototype.setData = function (data) {\r\n\t        if (this.cols)\r\n\t            this.dataEditor.setData(data);\r\n\t        this.updateValidation(data);\r\n\t        this.changed = false;\r\n\t    };\r\n\t    /*DataEdit.prototype.appendData = function (data) {\r\n\t        if (this.cols)\r\n\t            this.dataEditor.appendData(data);\r\n\t        this.changed = true;\r\n\t        this.updateValidation(this.dataEditor.getData());\r\n\t    };*/\r\n\t    DataEdit.prototype.removeAllData = function () {\r\n\t        this.dataEditor.removeAllData();\r\n\t    };\r\n\t    DataEdit.prototype.hasChanged = function () {\r\n\t        return this.changed;\r\n\t    };\r\n\t\r\n\t    //Column Distincts\r\n\t    DataEdit.prototype.getColumnsWithDistincts = function () {\r\n\t        var data = this.dataEditor.getData();\r\n\t        for (var i = 0; i < this.cols.length; i++) {\r\n\t            var col = this.cols[i];\r\n\t            switch (col.dataType) {\r\n\t                case 'code':\r\n\t                case 'customCode':\r\n\t                    var dist = getColumnDistinct(data, i);\r\n\t                    if (dist) {\r\n\t                        //TODO: Allow multiple codelists\r\n\t                        col.values = { codes: [] };\r\n\t                        col.values.codes[0] = { idCodeList: col.domain.codes[0].idCodeList };\r\n\t                        if (col.domain.codes[0].version)\r\n\t                            col.values.codes[0].version = col.domain.codes[0].version;\r\n\t                        col.values.codes[0].codes = [];\r\n\t                        for (var d = 0; d < dist.length; d++) {\r\n\t                            col.values.codes[0].codes.push({ code: dist[d] });\r\n\t                        }\r\n\t                    }\r\n\t                    else col.values = null;\r\n\t                    break;\r\n\t                case 'date':\r\n\t                case 'month':\r\n\t                case 'year':\r\n\t                    var dist = getColumnDistinct(data, i);\r\n\t                    if (dist)\r\n\t                        col.values = { timeList: dist };\r\n\t                    else\r\n\t                        col.values = null;\r\n\t                    break;\r\n\t            }\r\n\t        }\r\n\t        return this.cols;\r\n\t    };\r\n\t\r\n\t    var getColumnDistinct = function (data, idx) {\r\n\t        var toRet = [];\r\n\t        if (!data)\r\n\t            return null;\r\n\t        for (var i = 0; i < data.length; i++)\r\n\t            if ($.inArray(data[i][idx], toRet) == -1)\r\n\t                toRet.push(data[i][idx]);\r\n\t        return toRet;\r\n\t    };\r\n\t    //End column Distincts\r\n\t\r\n\t    DataEdit.prototype.isEditable = function (editable) {\r\n\t        if (typeof (editable) != 'undefined') {\r\n\t            if (editable)\r\n\t                this.$dataEditor.find('#btnAddRow').show();\r\n\t            else\r\n\t                this.$dataEditor.find('#btnAddRow').hide();\r\n\t            this.editEnabled = editable;\r\n\t            this.dataEditor.isEditable(editable);\r\n\t        }\r\n\t        else\r\n\t            return this.editEnabled;\r\n\t    };\r\n\t    DataEdit.prototype.destroy = function () {\r\n\t        amplify.unsubscribe(e.dataEditorValueChanged, this.updateValidation);\r\n\t        amplify.unsubscribe(e.dataEditorRowAdded, this.updateValidation);\r\n\t        amplify.unsubscribe(e.dataEditorRowDeleted, this.updateValidation);\r\n\t        this.$dataEditor.find('#btnAddRow').off('click');\r\n\t        this.dataEditor.destroy();\r\n\t    };\r\n\t\r\n\t    //MultiLang\r\n\t    DataEdit.prototype.doML = function () {\r\n\t        this.$dataEditor.find('#btnAddRow').html(mlRes['add']);\r\n\t    };\r\n\t    //END Multilang\r\n\t\r\n\t    return DataEdit;\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;if (false) {\r\n\t    var define = require('amdefine')(module);\r\n\t}\r\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t        __webpack_require__(5),\r\n\t        __webpack_require__(6)\r\n\t    ], __WEBPACK_AMD_DEFINE_RESULT__ = function (i18nEn,i18nFr) {\r\n\t\r\n\t        'use strict';\r\n\t\r\n\t        return {\r\n\t\r\n\t            en: i18nEn,\r\n\t            fr: i18nFr\r\n\t\r\n\t        }\r\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*global define*/\r\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\r\n\t\r\n\t    'use strict';\r\n\t\r\n\t    return  {\r\n\t        //\"ok\": \"Ok\",\r\n\t        //\"cancel\": \"Cancel\",\r\n\t        \"confirmDelete\": \"Delete?\",\r\n\t        \"unsavedData\": \"Some changes are unsaved, cancel anyway?\",\r\n\t        //\"yearInterval\": \"Year must be a number \",\r\n\t        //\"monthInterval\": \"Month must be a number (1..12)\",\r\n\t\r\n\t        \"nullKey\": \"Key fields cannot be empty\",\r\n\t        \"sameKeyVals\": \"Key fields cannot be duplicated\",\r\n\t        \"unknownCode\": \"Unknown code\",\r\n\t        \"invalidYear\": \"Year is not valid\",\r\n\t        \"invalidMonth\": \"Month is not valid\",\r\n\t        \"invalidDate\": \"Date is not valid\",\r\n\t        \"invalidNumber\": \"Number is not valid\",\r\n\t        \"invalidBool\": \"Boolean is not valid\",\r\n\t\r\n\t        \"NAN\": \"Value is not a number\",\r\n\t        \"OutOfRange\": \"Value is out of the allowed range\",\r\n\t        \"Null\": \"Value cannot be blank\"\r\n\t    }\r\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*global define*/\r\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\r\n\t\r\n\t    'use strict';\r\n\t\r\n\t    return {\r\n\t\r\n\t        //\"ok\": \"Ok\",\r\n\t        //\"cancel\": \"Annuler\",\r\n\t        \"confirmDelete\": \"Supprimer?\",\r\n\t        \"unsavedData\": \"Certains changements n'ont pas été enregistrés, annuler quand même?\",\r\n\t        //\"yearInterval\": \"L'année doit être numérique\",\r\n\t        //\"monthInterval\": \"Le mois doit être numérique (1..12)\",\r\n\t\r\n\t        \"nullKey\": \"Les champs clés ne peuvent pas être vides\",\r\n\t        \"sameKeyVals\": \"Les champs clés ne peuvent pas être dupliqués\",\r\n\t        \"unknownCode\": \"Code inconnu\",\r\n\t        \"invalidYear\": \"L'année n'est pas valable\",\r\n\t        \"invalidMonth\": \"Le mois n'est pas valable\",\r\n\t        \"invalidDate\": \"La date n'est pas valable\",\r\n\t        \"invalidNumber\": \"Le nombre n'est pas valable\",\r\n\t        \"invalidBool\": \"Booléen n'est pas valable\",\r\n\t\r\n\t        \"NAN\": \"La valeur n'est pas numérique\",\r\n\t        \"OutOfRange\": \"La valeur est hors de la plage autorisée\",\r\n\t        \"Null\": \"La valeur ne peut pas être vide\"\r\n\t\r\n\t    }\r\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t        __webpack_require__(2),\r\n\t        __webpack_require__(8),\r\n\t        __webpack_require__(9),\r\n\t        __webpack_require__(23),\r\n\t        __webpack_require__(4),\r\n\t        __webpack_require__(24),\r\n\t        __webpack_require__(25),\r\n\t        __webpack_require__(13)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, log, RowEditorPopup, DataEditorHTML, mlRes, MLUtils, amplify) {\r\n\t        var widgetName = \"DataEditor\";\r\n\t\r\n\t        var defConfig = {\r\n\t            thButtons: \"<th>E</th><th>D</th>\"\r\n\t        };\r\n\t        var e = {\r\n\t            EVT_VALUE_CHANGED: 'valueChanged.' + widgetName + '.fenix',\r\n\t            EVT_ROW_ADDED: 'rowAdded.' + widgetName + '.fenix',\r\n\t            EVT_ROW_DELETED: 'rowDeleted.' + widgetName + '.fenix'\r\n\t        };\r\n\t        var h = {\r\n\t            divDataGrid: '#divDataGrid',\r\n\t            divRowEditorPopup: '#divRowEditorPopup',\r\n\t            btnEditRowCanc: '#btnEditRowCanc',\r\n\t            btnEditRowOk: '#btnEditRowOk',\r\n\t            tblDataBody: '#tblDataBody',\r\n\t            tblDataHead: '#tblDataHead',\r\n\t            editButtonsClass: 'bE',\r\n\t            delButtonsClass: 'bD'\r\n\t        };\r\n\t        var html = {\r\n\t            btnEdit: '<button type=\"button\" class=\"btn btn-default bE\" data-rid=%idx%><span class=\"glyphicon glyphicon-pencil\"></span></button>',\r\n\t            btnDel: '<button type=\"button\" class=\"btn btn-default bD\"data-rid=%idx%><span class=\"glyphicon glyphicon-trash\"></span></button>'\r\n\t        };\r\n\t\r\n\t        var COLOR_ERROR = \"error\";\r\n\t        var COLOR_DEFAULT = \"default\";\r\n\t\r\n\t        var DataEditor = function (config) {\r\n\t            this.config = {};\r\n\t            $.extend(true, this.config, config, defConfig);\r\n\t\r\n\t            this.rowEditor = new RowEditorPopup();\r\n\t\r\n\t            this.$cnt;\r\n\t            this.$editWindow;\r\n\t            this.$dataGrid;\r\n\t            this.cols;\r\n\t            this.codelists;\r\n\t            this.data = [];\r\n\t            this.$tBody;\r\n\t            this.editEnabled = true;\r\n\t\r\n\t            this.lang = 'en';\r\n\t        };\r\n\t\r\n\t        //Render - creation\r\n\t        DataEditor.prototype.render = function (container, config, callB) {\r\n\t            $.extend(true, this.config, config);\r\n\t\r\n\t            this.$cnt = container;\r\n\t            this.$cnt.html(DataEditorHTML);\r\n\t            this.$dataGrid = this.$cnt.find(h.divDataGrid);\r\n\t\r\n\t            this.$editWindow = this.$cnt.find(h.divRowEditorPopup);\r\n\t            this.rowEditor.render(this.$editWindow);\r\n\t\r\n\t            if (localStorage.getItem('locale'))\r\n\t                this.lang = localStorage.getItem('locale');\r\n\t\r\n\t            /*\r\n\t            var me = this;\r\n\t            this.$cnt.find(h.btnEditRowCanc).on('click', function () {\r\n\t                me.$editWindow.modal('hide');\r\n\t            });\r\n\t            this.$cnt.find(h.btnEditRowOk).on('click', function () { me.rowEditOk(); });\r\n\t            this.$editWindow.on('hidden.bs.modal', function (e) {\r\n\t                me.rowEditor.reset();\r\n\t                me.$editWindow.off(\"keyup\");\r\n\t            });\r\n\t            */\r\n\t            this._bindEvents();\r\n\t            this.$tBody = this.$cnt.find(h.tblDataBody);\r\n\t\r\n\t            this._doML();\r\n\t            if (callB) callB();\r\n\t\r\n\t            log.info(\"DataEditor rendered\", this.config);\r\n\t        }\r\n\t\r\n\t        DataEditor.prototype.setColumns = function (cols, codelists, callB) {\r\n\t            this.cols = cols;\r\n\t            this.codelists = convertCodelists(codelists, this.lang);\r\n\t            if (!cols) {\r\n\t                return;\r\n\t            }\r\n\t            //The table\r\n\t            this.updateTableHeader();\r\n\t\r\n\t            //The row editor\r\n\t            this.rowEditor.setColumns(this.cols, this.codelists);\r\n\t            if (callB) callB();\r\n\t        };\r\n\t        var createTH = function (label) {\r\n\t            return '<th>' + label + '</th>';\r\n\t        };\r\n\t\r\n\t        DataEditor.prototype._showEditWindow = function (row) {\r\n\t            log.info(\"_showEditWindow\", row);\r\n\t            this.$editWindow.modal('show');\r\n\t            this.rowEditor.reset();\r\n\t            if (row)\r\n\t                this.rowEditor.setRow(row);\r\n\t\r\n\t            var me = this;\r\n\t            this.$editWindow.on(\"keyup\", function (evt) {\r\n\t                if (evt.keyCode == 13) {\r\n\t                    me.rowEditOk();\r\n\t                }\r\n\t            });\r\n\t        };\r\n\t\r\n\t        DataEditor.prototype._bindEvents = function () {\r\n\t            log.info(\"Data Editor - _bindEvents\");\r\n\t            var me = this;\r\n\t            this.$cnt.find(h.btnEditRowCanc).on('click', function () {\r\n\t                if (me.rowEditor.changed()) {\r\n\t                    if (!confirm(mlRes[me.lang]['unsavedData']))\r\n\t                        return;\r\n\t                }\r\n\t                me.$editWindow.modal('hide');\r\n\t            });\r\n\t            this.$cnt.find(h.btnEditRowOk).on('click', function () { me.rowEditOk(); });\r\n\t            this.$editWindow.on('hidden.bs.modal', function (e) {\r\n\t                me.rowEditor.reset();\r\n\t                me.$editWindow.off(\"keyup\");\r\n\t            });\r\n\t        };\r\n\t\r\n\t        DataEditor.prototype._unbindEvents = function () {\r\n\t            this.$cnt.find(h.btnEditRowCanc).off('click');\r\n\t            this.$cnt.find(h.btnEditRowOk).off('click');\r\n\t            this.$editWindow.off('hidden.bs.modal');\r\n\t            this.$tBody.find('.' + h.editButtonsClass).off('click');\r\n\t            this.$tBody.find('.' + h.delButtonsClass).off('click');\r\n\t        };\r\n\t\r\n\t        DataEditor.prototype.destroy = function () {\r\n\t            this._unbindEvents();\r\n\t            this.rowEditor.destroy();\r\n\t            this.$tBody.html('');\r\n\t        };\r\n\t\r\n\t        DataEditor.prototype.rowEditOk = function () {\r\n\t            if (!this.rowEditor.isValid()) {\r\n\t                this.rowEditor.updateValidationHelp();\r\n\t                return;\r\n\t            }\r\n\t            var row = this.rowEditor.getRow();\r\n\t            if (row.uid != -1) {//Edit\r\n\t                this.data[row.uid] = row.data;\r\n\t                var evtArgs = {};\r\n\t                evtArgs.newData = row.data;\r\n\t                evtArgs.allData = this.data;\r\n\t                amplify.publish(e.EVT_VALUE_CHANGED, evtArgs);\r\n\t            }\r\n\t            else {//New\r\n\t                this.data.push(row.data);\r\n\t\r\n\t                var evtArgs = {};\r\n\t                evtArgs.allData = this.data;\r\n\t                amplify.publish(e.EVT_ROW_ADDED, evtArgs);\r\n\t            }\r\n\t\r\n\t            //DO NOT UPDATE ALL THE TABLE!!!\r\n\t            this.updateTable();\r\n\t            this.$editWindow.modal('hide');\r\n\t        }\r\n\t\r\n\t        DataEditor.prototype.newRow = function () {\r\n\t            this._showEditWindow(null);\r\n\t        }\r\n\t\r\n\t        DataEditor.prototype.isEditable = function (editable) {\r\n\t            console.log(\"isEditable\",editable)\r\n\t            this.editEnabled = editable;\r\n\t            if (!this.cols)\r\n\t                return;\r\n\t            if (typeof (editable) == 'undefined')\r\n\t                return this.editEnabled;\r\n\t            this.updateTableHeader();\r\n\t            this.updateTable();\r\n\t        }\r\n\t\r\n\t        //DATA\r\n\t        DataEditor.prototype.setData = function (data) {\r\n\t            if (!this.cols)\r\n\t                throw new Error(\"Cannot set data without table structure, use setColumns before setData\");\r\n\t            if (!data)\r\n\t                return;\r\n\t            this.data = data;\r\n\t            this.updateTable();\r\n\t        };\r\n\t\r\n\t        DataEditor.prototype.removeAllData = function () {\r\n\t            this.data = [];\r\n\t            this.updateTable();\r\n\t        };\r\n\t        DataEditor.prototype.updateTableHeader = function () {\r\n\t\r\n\t            var tHead = this.$cnt.find(h.tblDataHead);\r\n\t            tHead.html('');\r\n\t            //tHead.append('<th style=\"display:none;\"></th>');\r\n\t            tHead.append('<th>#</th>');\r\n\t            for (var i = 0; i < this.cols.length; i++) {\r\n\t                //MLUtils get multilanguage string\r\n\t                tHead.append(createTH(this.cols[i].title[this.lang.toUpperCase()]));\r\n\t            }\r\n\t            if (this.editEnabled) tHead.append(this.config.thButtons);\r\n\t\r\n\t        };\r\n\t        DataEditor.prototype.updateTable = function () {\r\n\t            this.$tBody.html('');\r\n\t            if (!this.data)\r\n\t                return;\r\n\t            for (var i = 0; i < this.data.length; i++) {\r\n\t                this.$tBody.append(createTblRow(i, this.cols, this.codelists, this.data[i], this.editEnabled));\r\n\t            }\r\n\t            //Attach all the events\r\n\t            if (this.editEnabled) {\r\n\t                var me = this;\r\n\t                this.$tBody.find('.' + h.editButtonsClass).on('click', function () {\r\n\t                    var rowId = $(this).data('rid');\r\n\t                    me._showEditWindow({ uid: rowId, data: me.data[rowId] });\r\n\t                });\r\n\t                this.$tBody.find('.' + h.delButtonsClass).on('click', function () {\r\n\t                    var res = confirm(mlRes[me.lang]['confirmDelete']);\r\n\t                    if (!res)\r\n\t                        return;\r\n\t                    me.deleteRow($(this).data('rid'));\r\n\t                });\r\n\t            }\r\n\t        };\r\n\t        DataEditor.prototype.deleteRow = function (index) {\r\n\t            this.data.splice(index, 1);\r\n\t            this.updateTable();\r\n\t            amplify.publish(e.EVT_ROW_DELETED, this.data);\r\n\t        };\r\n\t        DataEditor.prototype.getRowByRowId = function (rowId) {\r\n\t            //Test which one is faster\r\n\t            /*return this.$tBody.find('tr td:first-child').filter(function () {\r\n\t                console.log($(this).html()==rowId);\r\n\t                return ($(this).html() == rowId);\r\n\t            }).closest('tr');*/\r\n\t\r\n\t            var rows = this.$tBody.find('tr');\r\n\t            for (var i = 0; i < rows.length; i++) {\r\n\t                if (rowId == $(rows[i]).find('td:first').html())\r\n\t                    return $(rows[i]);\r\n\t            };\r\n\t            return null;\r\n\t        };\r\n\t\r\n\t        function createTblRow(idx, cols, codelists, row, editControls) {\r\n\t\r\n\t            var toRet = '<tr>';\r\n\t            //toRet += '<td style=\"display:none;\">' + idx + '</td>'\r\n\t            toRet += '<td>' + idx + '</td>'\r\n\t            for (var i = 0; i < cols.length; i++) { //was row.lenght\r\n\t                toRet += '<td>';\r\n\t                if (row[i] === null)\r\n\t                    toRet += '';\r\n\t                else if (cols[i].dataType == 'code')\r\n\t                    toRet += addLabelToData(cols[i], codelists, row[i], this.lang);\r\n\t                else {\r\n\t                    toRet += row[i];\r\n\t                }\r\n\t                toRet += '</td>';\r\n\t            }\r\n\t            if (editControls) {\r\n\t                toRet += '<td>' + html.btnEdit.replace('%idx%', idx) + '</td>';\r\n\t                toRet += '<td>' + html.btnDel.replace('%idx%', idx) + '</td>';\r\n\t            }\r\n\t            toRet += '</tr>';\r\n\t            return toRet;\r\n\t        };\r\n\t        var getCodelistUid = function (domain) {\r\n\t            //Make it handle multiple codelsits\r\n\t            var cListUid = domain.codes[0].idCodeList;\r\n\t            if (domain.codes[0].version) cListUid += \"|\" + domain.codes[0].version;\r\n\t            return cListUid;\r\n\t        };\r\n\t        function addLabelToData(col, codelists, data) {\r\n\t            //TODO Make it handle multiple Codelists\r\n\t        //    console.log(\"addLabelToData\",col, codelists, data);\r\n\t            var cListUID = getCodelistUid(col.domain);\r\n\t        //    console.log(cListUID);\r\n\t            var lbl = getCodeLabel(codelists[cListUID].data, data);\r\n\t            if (lbl === null) return '';\r\n\t            return lbl;\r\n\t        };\r\n\t        var getCodeLabel = function (codes, code) {\r\n\t            if (!codes)\r\n\t                return null;\r\n\t            for (var i = 0; i < codes.length; i++)\r\n\t                if (codes[i].code == code)\r\n\t                    //return codes[i].title + \" [\" + code + \"]\";\r\n\t                    return codes[i].title;\r\n\t            return null;\r\n\t        };\r\n\t\r\n\t        DataEditor.prototype.getData = function () {\r\n\t            log.info(\"getData \", this.data)\r\n\t            return this.data;\r\n\t        }\r\n\t        //END Data\r\n\t\r\n\t\r\n\t        //Validation results\r\n\t        DataEditor.prototype.showValidationResults = function (valRes) {\r\n\t\r\n\t            /* this.resetValidationResults();\r\n\t             if (!valRes)\r\n\t                 return;\r\n\t             for (var i = 0; i < valRes.length; i++) {\r\n\t                 if (valRes[i].colId)\r\n\t                     this.setCellError(valRes[i].dataIndex, valRes[i].colId);\r\n\t                 else\r\n\t                     this.setRowError(valRes[i].dataIndex, valRes[i].colId);\r\n\t             }*/\r\n\t\r\n\t\r\n\t            /* this.resetValidationResults();\r\n\t        \r\n\t             if (!valRes)\r\n\t                 return;\r\n\t             for (var i = 0; i < valRes.length; i++) {\r\n\t                 if (valRes[i].colId)\r\n\t                     this.setCellColor(valRes[i].dataIndex, valRes[i].colId, COLOR_ERROR);\r\n\t                 else\r\n\t                     this.setRowColor(valRes[i].dataIndex, COLOR_ERROR);\r\n\t             }*/\r\n\t        }\r\n\t\r\n\t        DataEditor.prototype.resetValidationResults = function () {\r\n\t            /*var rowCount = this.$dataGrid.jqxGrid('getrows').length;\r\n\t            for (var i = 0; i < rowCount; i++)\r\n\t                this.setRowColor(i, COLOR_DEFAULT);*/\r\n\t        }\r\n\t\r\n\t        DataEditor.prototype.setRowColor = function (rowIdx, color) {\r\n\t            /*var cols = this.$dataGrid.jqxGrid('columns');\r\n\t        \r\n\t            for (var i = 0; i < cols.records.length; i++)\r\n\t                this.setCellColor(rowIdx, cols.records[i].datafield, color);*/\r\n\t        }\r\n\t\r\n\t        DataEditor.prototype.setCellColor = function (rowIdx, colId, color) {\r\n\t            /*var htmlRows = this.$dataGrid.find(\"div[role='row']\");\r\n\t            var htmlRow = htmlRows[rowIdx];\r\n\t            var colIdx = this.$dataGrid.jqxGrid('getcolumnindex', colId);\r\n\t            var tds = $(htmlRow).find(\"div[role='gridcell']\");\r\n\t            this.changeCellBackgroundColor(tds[colIdx], color);*/\r\n\t        }\r\n\t        DataEditor.prototype.setCellError = function (rowIdx, colId) {\r\n\t            /*var colIndex = -1;\r\n\t            for (var i = 0; i < this.cols.length; i++) {\r\n\t                if (colId == this.cols[i]) {\r\n\t                    colIndex = i;\r\n\t                }\r\n\t            }\r\n\t            var row = $tBody.find('td:first');\r\n\t            console.log(row);*/\r\n\t\r\n\t\r\n\t        };\r\n\t\r\n\t        DataEditor.prototype.changeCellBackgroundColor = function (htmlCell, color) {\r\n\t            /*if (color == COLOR_ERROR)\r\n\t                $(htmlCell).addClass(\"fx-red-cell\");\r\n\t            else if (color == COLOR_DEFAULT)\r\n\t                $(htmlCell).removeClass(\"fx-red-cell\");*/\r\n\t        }\r\n\t\r\n\t        //END Validation results\r\n\t\r\n\t        //Codelists helpers\r\n\t        function convertCodelists(codelists, lang) {\r\n\t            var toRet = {};\r\n\t            for (var cl in codelists) {\r\n\t                toRet[cl] = { metadata: {} };\r\n\t                toRet[cl].data = convertCodes(codelists[cl].data, lang);\r\n\t            }\r\n\t            return toRet;\r\n\t        }\r\n\t        //number of levels for a codelist is not always available.\r\n\t        //Always call the recursive flatten\r\n\t        function convertCodes(codes, lang) {\r\n\t            if (!codes)\r\n\t                return null;\r\n\t            var toRet = [];\r\n\t            recFlatten(codes, toRet, lang)\r\n\t            return toRet;\r\n\t        }\r\n\t        /*function convertCodes(levels, codes, lang) {\r\n\t            if (!codes)\r\n\t                return null;\r\n\t            var toRet = [];\r\n\t            if (levels == 1) {\r\n\t                for (var i = 0; i < codes.length; i++)\r\n\t                    toRet.push(convertCode(codes[i], lang));\r\n\t            }\r\n\t            else {\r\n\t                recFlatten(codes, toRet, lang)\r\n\t            }\r\n\t            return toRet;\r\n\t        }*/\r\n\t        function recFlatten(node, list, lang) {\r\n\t            if (!node)\r\n\t                return;\r\n\t            for (var i = 0; i < node.length; i++) {\r\n\t                list.push(convertCode(node[i], lang));\r\n\t                if (node[i].children)\r\n\t                    recFlatten(node[i].children, list);\r\n\t            }\r\n\t        }\r\n\t        function convertCode(code, lang) {\r\n\t\r\n\t            var MLUtils_getAvailableLang = function (ml, lang) {\r\n\t                if (!ml)\r\n\t                    return \"\";\r\n\t                if (!lang)\r\n\t                    lang = 'EN';\r\n\t                lang = lang.toUpperCase();\r\n\t                if (lang in ml)\r\n\t                    return lang;\r\n\t                if ('EN' in ml)\r\n\t                    return 'EN';\r\n\t                for (var langs in ml)\r\n\t                    return langs;\r\n\t            }\r\n\t\r\n\t            return {\r\n\t                level: code.level,\r\n\t                title: code.title[MLUtils_getAvailableLang(code.title,lang)] + \" [\" + code.code + \"]\",\r\n\t                code: code.code\r\n\t            };\r\n\t        }\r\n\t        //End Codelists helpers\r\n\t\r\n\t        DataEditor.prototype._doML = function () {\r\n\t        }\r\n\t\r\n\t        return DataEditor;\r\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t        __webpack_require__(2),\r\n\t        __webpack_require__(8),\r\n\t        __webpack_require__(4),\r\n\t        __webpack_require__(10)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, log, MLRes, reFactory) {\r\n\t    var widgetName = \"DataEditorPopup\";\r\n\t    var yMax = 3000;\r\n\t    var yMin = 0;\r\n\t\r\n\t    var defConfig = { YMin: 0, YMax: 3000, decimalDigits: 5 };\r\n\t    var reFactory = new reFactory();\r\n\t\r\n\t    var RowEditorPopup = function (config) {\r\n\t        this.config = {};\r\n\t        $.extend(true, this.config, defConfig, config);\r\n\t\r\n\t        this.$window;\r\n\t        this.cols;\r\n\t        this.codelists;\r\n\t\r\n\t        this.lang = 'EN';\r\n\t        if (localStorage.getItem('locale'))\r\n\t            this.lang = localStorage.getItem('locale');\r\n\t\r\n\t        this.lang = this.lang.toLowerCase();\r\n\t\r\n\t        this.editors = [];\r\n\t        this.uidInEdit = -1;\r\n\t\r\n\t        this.oldVal = null;\r\n\t    };\r\n\t\r\n\t    RowEditorPopup.prototype.render = function (container, config) {\r\n\t        $.extend(true, this.config, config);\r\n\t        this.$window = container;\r\n\t\r\n\t    }\r\n\t    RowEditorPopup.prototype.setColumns = function (cols, codelists) {\r\n\t        this.cols = cols;\r\n\t        this.codelists = codelists;\r\n\t        if (!cols) {\r\n\t            return;\r\n\t        }\r\n\t        this.createStrucure();\r\n\t    }\r\n\t\r\n\t    RowEditorPopup.prototype.createStrucure = function () {\r\n\t        this.editors = [];\r\n\t\r\n\t        var $tbl = this.$window.find('#tblRowEditor');\r\n\t        var tBody = $tbl.find('tbody');\r\n\t        var toAppend;\r\n\t        for (var i = 0; i < this.cols.length; i++) {\r\n\t            toAppend = '<tr>';\r\n\t            toAppend += '<td>' + this.cols[i].title[this.lang.toUpperCase()] + '</td>';\r\n\t            toAppend += '<td><div id=\"' + generateEditFiledId(this.cols[i].id) + '\"></div></td>';\r\n\t            toAppend += '</tr>';\r\n\t            tBody.append(toAppend);\r\n\t        }\r\n\t        for (var i = 0; i < this.cols.length; i++) {\r\n\t            var col = this.cols[i];\r\n\t            var cnt = tBody.find('#' + generateEditFiledId(col.id));\r\n\t            var cfg = null;\r\n\t            this.editors[i] = reFactory.create(col.dataType, cfg);\r\n\t\r\n\t            switch (col.dataType) {\r\n\t                case 'code':\r\n\t                    var codelistUid = col.domain.codes[0].idCodeList;\r\n\t                    if (col.domain.codes[0].version)\r\n\t                        codelistUid += \"|\" + col.domain.codes[0].version;\r\n\t                    this.editors[i].render(cnt, null, [this.codelists[codelistUid]]);\r\n\t                    break;\r\n\t                case 'customCode':\r\n\t                    //ADD custom code edit\r\n\t                    break;\r\n\t                case 'year':\r\n\t                    var yMin = this.config.YMin;\r\n\t                    var yMax = this.config.YMax;\r\n\t                    if (col.domain && col.domain.period) {\r\n\t                        yMin = col.domain.period.from;\r\n\t                        yMax = col.domain.period.to;\r\n\t                    }\r\n\t                    this.editors[i].render(cnt, { yMin: yMin, yMax: yMax });\r\n\t                    break;\r\n\t                case 'number':\r\n\t                case 'percentage':\r\n\t                    this.editors[i].render(cnt, { decimalDigits: this.config.decimalDigits });\r\n\t                    break;\r\n\t                case 'month':\r\n\t                case 'date':\r\n\t                case 'text':\r\n\t                case 'bool':\r\n\t                    this.editors[i].render(cnt, null);\r\n\t                    break;\r\n\t            }\r\n\t            if (col.key)\r\n\t                this.editors[i].isMandatory(true);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function generateEditFiledId(id) {\r\n\t        return 'trRowEdit_' + id;\r\n\t    }\r\n\t    RowEditorPopup.prototype.reset = function (row) {\r\n\t        log.info(\"RowEditorPopup - reset\", this.editors, this.cols.length, row)\r\n\t        this.uidInEdit = -1;\r\n\t        if (!this.cols) return;\r\n\t        for (var i = 0; i < this.cols.length; i++) {\r\n\t            this.editors[i].reset();\r\n\t        }\r\n\t        this.oldVal = null;\r\n\t    }\r\n\t\r\n\t    RowEditorPopup.prototype.updateValidationHelp = function () {\r\n\t        if (!this.cols)\r\n\t            return;\r\n\t        for (var i = 0; i < this.cols.length; i++) {\r\n\t            if (this.editors[i].updateValidationHelp)\r\n\t                this.editors[i].updateValidationHelp();\r\n\t        }\r\n\t    }\r\n\t\r\n\t    RowEditorPopup.prototype.isValid = function () {\r\n\t        for (var i = 0; i < this.cols.length; i++)\r\n\t            if (!this.editors[i].isValid())\r\n\t                return false;\r\n\t        return true;\r\n\t    }\r\n\t\r\n\t    RowEditorPopup.prototype.setRow = function (row) {\r\n\t        log.info(\"setRow\", row)\r\n\t        this.reset();\r\n\t        if (!this.cols)\r\n\t            throw new Error('cannot set row when columns are null');\r\n\t        this.oldVal = row;\r\n\t        if (row.uid != 'undefined')\r\n\t            this.uidInEdit = row.uid;\r\n\t        else\r\n\t            this.uidInEdit = -1;\r\n\t        for (var i = 0; i < this.cols.length; i++)\r\n\t            if (this.editors[i]) {\r\n\t                this.editors[i].setValue(row.data[i]);\r\n\t            }\r\n\t            else\r\n\t                throw new Error('Editor cannot be null for dataType ' + this.cols[i].dataType);\r\n\t    }\r\n\t    RowEditorPopup.prototype.getRow = function (row) {\r\n\t        if (!this.cols)\r\n\t            throw new Error('cannot get row when columns are null');\r\n\t        var toRet = { uid: this.uidInEdit, data: [] };\r\n\t        for (var i = 0; i < this.cols.length; i++) {\r\n\t            var val = this.editors[i].getValue();\r\n\t            if (!val)\r\n\t                toRet.data[i] = null;\r\n\t            else if (this.cols[i].dataType == 'number' || this.cols[i].dataType == 'percentage')\r\n\t                toRet.data[i] = parseFloat(val);\r\n\t            else\r\n\t                toRet.data[i] = val;\r\n\t        }\r\n\t        return toRet;\r\n\t    };\r\n\t\r\n\t    RowEditorPopup.prototype.changed = function () {\r\n\t        var newVal = this.getRow();\r\n\t\r\n\t        if (this.oldVal == null) {\r\n\t            for (var i = 0; i < this.cols.length; i++) {\r\n\t                if (newVal.data[i] != '')\r\n\t                    return true;\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            for (var i = 0; i < this.cols.length; i++) {\r\n\t                if (newVal.data[i] != this.oldVal.data[i])\r\n\t                    return true;\r\n\t            }\r\n\t        }\r\n\t        return false;\r\n\t    };\r\n\t    RowEditorPopup.prototype.destroy = function () {\r\n\t        if (!this.cols)\r\n\t            return;\r\n\t        for (var i = 0; i < this.cols.length; i++)\r\n\t            this.editors[i].destroy();\r\n\t    }\r\n\t\r\n\t    return RowEditorPopup;\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t        __webpack_require__(2),\r\n\t        __webpack_require__(11),\r\n\t        __webpack_require__(14),\r\n\t        __webpack_require__(15),\r\n\t        __webpack_require__(19),\r\n\t        __webpack_require__(20),\r\n\t        __webpack_require__(21),\r\n\t        __webpack_require__(22)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, reBool, reCode, reDate, reMonth, reNumber, reString, reYear) {\r\n\t    var defConfig = {};\r\n\t\r\n\t    var RowEditorFactory = function (config) {\r\n\t        this.config = {};\r\n\t        $.extend(true, this.config, defConfig, config);\r\n\t    };\r\n\t\r\n\t    RowEditorFactory.prototype.create = function (id, config) {\r\n\t        switch (id) {\r\n\t            case 'code':\r\n\t                return new reCode(config);\r\n\t                break;\r\n\t            case 'customCode':\r\n\t                //return new reCustomCode();\r\n\t                break;\r\n\t            case 'year':\r\n\t                return new reYear(config);\r\n\t                break;\r\n\t            case 'month':\r\n\t                return new reMonth(config);\r\n\t                break;\r\n\t            case 'date':\r\n\t                return new reDate(config);\r\n\t                break;\r\n\t            case 'number':\r\n\t            case 'percentage':\r\n\t                return new reNumber(config);\r\n\t                break;\r\n\t            case 'text':\r\n\t                return new reString(config);\r\n\t                break;\r\n\t            case 'bool':\r\n\t                return new reBool(config);\r\n\t                break;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    return RowEditorFactory;\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t        __webpack_require__(2),\r\n\t        __webpack_require__(4),\r\n\t        __webpack_require__(12),\r\n\t        __webpack_require__(13)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, mlRes, rowEditorBase) {\r\n\t    var defConfig = {};\r\n\t\r\n\t    var RowEditor_bool = function (config) {\r\n\t        this.parent.constructor.call(this, config);\r\n\t    };\r\n\t    RowEditor_bool.prototype = Object.create(rowEditorBase.prototype);\r\n\t    RowEditor_bool.prototype.constructor = RowEditor_bool;\r\n\t    RowEditor_bool.prototype.parent = rowEditorBase.prototype;\r\n\t\r\n\t    RowEditor_bool.prototype.render = function (container, config) {\r\n\t        $.extend(true, this.config, config);\r\n\t        this.$cnt = container;\r\n\t        var html = '<input type=\"checkbox\" />';\r\n\t        this.$cnt.html(html);\r\n\t        var me = this;\r\n\t        var $chk = this.$cnt.find('input');\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t        //WAIT for the CSS to be fixed and remove this\r\n\t        $chk.show();\r\n\t\r\n\t\r\n\t\r\n\t        $chk.on('click', function () { me.updateValidationHelp(); });\r\n\t    }\r\n\t    RowEditor_bool.prototype.destroy = function () { this.$cnt.find('input').off('click'); }\r\n\t\r\n\t    RowEditor_bool.prototype.updateValidationHelp = function () {\r\n\t        var error = this.validate();\r\n\t        this.parent.updateValidationHelp.call(this, error);\r\n\t    }\r\n\t    RowEditor_bool.prototype.reset = function () {\r\n\t        this.$cnt.find('input').prop('checked', false);\r\n\t        this.$cnt.popover('destroy');\r\n\t    }\r\n\t    RowEditor_bool.prototype.setValue = function (val) {\r\n\t        this.reset();\r\n\t        this.$cnt.find('input').prop('checked', val);\r\n\t    }\r\n\t    RowEditor_bool.prototype.getValue = function () {\r\n\t        return this.$cnt.find('input').prop('checked');\r\n\t    }\r\n\t    RowEditor_bool.prototype.isMandatory = function (m) {\r\n\t        if (m == 'undefined')\r\n\t            return this.mandatory;\r\n\t        this.mandatory = m;\r\n\t    }\r\n\t    RowEditor_bool.prototype.validate = function () {\r\n\t        /*var val = this.getValue();\r\n\t        var toRet = [];\r\n\t        if (this.mandatory && !val)\r\n\t            return this.ERROR_NULL;*/\r\n\t        return null;\r\n\t    }\r\n\t    RowEditor_bool.prototype.isValid = function () {\r\n\t        if (this.validate() == null)\r\n\t            return true;\r\n\t        return false;\r\n\t    }\r\n\t\r\n\t    return RowEditor_bool;\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t        __webpack_require__(2),\r\n\t        __webpack_require__(4),\r\n\t        __webpack_require__(13)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, mlRes) {\r\n\t    var defConfig = {};\r\n\t\r\n\t    var RowEditor_base = function (config) {\r\n\t        this.config = {};\r\n\t        $.extend(true, this.config, defConfig, config);\r\n\t        this.$cnt;\r\n\t        this.mandatory = false;\r\n\t\r\n\t        this.ERROR_NAN = \"NAN\";\r\n\t        this.ERROR_OUT_OF_RANGE = \"OutOfRange\";\r\n\t        this.ERROR_NULL = \"Null\";\r\n\t    };\r\n\t    RowEditor_base.prototype.updateValidationHelp = function () {\r\n\t        var error = this.validate();\r\n\t        if (error == null) {\r\n\t            this.$cnt.popover('destroy');\r\n\t        }\r\n\t        else {\r\n\t            var errMSG = mlRes[error];\r\n\t            this.$cnt.popover({ container: this.$cnt, content: errMSG, html: true });\r\n\t            this.$cnt.popover('show');\r\n\t        }\r\n\t        /*if (error == null) {\r\n\t            this.$cnt.popover('destroy');\r\n\t        }\r\n\t        else {\r\n\t            var errMSG = mlRes[error];\r\n\t            this.$cnt.popover({ container: this.$cnt, content: errMSG, html: true });\r\n\t            this.$cnt.popover('show');\r\n\t        }*/\r\n\t    };\r\n\t    RowEditor_base.prototype.isMandatory = function (m) {\r\n\t        if (m == 'undefined')\r\n\t            return this.mandatory;\r\n\t        this.mandatory = m;\r\n\t    };\r\n\t    RowEditor_base.prototype.isValid = function () {\r\n\t        if (this.validate() == null)\r\n\t            return true;\r\n\t        return false;\r\n\t    }\r\n\t    return RowEditor_base;\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t        __webpack_require__(2),\r\n\t        __webpack_require__(4),\r\n\t        __webpack_require__(12),\r\n\t        __webpack_require__(13)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, mlRes, rowEditorBase) {\r\n\t    var defConfig = {\r\n\t        elemCode: '<select class=\"%class%\"></select>',\r\n\t        elemClass: \"form-control\",\r\n\t        optionCode: '<span class=\"cl_lev%lev%\">%label%</span>',\r\n\t        emptyEntryValue: \"-\",\r\n\t        emptyEntryLabel: \"-\"\r\n\t    };\r\n\t\r\n\t    var RowEditor_code = function (config) {\r\n\t        this.parent.constructor.call(this, config);\r\n\t        $.extend(true, this.config, defConfig);\r\n\t        this.codelists;\r\n\t        this.$ddl;\r\n\t    }\r\n\t    RowEditor_code.prototype = Object.create(rowEditorBase.prototype);\r\n\t    RowEditor_code.prototype.constructor = RowEditor_code;\r\n\t    RowEditor_code.prototype.parent = rowEditorBase.prototype;\r\n\t\r\n\t    RowEditor_code.prototype.render = function (container, config, codelists) {\r\n\t        $.extend(true, this.config, config);\r\n\t        this.$cnt = container;\r\n\t        this.codelists = codelists;\r\n\t        this.createEditor();\r\n\t    }\r\n\t\r\n\t    RowEditor_code.prototype.createEditor = function () {\r\n\t        var e = defConfig.elemCode.replace('%class%', defConfig.elemClass);\r\n\t        this.$ddl = $(e);\r\n\t        //Err?\r\n\t        if (!this.codelists || !this.codelists[0] || !this.codelists[0].data)\r\n\t            return;\r\n\t        var toApp = $('<option></option>');\r\n\t        toApp.val(this.config.emptyEntryValue);\r\n\t        toApp.html(this.config.emptyEntryLabel);\r\n\t        this.$ddl.append(toApp);\r\n\t\r\n\t        for (var i = 0; i < this.codelists[0].data.length; i++) {\r\n\t            toApp = $('<option></option>').val(this.codelists[0].data[i].code);\r\n\t            toApp.html(_getTitle(this.codelists[0].metadata.levels, this.codelists[0].data[i].level, this.codelists[0].data[i].title));\r\n\t            this.$ddl.append(toApp);\r\n\t        }\r\n\t        this.$cnt.append(this.$ddl);\r\n\t        this._bindEvents();\r\n\t    };\r\n\t\r\n\t    function _getTitle(levels, level, label) {\r\n\t        if (levels == 0)\r\n\t            return title;\r\n\t        var toRet = defConfig.optionCode;\r\n\t        toRet = toRet.replace('%lev%', level);\r\n\t        var blanks = \"\";\r\n\t        switch (level) {\r\n\t            case 2:\r\n\t                blanks = \"&nbsp;\";\r\n\t                break;\r\n\t            case 3:\r\n\t                blanks = \"&nbsp;&nbsp;\";\r\n\t                break;\r\n\t            case 4:\r\n\t                blanks = \"&nbsp;&nbsp;&nbsp;\";\r\n\t                break;\r\n\t            default:\r\n\t                blanks = \"&nbsp;&nbsp;&nbsp;&nbsp;\";\r\n\t                break;\r\n\t        }\r\n\t        return toRet.replace('%label%', blanks + \"\" + label);\r\n\t    };\r\n\t\r\n\t    RowEditor_code.prototype._bindEvents = function () {\r\n\t        var me = this;\r\n\t        this.$cnt.on('select', function () { me.updateValidationHelp(); });\r\n\t    };\r\n\t    RowEditor_code.prototype._unbindEvents = function () {\r\n\t        this.$cnt.off('select');\r\n\t    };\r\n\t\r\n\t    RowEditor_code.prototype.destroy = function () {\r\n\t        this._unbindEvents();\r\n\t        //Is this needed???//this.$cnt.html('');\r\n\t        //this.$cnt.jqxComboBox('destroy');\r\n\t    }\r\n\t    RowEditor_code.prototype.updateValidationHelp = function () {\r\n\t        var error = this.validate();\r\n\t        this.parent.updateValidationHelp.call(this, error);\r\n\t    }\r\n\t    RowEditor_code.prototype.reset = function () {\r\n\t        this.$ddl.val(this.config.emptyEntryValue);\r\n\t        //this.$cnt.jqxComboBox('selectIndex', 0)\r\n\t        //this.$cnt.popover('destroy');\r\n\t    }\r\n\t    RowEditor_code.prototype.setValue = function (val) {\r\n\t        this.reset();\r\n\t        this.$ddl.val(val);\r\n\t        this.updateValidationHelp();\r\n\t    }\r\n\t    RowEditor_code.prototype.getValue = function () {\r\n\t        var toRet = this.$ddl.val();\r\n\t        if (toRet == this.config.emptyEntryValue)\r\n\t            return '';\r\n\t        return toRet;\r\n\t    }\r\n\t    /*RowEditor_code.prototype.getSelectedItem = function () {\r\n\t         //var item = this.$cnt.jqxComboBox('getSelectedItem');\r\n\t         //if (!item)\r\n\t         //    return null;\r\n\t         //return item;\r\n\t    }*/\r\n\t    RowEditor_code.prototype.isMandatory = function (m) {\r\n\t        if (m == 'undefined')\r\n\t            return this.mandatory;\r\n\t        this.mandatory = m;\r\n\t    }\r\n\t    RowEditor_code.prototype.validate = function () {\r\n\t        var val = this.getValue();\r\n\t        if (this.mandatory && !val)\r\n\t            return this.ERROR_NULL;\r\n\t        return null;\r\n\t    }\r\n\t    RowEditor_code.prototype.isValid = function () {\r\n\t        if (this.validate() == null)\r\n\t            return true;\r\n\t        return false;\r\n\t    }\r\n\t\r\n\t    return RowEditor_code;\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t\r\n\t\r\n\t/*\r\n\tdefine([\r\n\t        'jquery',\r\n\t        'jqxall',\r\n\t        'i18n!fx-DataEditor/multiLang/DataEditor/nls/ML_DataEdit',\r\n\t        'fx-DataEditor/js/DataEditor/simpleEditors/rE/RowEditor_base',\r\n\t        'bootstrap'\r\n\t],\r\n\tfunction ($, jqx, mlRes, rowEditorBase) {\r\n\t    var defConfig = {};\r\n\t    var emptyEntryValue = \"-\";\r\n\t    var emptyEntryLabel = \"-\";\r\n\t\r\n\t    var RowEditor_code = function (config) {\r\n\t        this.parent.constructor.call(this, config);\r\n\t        this.codelists;\r\n\t    }\r\n\t    RowEditor_code.prototype = Object.create(rowEditorBase.prototype);\r\n\t    RowEditor_code.prototype.constructor = RowEditor_code;\r\n\t    RowEditor_code.prototype.parent = rowEditorBase.prototype;\r\n\t\r\n\t    RowEditor_code.prototype.render = function (container, config, codelists) {\r\n\t        $.extend(true, this.config, config);\r\n\t        this.$cnt = container;\r\n\t        this.codelists = codelists;\r\n\t        this.createEditor();\r\n\t    }\r\n\t    RowEditor_code.prototype.createEditor = function () {\r\n\t        //TODO make it handle multiple codelists\r\n\t        var codesSrc = {\r\n\t            localdata: this.codelists[0].data, datatype: 'array', datafields: [\r\n\t                { name: 'code', type: 'string' },\r\n\t                { name: 'title', type: 'string' },\r\n\t                { name: 'level', type: 'string' }\r\n\t            ]\r\n\t        };\r\n\t        var codesTextDataAdapter = new $.jqx.dataAdapter(codesSrc);\r\n\t\r\n\t        var me = this;\r\n\t        this.$cnt.jqxComboBox({\r\n\t            source: codesTextDataAdapter,\r\n\t            displayMember: 'title',\r\n\t            valueMember: 'code',\r\n\t            promptText: '',\r\n\t            autoComplete: true,\r\n\t            searchMode: 'containsignorecase',\r\n\t            renderer: function (index, label, value) {\r\n\t                if (me.codelists[0].metadata.levels == 1)\r\n\t                    return label;\r\n\t                if (me.codelists[0].data[index]) {\r\n\t                    switch (me.codelists[0].data[index].level) {\r\n\t                        case 1:\r\n\t                            return '<span class=\"cl_lev1\">' + label + '</span>';\r\n\t                            break;\r\n\t                        case 2:\r\n\t                            return '<span class=\"cl_lev2\">&nbsp;' + label + '</span>';\r\n\t                            break;\r\n\t                        case 3:\r\n\t                            return '<span class=\"cl_lev3\">&nbsp;&nbsp;' + label + '</span>';\r\n\t                            break;\r\n\t                        case 4:\r\n\t                            return '<span class=\"cl_lev4\">&nbsp;&nbsp;&nbsp;' + label + '</span>';\r\n\t                            break;\r\n\t                        default:\r\n\t                            return '<span class=\"cl_lev5\">&nbsp;&nbsp;&nbsp;&nbsp;' + label + '</span>';\r\n\t                            break;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        });\r\n\t\r\n\t        this.$cnt.jqxComboBox('insertAt', { label: emptyEntryLabel, value: emptyEntryValue }, 0);\r\n\t        this.$cnt.on('select', function () { me.updateValidationHelp(); });\r\n\t    }\r\n\t    RowEditor_code.prototype.destroy = function () {\r\n\t        this.$cnt.jqxComboBox('destroy');\r\n\t        this.$cnt.off('select');\r\n\t    }\r\n\t    RowEditor_code.prototype.updateValidationHelp = function () {\r\n\t        var error = this.validate();\r\n\t        this.parent.updateValidationHelp.call(this, error);\r\n\t    }\r\n\t    RowEditor_code.prototype.reset = function () {\r\n\t        this.$cnt.jqxComboBox('selectIndex', 0)\r\n\t        this.$cnt.popover('destroy');\r\n\t    }\r\n\t    RowEditor_code.prototype.setValue = function (val) {\r\n\t        this.reset();\r\n\t        if (!val)\r\n\t            val = emptyEntryValue;\r\n\t        var items = this.$cnt.jqxComboBox('getItems');\r\n\t        for (var i = 0; i < items.length; i++)\r\n\t            if (items[i].value == val) {\r\n\t                this.$cnt.jqxComboBox('selectIndex', i);\r\n\t            }\r\n\t        this.updateValidationHelp();\r\n\t    }\r\n\t    RowEditor_code.prototype.getValue = function () {\r\n\t        var item = this.$cnt.jqxComboBox('getSelectedItem');\r\n\t        if (!item)\r\n\t            return null;\r\n\t        if (item.value == emptyEntryValue)\r\n\t            return null;\r\n\t        return item.value;\r\n\t    }\r\n\t    RowEditor_code.prototype.getSelectedItem = function () {\r\n\t        var item = this.$cnt.jqxComboBox('getSelectedItem');\r\n\t        if (!item)\r\n\t            return null;\r\n\t        return item;\r\n\t    }\r\n\t    RowEditor_code.prototype.isMandatory = function (m) {\r\n\t        if (m == 'undefined')\r\n\t            return this.mandatory;\r\n\t        this.mandatory = m;\r\n\t    }\r\n\t    RowEditor_code.prototype.validate = function () {\r\n\t        var val = this.getValue();\r\n\t        if (this.mandatory && !val)\r\n\t            return this.ERROR_NULL;\r\n\t        return null;\r\n\t    }\r\n\t    RowEditor_code.prototype.isValid = function () {\r\n\t        if (this.validate() == null)\r\n\t            return true;\r\n\t        return false;\r\n\t    }\r\n\t\r\n\t    return RowEditor_code;\r\n\t});*/\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t        __webpack_require__(2),\r\n\t        __webpack_require__(16),\r\n\t        __webpack_require__(4),\r\n\t        __webpack_require__(12),\r\n\t        __webpack_require__(17),\r\n\t        __webpack_require__(18),\r\n\t        __webpack_require__(13)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, datetimepicker, mlRes, rowEditorBase, RowEditorTimeHTML) {\r\n\t    var defConfig = { yMin: 0, yMax: 3000 };\r\n\t    var h = {\r\n\t        inputTime: '#inputTime'\r\n\t    };\r\n\t\r\n\t    var RowEditor_date = function (config) {\r\n\t        this.parent.constructor.call(this, config);\r\n\t        $.extend(true, this.config, defConfig);\r\n\t        this.$datePicker;\r\n\t    };\r\n\t    RowEditor_date.prototype = Object.create(rowEditorBase.prototype);\r\n\t    RowEditor_date.prototype.constructor = rowEditorBase;\r\n\t    RowEditor_date.prototype.parent = rowEditorBase.prototype;\r\n\t\r\n\t    RowEditor_date.prototype.render = function (container, config) {\r\n\t        $.extend(true, this.config, config);\r\n\t        this.$cnt = container;\r\n\t        this.$cnt.html(RowEditorTimeHTML);\r\n\t\r\n\t        this.$datePicker = this.$cnt.find('#inputTime');\r\n\t        this.$datePicker.datetimepicker({ viewMode: 'days', locale: 'en', format: \"DD/MM/YYYY\" });\r\n\t        var me = this;\r\n\t        this.$cnt.on('change', function () { me.updateValidationHelp(); });\r\n\t    };\r\n\t    RowEditor_date.prototype.destroy = function () {\r\n\t        this.$datePicker.data(\"DateTimePicker\").destroy();\r\n\t        this.$datePicker.off('change');\r\n\t    };\r\n\t    /*RowEditor_date.prototype.updateValidationHelp = function () {\r\n\t        var error = this.validate();\r\n\t        this.parent.updateValidationHelp.call(this, error);\r\n\t    };*/\r\n\t\r\n\t    RowEditor_date.prototype.reset = function () {\r\n\t        this.$datePicker.data(\"DateTimePicker\").clear();\r\n\t        //this.$cnt.popover('destroy');\r\n\t    };\r\n\t    RowEditor_date.prototype.setValue = function (val) {\r\n\t        this.reset();\r\n\t        if (val) {\r\n\t            val = \"\" + val;\r\n\t            var d = val.substring(6, 8);\r\n\t            var m = val.substring(4, 6);\r\n\t            m = m - 1;\r\n\t            var y = val.substring(0, 4);\r\n\t            this.$datePicker.data('DateTimePicker').date(new Date(y, m, d));\r\n\t        }\r\n\t    };\r\n\t    RowEditor_date.prototype.getValue = function () {\r\n\t        var dt = this.$datePicker.data('DateTimePicker').date();\r\n\t        if (!dt)\r\n\t            return '';\r\n\t        var d = \"\" + dt.date();\r\n\t        var m = \"\" + (dt.month() + 1);\r\n\t        var y = \"\" + dt.year();\r\n\t        if (d.length == 1)\r\n\t            d = \"0\" + d;\r\n\t        if (m.length == 1)\r\n\t            m = \"0\" + m;\r\n\t        while (y.length < 4)\r\n\t            y = \"0\" + y;\r\n\t        return y + m + d;\r\n\t    };\r\n\t    /*RowEditor_date.prototype.isMandatory = function (m) {\r\n\t        if (m == 'undefined')\r\n\t            return this.mandatory;\r\n\t        this.mandatory = m;\r\n\t    }*/\r\n\t\r\n\t    RowEditor_date.prototype.validate = function () {\r\n\t        var val = this.getValue();\r\n\t        if (this.mandatory && !val)\r\n\t            return this.ERROR_NULL;\r\n\t        var y = val.substring(4, 8);\r\n\t        if (y < this.config.yMin) return this.ERROR_OUT_OF_RANGE;\r\n\t        if (y > this.config.yMax) return this.ERROR_OUT_OF_RANGE;\r\n\t        return null;\r\n\t    };\r\n\t    /*RowEditor_date.prototype.isValid = function () {\r\n\t        if (this.validate() == null)\r\n\t            return true;\r\n\t        return false;\r\n\t    }*/\r\n\t\r\n\t    return RowEditor_date;\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t\r\n\t\r\n\t/*\r\n\tdefine([\r\n\t        'jquery',\r\n\t        'jqxall',\r\n\t        'i18n!fx-DataEditor/multiLang/DataEditor/nls/ML_DataEdit',\r\n\t        'fx-DataEditor/js/DataEditor/simpleEditors/rE/RowEditor_base',\r\n\t        'bootstrap'\r\n\t],\r\n\tfunction ($, jqx, mlRes, rowEditorBase) {\r\n\t    var defConfig = { yMin: 0, yMax: 3000 };\r\n\t\r\n\t    var RowEditor_date = function (config) {\r\n\t        this.parent.constructor.call(this, config);\r\n\t    };\r\n\t    RowEditor_date.prototype = Object.create(rowEditorBase.prototype);\r\n\t    RowEditor_date.prototype.constructor = RowEditor_date;\r\n\t    RowEditor_date.prototype.parent = rowEditorBase.prototype;\r\n\t\r\n\t    RowEditor_date.prototype.render = function (container, config) {\r\n\t        $.extend(true, this.config, config);\r\n\t        this.$cnt = container;\r\n\t\r\n\t        this.$cnt.jqxCalendar();\r\n\t        var me = this;\r\n\t        this.$cnt.on('change', function () { me.updateValidationHelp(); });\r\n\t    }\r\n\t    RowEditor_date.prototype.destroy = function () {\r\n\t        this.$cnt.jqxCalendar('destroy');\r\n\t        this.$cnt.off('change');\r\n\t    }\r\n\t    RowEditor_date.prototype.updateValidationHelp = function () {\r\n\t        var error = this.validate();\r\n\t        this.parent.updateValidationHelp.call(this, error);\r\n\t    }\r\n\t\r\n\t    RowEditor_date.prototype.reset = function () {\r\n\t        this.$cnt.jqxCalendar('clear');\r\n\t        this.$cnt.popover('destroy');\r\n\t    }\r\n\t    RowEditor_date.prototype.setValue = function (val) {\r\n\t        this.reset();\r\n\t        if (val) {\r\n\t            val = \"\" + val;\r\n\t            var d = val.substring(6, 8);\r\n\t            var m = val.substring(4, 6);\r\n\t            m = m - 1;\r\n\t            var y = val.substring(0, 4);\r\n\t            this.$cnt.jqxCalendar('setDate', new Date(y, m, d));\r\n\t        }\r\n\t\r\n\t    }\r\n\t    RowEditor_date.prototype.getValue = function () {\r\n\t        var dt = this.$cnt.jqxCalendar('getDate');\r\n\t        if (!dt)\r\n\t            return null;\r\n\t        var d = \"\" + dt.getDate();\r\n\t        var m = \"\" + (dt.getMonth() + 1);\r\n\t        var y = \"\" + dt.getFullYear();\r\n\t        if (d.length == 1)\r\n\t            d = \"0\" + d;\r\n\t        if (m.length == 1)\r\n\t            m = \"0\" + m;\r\n\t        while (y.length < 4)\r\n\t            y = \"0\" + y;\r\n\t        return y + m + d;\r\n\t    }\r\n\t    RowEditor_date.prototype.isMandatory = function (m) {\r\n\t        if (m == 'undefined')\r\n\t            return this.mandatory;\r\n\t        this.mandatory = m;\r\n\t    }\r\n\t\r\n\t    RowEditor_date.prototype.validate = function () {\r\n\t        var val = this.getValue();\r\n\t        if (this.mandatory && !val)\r\n\t            return this.ERROR_NULL;\r\n\t        var y = val.substring(4, 8);\r\n\t        if (y < this.config.yMin) return this.ERROR_OUT_OF_RANGE;\r\n\t        if (y > this.config.yMax) return this.ERROR_OUT_OF_RANGE;\r\n\t        return null;\r\n\t    }\r\n\t    RowEditor_date.prototype.isValid = function () {\r\n\t        if (this.validate() == null)\r\n\t            return true;\r\n\t        return false;\r\n\t    }\r\n\t\r\n\t    return RowEditor_date;\r\n\t});\r\n\t*/\r\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_16__;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"input-group date\\\" id=inputTime> <input type=text class=form-control /> <span class=input-group-addon> <span class=\\\"glyphicon glyphicon-calendar\\\"></span> </span> </div>\";\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_18__;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t        __webpack_require__(2),\r\n\t        __webpack_require__(4),\r\n\t        __webpack_require__(15),\r\n\t        __webpack_require__(13)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, mlRes, rowEditorDate) {\r\n\t    var defConfig = { yMin: 0, yMax: 3000 };\r\n\t\r\n\t    var RowEditor_month = function (config) {\r\n\t        this.parent.constructor.call(this, config);\r\n\t    };\r\n\t    RowEditor_month.prototype = Object.create(rowEditorDate.prototype);\r\n\t    RowEditor_month.prototype.constructor = rowEditorDate;\r\n\t    RowEditor_month.prototype.parent = rowEditorDate.prototype;\r\n\t\r\n\t    RowEditor_month.prototype.render = function (container, config) {\r\n\t        $.extend(true, this.config, config);\r\n\t        this.parent.render.call(this, container, config);\r\n\t        this.$datePicker.data(\"DateTimePicker\").format(\"MM/YYYY\");\r\n\t        this.$datePicker.data(\"DateTimePicker\").viewMode(\"months\");\r\n\t    };\r\n\t    RowEditor_month.prototype.setValue = function (val) {\r\n\t        this.reset();\r\n\t        if (val) {\r\n\t            var y = val.substring(0, 4) + \"\";\r\n\t            var m = val.substring(4, 6) + \"\";\r\n\t            m = m - 1;\r\n\t            this.$datePicker.data('DateTimePicker').date(new Date(y, m, 1));\r\n\t        }\r\n\t    };\r\n\t    RowEditor_month.prototype.getValue = function () {\r\n\t        var dt = this.$datePicker.data('DateTimePicker').date();\r\n\t        if (!dt)\r\n\t            return '';\r\n\t        var m = \"\" + (dt.month() + 1);\r\n\t        var y = \"\" + dt.year();\r\n\t        if (m.length == 1)\r\n\t            m = \"0\" + m;\r\n\t        while (y.length < 4)\r\n\t            y = \"0\" + y;\r\n\t        return y + m;\r\n\t    };\r\n\t    RowEditor_month.prototype.validate = function () {\r\n\t        var val = this.getValue();\r\n\t        if (this.mandatory && !val)\r\n\t            return this.ERROR_NULL;\r\n\t        if (!val)\r\n\t            return null;\r\n\t        var y = val.substring(0, 4);\r\n\t        var m = val.substring(4, 6);\r\n\t        if (this.mandatory && (m == '' || y == ''))\r\n\t            return this.ERROR_NULL;\r\n\t        if (y < this.config.yMin || y > this.config.yMax)\r\n\t            return this.ERROR_OUT_OF_RANGE;\r\n\t        if (m == '' && y == '') {\r\n\t            return null;\r\n\t        }\r\n\t    };\r\n\t    return RowEditor_month;\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t        __webpack_require__(2),\r\n\t        __webpack_require__(4),\r\n\t        __webpack_require__(12),\r\n\t        __webpack_require__(13)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, mlRes, rowEditorBase) {\r\n\t    var defConfig = {\r\n\t        decimalDigits: 5,\r\n\t        html: '<input type=\"input\" class=\"form-control\">'\r\n\t    };\r\n\t\r\n\t    var RowEditor_number = function (config) {\r\n\t        this.parent.constructor.call(this, config);\r\n\t        $.extend(true, this.config, defConfig);\r\n\t        this.$cnt;\r\n\t        this.$txt;\r\n\t    };\r\n\t    RowEditor_number.prototype = Object.create(rowEditorBase.prototype);\r\n\t    RowEditor_number.prototype.constructor = RowEditor_number;\r\n\t    RowEditor_number.prototype.parent = rowEditorBase.prototype;\r\n\t\r\n\t    RowEditor_number.prototype.render = function (container, config) {\r\n\t        $.extend(true, this.config, config);\r\n\t        this.$cnt = container;\r\n\t        this.$cnt.html(this.config.html);\r\n\t        this.$txt = this.$cnt.find('input');\r\n\t        var me = this;\r\n\t        this.$cnt.on('valueChanged', function () { me.updateValidationHelp(); });\r\n\t    }\r\n\t    RowEditor_number.prototype.destroy = function () {\r\n\t        this.$cnt.off('valueChanged');\r\n\t    }\r\n\t    RowEditor_number.prototype.updateValidationHelp = function () {\r\n\t        var error = this.validate();\r\n\t        this.parent.updateValidationHelp.call(this, error);\r\n\t    }\r\n\t    RowEditor_number.prototype.reset = function () {\r\n\t        this.$txt.val('');\r\n\t        this.$cnt.popover('destroy');\r\n\t    }\r\n\t    RowEditor_number.prototype.setValue = function (val) {\r\n\t        this.reset();\r\n\t        this.$txt.val(val);\r\n\t    }\r\n\t    RowEditor_number.prototype.getValue = function () {\r\n\t        var toRet = this.$txt.val().trim();\r\n\t        return toRet;\r\n\t    }\r\n\t    RowEditor_number.prototype.isMandatory = function (m) {\r\n\t        if (m == 'undefined')\r\n\t            return this.mandatory;\r\n\t        this.mandatory = m;\r\n\t    }\r\n\t\r\n\t    RowEditor_number.prototype.validate = function () {\r\n\t        var val = this.getValue();\r\n\t        if (val != '') {\r\n\t            if (isNaN(val))\r\n\t                return this.ERROR_NAN;\r\n\t        }\r\n\t        else {\r\n\t            if (this.mandatory)\r\n\t                return this.ERROR_NULL;\r\n\t        }\r\n\t        return null;\r\n\t    }\r\n\t    RowEditor_number.prototype.isValid = function () {\r\n\t        if (this.validate() == null)\r\n\t            return true;\r\n\t        return false;\r\n\t    }\r\n\t\r\n\t    return RowEditor_number;\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t        __webpack_require__(2),\r\n\t        __webpack_require__(4),\r\n\t        __webpack_require__(12),\r\n\t        __webpack_require__(13)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, mlRes, rowEditorBase) {\r\n\t    var defConfig = {\r\n\t        html: '<input type=\"text\" class=\"form-control\">'\r\n\t    };\r\n\t    var ERROR_NULL = \"Null\";\r\n\t\r\n\t    var RowEditor_string = function (config) {\r\n\t        this.parent.constructor.call(this, config, defConfig);\r\n\t        $.extend(true, this.config, defConfig);\r\n\t        this.$cnt;\r\n\t        this.txt;\r\n\t        //this.$cnt;\r\n\t    };\r\n\t    RowEditor_string.prototype = Object.create(rowEditorBase.prototype);\r\n\t    RowEditor_string.prototype.constructor = RowEditor_string;\r\n\t    RowEditor_string.prototype.parent = rowEditorBase.prototype;\r\n\t\r\n\t    RowEditor_string.prototype.render = function (container, config) {\r\n\t        $.extend(true, this.config, config);\r\n\t        this.$cnt = container;\r\n\t        this.$cnt.html(this.config.html);\r\n\t        this.txt = this.$cnt.find('input');\r\n\t        var me = this;\r\n\t        this.$cnt.on('valueChanged', function () { me.updateValidationHelp(); });\r\n\t    };\r\n\t    RowEditor_string.prototype.destroy = function () {\r\n\t        this.$cnt.off('valuechanged');\r\n\t    };\r\n\t    RowEditor_string.prototype.updateValidationHelp = function () {\r\n\t        var error = this.validate();\r\n\t        this.parent.updateValidationHelp.call(this, error);\r\n\t    };\r\n\t    RowEditor_string.prototype.reset = function () {\r\n\t        this.txt.val('');\r\n\t        this.$cnt.popover('destroy');\r\n\t    };\r\n\t    RowEditor_string.prototype.setValue = function (val) {\r\n\t        this.reset();\r\n\t        this.txt.val(val);\r\n\t    };\r\n\t    RowEditor_string.prototype.getValue = function () {\r\n\t        return this.txt.val().trim();\r\n\t    };\r\n\t    RowEditor_string.prototype.isMandatory = function (m) {\r\n\t        if (m == 'undefined')\r\n\t            return this.mandatory;\r\n\t        this.mandatory = m;\r\n\t    };\r\n\t    RowEditor_string.prototype.validate = function () {\r\n\t        var val = this.getValue();\r\n\t        if (this.mandatory && val.trim() == '')\r\n\t            return this.ERROR_NULL;\r\n\t        return null;\r\n\t    };\r\n\t    RowEditor_string.prototype.isValid = function () {\r\n\t        if (this.validate() == null)\r\n\t            return true;\r\n\t        return false;\r\n\t    };\r\n\t\r\n\t    return RowEditor_string;\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t        __webpack_require__(2),\r\n\t        __webpack_require__(4),\r\n\t        __webpack_require__(15),\r\n\t        __webpack_require__(13)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, mlRes, rowEditorDate) {\r\n\t    var defConfig = { yMin: 0, yMax: 3000 };\r\n\t\r\n\t    var RowEditor_year = function (config) {\r\n\t        this.parent.constructor.call(this, config);\r\n\t    };\r\n\t    RowEditor_year.prototype = Object.create(rowEditorDate.prototype);\r\n\t    RowEditor_year.prototype.constructor = rowEditorDate;\r\n\t    RowEditor_year.prototype.parent = rowEditorDate.prototype;\r\n\t\r\n\t    RowEditor_year.prototype.render = function (container, config) {\r\n\t        $.extend(true, this.config, config);\r\n\t        this.parent.render.call(this, container, config);\r\n\t        this.$datePicker.data(\"DateTimePicker\").format(\"YYYY\");\r\n\t        this.$datePicker.data(\"DateTimePicker\").viewMode(\"years\");\r\n\t    };\r\n\t    RowEditor_year.prototype.setValue = function (val) {\r\n\t        this.reset();\r\n\t        if (val) {\r\n\t            this.$datePicker.data('DateTimePicker').date(new Date(val, 0, 1));\r\n\t        }\r\n\t    };\r\n\t    RowEditor_year.prototype.getValue = function () {\r\n\t        var dt = this.$datePicker.data('DateTimePicker').date();\r\n\t        if (!dt)\r\n\t            return '';\r\n\t        return \"\" + dt.year();\r\n\t    };\r\n\t    RowEditor_year.prototype.validate = function () {\r\n\t        var val = this.getValue();\r\n\t        if (this.mandatory && !val) \r\n\t            return this.ERROR_NULL;\r\n\t        if (!val)\r\n\t            return null;\r\n\t        if (val < this.config.yMin)\r\n\t            return this.ERROR_OUT_OF_RANGE;\r\n\t        if (val > this.config.yMax)\r\n\t            return this.ERROR_OUT_OF_RANGE;\r\n\t    };\r\n\t\r\n\t    return RowEditor_year;\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=divRowEditorPopup class=modal data-backdrop=false> <div class=\\\"modal-dialog modal-lg\\\"> <div class=modal-content> <div class=modal-body> <table id=tblRowEditor> <tbody></tbody> </table> </div> <div class=modal-footer> <button id=btnEditRowCanc type=button class=\\\"btn btn-default\\\"><span class=\\\"glyphicon glyphicon-remove\\\"></span></button> <button id=btnEditRowOk type=button class=\\\"btn btn-primary\\\"><span class=\\\"glyphicon glyphicon-ok\\\"></span></button> </div> </div> </div> </div> <div id=divDataGrid> <table id=tblData class=\\\"table table-bordered table-condensed\\\"> <thead> <tr id=tblDataHead></tr> </thead> <tbody id=tblDataBody></tbody> </table> </div>\";\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t//Used to get the string in a multilanguage text structure\r\n\t//It returns:\r\n\t//The string for the langCode passed\r\n\t//If not found returns the EN string\r\n\t//If not found returns the first language available\r\n\tvar MLUtils_getAvailableString = function (ml, lang) {\r\n\t    var lCode = MLUtils_getAvailableLang(ml, lang);\r\n\t    if (lCode == \"\")\r\n\t        return \"\";\r\n\t    return ml[lCode];\r\n\t}\r\n\t\r\n\tvar MLUtils_getAvailableLang = function (ml, lang) {\r\n\t    if (!ml)\r\n\t        return \"\";\r\n\t    if (!lang)\r\n\t        lang = 'EN';\r\n\t    lang = lang.toUpperCase();\r\n\t    if (lang in ml)\r\n\t        return lang;\r\n\t    if ('EN' in ml)\r\n\t        return 'EN';\r\n\t    for (var langs in ml)\r\n\t        return langs;\r\n\t}\r\n\t\r\n\tvar MLUtils_getAllMultilanguageString = function (ml, divChar) {\r\n\t    if (!ml)\r\n\t        return \"\";\r\n\t    var toRet = \"\";\r\n\t    if (divChar == undefined)\r\n\t        divChar = \",\";\r\n\t    for (var k in ml)\r\n\t        if (toRet == \"\")\r\n\t            toRet = '[' + k + '] ' + ml[k];\r\n\t        else\r\n\t            toRet = toRet + divChar + '[' + k + '] ' + ml[k];\r\n\t    return toRet;\r\n\t}\r\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_25__;\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t__webpack_require__(2),\r\n\t __webpack_require__(4)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, mlRes) {\r\n\t\r\n\t\r\n\t    var ValidationResultsViewer = function (lang) {\r\n\t        this.lang = lang;\r\n\t        this.$valResGrid;\r\n\t    };\r\n\t\r\n\t    //Render - creation\r\n\t    ValidationResultsViewer.prototype.render = function (container) {\r\n\t        this.$valResGrid = container;\r\n\t    }\r\n\t\r\n\t    ValidationResultsViewer.prototype.setValidationResults = function (valRes) {\r\n\t        this.$valResGrid.html();\r\n\t        if (!valRes)  return;\r\n\t        var toAdd = \"\";\r\n\t\r\n\t        console.log(this.lang,mlRes);\r\n\t\r\n\t        toAdd = '<table><tbody>';\r\n\t\r\n\t        for (var i = 0; i < valRes.length; i++) {\r\n\t            toAdd += '<tr><td>';\r\n\t            toAdd += mlRes[this.lang.toLowerCase()][valRes[i].error];\r\n\t            if (valRes[i].dataIndex)\r\n\t                toAdd += \" line: \" + valRes[i].dataIndex;\r\n\t            toAdd += '</tr></td>';\r\n\t            //toAdd += \"</br>\";\r\n\t        }\r\n\t        toAdd += '</table></tbody>';\r\n\t\r\n\t        this.$valResGrid.html(toAdd);\r\n\t    }\r\n\t\r\n\t    return ValidationResultsViewer;\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2),\r\n\t    __webpack_require__(28)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, clUtils) {\r\n\t\r\n\t        var MSG_NULL_KEY = 'nullKey';\r\n\t        var MSG_SAME_KEY_VALS = 'sameKeyVals';\r\n\t        var MSG_UNKNOWN_CODE = 'unknownCode';\r\n\t        var MSG_INVALID_YEAR = 'invalidYear';\r\n\t        var MSG_INVALID_MONTH = 'invalidMonth';\r\n\t        var MSG_INVALID_DATE = 'invalidDate';\r\n\t        var MSG_INVALID_NUMBER = 'invalidNumber';\r\n\t        var MSG_INVALID_BOOL = 'invalidBool';\r\n\t\r\n\t        //Columns/headers validation\r\n\t        function Data_Validator() { };\r\n\t\r\n\t        Data_Validator.prototype.validate = function (cols, codelists, data) {\r\n\t            var toRet = [];\r\n\t\r\n\t            var emptyKeyVals = this.checkEmptyKeyVals(cols, data);\r\n\t            var duplicateKeyVals = this.checkDuplicateKeyVals(cols, data);\r\n\t            var wrongDataTypes = this.checkWrongDataTypes(cols, codelists, data);\r\n\t            var valueFlags = this.checkValueFlags();\r\n\t\r\n\t            if (emptyKeyVals && emptyKeyVals.length > 0)\r\n\t                arrConcat(toRet, emptyKeyVals);\r\n\t            if (duplicateKeyVals && duplicateKeyVals.length > 0)\r\n\t                arrConcat(toRet, duplicateKeyVals);\r\n\t            if (wrongDataTypes && wrongDataTypes.length > 0)\r\n\t                arrConcat(toRet, wrongDataTypes);\r\n\t            if (valueFlags && valueFlags.length > 0)\r\n\t                arrConcat(toRet, valueFlags);\r\n\t\r\n\t            return toRet;\r\n\t        }\r\n\t\r\n\t        Data_Validator.prototype.checkEmptyKeyVals = function (cols, data) {\r\n\t            if (!cols || !data)\r\n\t                return null;\r\n\t            var toRet = [];\r\n\t            for (var i = 0; i < data.length; i++)\r\n\t                for (var c = 0; c < cols.length; c++) {\r\n\t                    if (cols[c].key) {\r\n\t                        if (!data[i][c])\r\n\t                            toRet.push({ error: MSG_NULL_KEY, colId: cols[c].id, dataIndex: i });\r\n\t                    }\r\n\t                }\r\n\t\r\n\t            return toRet;\r\n\t        }\r\n\t\r\n\t        Data_Validator.prototype.checkDuplicateKeyVals = function (cols, data) {\r\n\t            if (!cols || !data)\r\n\t                return null;\r\n\t\r\n\t            var toRet = [];\r\n\t\r\n\t            for (var r1 = 0; r1 < data.length - 1; r1++)\r\n\t                for (var r2 = r1 + 1; r2 < data.length; r2++)\r\n\t                    if (sameDimVals(data[r1], data[r2], cols)) {\r\n\t                        toRet.push({ error: MSG_SAME_KEY_VALS, dataIndex: r1 });\r\n\t                        toRet.push({ error: MSG_SAME_KEY_VALS, dataIndex: r2 });\r\n\t                    }\r\n\t\r\n\t            return toRet;\r\n\t        }\r\n\t\r\n\t        var sameDimVals = function (row1, row2, cols) {\r\n\t            for (var d = 0; d < cols.length; d++) {\r\n\t                if (cols[d].key)\r\n\t                    if (row1[d] != row2[d]) {\r\n\t                        return false;\r\n\t                    }\r\n\t            }\r\n\t            return true;\r\n\t        }\r\n\t\r\n\t        Data_Validator.prototype.checkWrongDataTypes = function (cols, codelists, data) {\r\n\t            if (!cols || !data)\r\n\t                return null;\r\n\t\r\n\t            var toRet = [];\r\n\t            for (var i = 0; i < data.length; i++) {\r\n\t                arrConcat(toRet, checkRowDataTypes(cols, codelists, data[i], i));\r\n\t            }\r\n\t            return toRet;\r\n\t\r\n\t            /*var colInfo = {};\r\n\t            for (var c = 0; c < cols.length; c++) \r\n\t\r\n\t                if (cols[c].dataType)\r\n\t                    colInfo[cols[c].id] = { dataType: cols[c].dataType, domain: cols[c].domain, codes: cols[c].codes };\r\n\t            }\r\n\t            var toRet = [];\r\n\t            for (var i = 0; i < data.length; i++) {\r\n\t                arrConcat(toRet, checkRowDataTypes(colInfo, data[i], i));\r\n\t            }\r\n\t            return toRet;*/\r\n\t        }\r\n\t\r\n\t        var checkRowDataTypes = function (cols, codelists, dataRow, rowIdx) {\r\n\t            var toRet = [];\r\n\t            for (var d = 0; d < cols.length; d++) {\r\n\t                switch (cols[d].dataType) {\r\n\t                    case 'code':\r\n\t                        var cListUID = cols[d].domain.codes[0].idCodeList;\r\n\t                        if (cols[d].domain.codes[0].version)\r\n\t                            cListUID = cListUID + \"|\" + cols[d].domain.codes[0].version;\r\n\t                        if (!checkCode(dataRow[d], codelists[cListUID]))\r\n\t                            toRet.push({ error: MSG_UNKNOWN_CODE, dataIndex: rowIdx, colId: cols[d].id });\r\n\t                        break;\r\n\t                    case 'year':\r\n\t                        if (!checkYear(dataRow[d]))\r\n\t                            toRet.push({ error: MSG_INVALID_YEAR, dataIndex: rowIdx, colId: cols[d].id });\r\n\t                        else {\r\n\t                            if (cols[d].domain && cols[d].domain.period) {\r\n\t                                if (cols[d].domain.period.from)//Check from\r\n\t                                    if (dataRow[d] < cols[d].domain.period.from)\r\n\t                                        toRet.push({ error: MSG_INVALID_YEAR, dataIndex: rowIdx, colId: cols[d].id, yearLimitFrom: cols[d].domain.period.from, yearValue: dataRow[d] });\r\n\t                                if (cols[d].domain.period.to) //Check to\r\n\t                                    if (dataRow[d] > cols[d].domain.period.to)\r\n\t                                        toRet.push({ error: MSG_INVALID_YEAR, dataIndex: rowIdx, colId: cols[d].id, yearLimitTo: cols[d].domain.period.to, yearValue: dataRow[d] });\r\n\t                            }\r\n\t                        }\r\n\t                        break;\r\n\t                    case 'month':\r\n\t                        if (!checkMonth(dataRow[d]))\r\n\t                            toRet.push({ error: MSG_INVALID_MONTH, dataIndex: rowIdx, colId: cols[d].id });\r\n\t                        break;\r\n\t                    case 'date':\r\n\t                        if (!checkDate(dataRow[d]))\r\n\t                            toRet.push({ error: MSG_INVALID_DATE, dataIndex: rowIdx, colId: cols[d].id });\r\n\t                        break;\r\n\t                    case 'customCode':\r\n\t                        //TODO: Check custom code\r\n\t                        break;\r\n\t                    case 'number':\r\n\t                    case 'percentage':\r\n\t                        if (!checkNumber(dataRow[d]))\r\n\t                            toRet.push({ error: MSG_INVALID_NUMBER, dataIndex: rowIdx, colId: d });\r\n\t                        break;\r\n\t                    case 'bool':\r\n\t                        if (!checkBool(dataRow[d]))\r\n\t                            toRet.push({ error: MSG_INVALID_BOOL, dataIndex: rowIdx, colId: d });\r\n\t                        break;\r\n\t                }\r\n\t            }\r\n\t            return toRet;\r\n\t        }\r\n\t\r\n\t        /*var checkRowDataTypes = function (colInfo, dataRow, rowIdx) {\r\n\t            var toRet = [];\r\n\t            //for (var d in data) {\r\n\t            for (var d = 0; d < dataRow.length; d++) {\r\n\t                if (!colInfo[d])\r\n\t                    continue;\r\n\t\r\n\t                switch (colInfo[d].dataType) {\r\n\t                    case 'code':\r\n\t                        if (!checkCode(data[d], colInfo[d].codes))\r\n\t                            toRet.push({ error: MSG_UNKNOWN_CODE, dataIndex: rowIdx, colId: d });\r\n\t                        break;\r\n\t                    case 'year':\r\n\t                        if (!checkYear(data[d]))\r\n\t                            toRet.push({ error: MSG_INVALID_YEAR, dataIndex: rowIdx, colId: d });\r\n\t                        else {\r\n\t                            if (colInfo[d].domain && colInfo[d].domain.period) {\r\n\t                                if (colInfo[d].domain.period.from)//Check from\r\n\t                                    if (data[d] < colInfo[d].domain.period.from)\r\n\t                                        toRet.push({ error: MSG_INVALID_YEAR, dataIndex: rowIdx, colId: d, yearLimitFrom: colInfo[d].domain.period.from, yearValue: data[d] });\r\n\t                                if (colInfo[d].domain.period.to) //Check to\r\n\t                                    if (data[d] > colInfo[d].domain.period.to)\r\n\t                                        toRet.push({ error: MSG_INVALID_YEAR, dataIndex: rowIdx, colId: d, yearLimitTo: colInfo[d].domain.period.to, yearValue: data[d] });\r\n\t                            }\r\n\t                        }\r\n\t                        break;\r\n\t                    case 'month':\r\n\t                        if (!checkMonth(data[d]))\r\n\t                            toRet.push({ error: MSG_INVALID_MONTH, dataIndex: rowIdx, colId: d });\r\n\t                        break;\r\n\t                    case 'date':\r\n\t                        if (!checkDate(data[d]))\r\n\t                            toRet.push({ error: MSG_INVALID_DATE, dataIndex: rowIdx, colId: d });\r\n\t                        break;\r\n\t                    case 'customCode':\r\n\t                        //TODO: Check custom code\r\n\t                        break;\r\n\t                    case 'number':\r\n\t                    case 'percentage':\r\n\t                        if (!checkNumber(data[d]))\r\n\t                            toRet.push({ error: MSG_INVALID_NUMBER, dataIndex: rowIdx, colId: d });\r\n\t                        break;\r\n\t                    case 'bool':\r\n\t                        if (!checkBool(data[d]))\r\n\t                            toRet.push({ error: MSG_INVALID_BOOL, dataIndex: rowIdx, colId: d });\r\n\t                        break;\r\n\t                }\r\n\t            }\r\n\t            return toRet;\r\n\t        }*/\r\n\t\r\n\t        var checkCode = function (code, codelist) {\r\n\t\r\n\t            var clU = new clUtils();\r\n\t            var code = clU.findCodeInCodelist(code, codelist);\r\n\t            if (code == null)\r\n\t                return false;\r\n\t            return true;\r\n\t\r\n\t            /*\r\n\t            if (!code)\r\n\t                return true;\r\n\t            if (!codelist)\r\n\t                return true;\r\n\t            if (isInCodelist(codelist, code))\r\n\t            {\r\n\t                return true;\r\n\t            }\r\n\t            for (var i = 0; i < codelist.data.length; i++)\r\n\t                if (code == codelist.data[i].code)\r\n\t                    return true;\r\n\t            return false;*/\r\n\t        }\r\n\t\r\n\t        var checkYear = function (year) {\r\n\t            if (!year)\r\n\t                return true;\r\n\t            if (!$.isNumeric(year))\r\n\t                return false;\r\n\t            if (year.toString().length != 4)\r\n\t                return false;\r\n\t            return true;\r\n\t        }\r\n\t\r\n\t        var checkMonth = function (month) {\r\n\t            if (!month)\r\n\t                return true;\r\n\t            if (!$.isNumeric(month))\r\n\t                return false;\r\n\t            if (month.toString().length != 6)\r\n\t                return false;\r\n\t            if (month.substring(4, 6) > 12 || month.substring(4, 6) < 1)\r\n\t                return false;\r\n\t            return true;\r\n\t        }\r\n\t\r\n\t        var checkDate = function (date) {\r\n\t            //ADD a true date format:\r\n\t            //could be done by creating a date object and then check if it matches the orginal date\r\n\t            if (!date)\r\n\t                return true;\r\n\t            if (!$.isNumeric(date))\r\n\t                return false;\r\n\t            if (date.toString().length != 8)\r\n\t                return false;\r\n\t            if (date.substring(4, 6) > 12 || date.substring(4, 6) < 1)\r\n\t                return false;\r\n\t\r\n\t            return true;\r\n\t        }\r\n\t\r\n\t\r\n\t        Data_Validator.prototype.checkValueFlags = function (cols, data) {\r\n\t            //TODO: Add configuration rulees for value - flags\r\n\t\r\n\t            /*var flagColId = \"\";\r\n\t             var valueColId = \"\";\r\n\t             for (var i = 0; i < cols.length; i++) {\r\n\t             if (cols[i].subject && cols[i].subject == 'flag')\r\n\t             flagColId = cols[i].id;\r\n\t             if (cols[i].subject && cols[i].subject == 'value')\r\n\t             valueColId = cols[i].id;\r\n\t             }\r\n\t\r\n\t             CONTINUE...\r\n\t             */\r\n\t        }\r\n\t\r\n\t        var checkNumber = function (num) {\r\n\t            if (!num)\r\n\t                return true;\r\n\t            if (num == \"\")\r\n\t                return true;\r\n\t            if ($.isNumeric(num))\r\n\t                return true;\r\n\t            return false;\r\n\t        }\r\n\t        var checkBool = function (toCheck) {\r\n\t            if (typeof (toCheck) == 'boolean')\r\n\t                return true;\r\n\t            if (typeof (toCheck) == 'string')\r\n\t                if (toCheck == 'true' || toCheck == 'false')\r\n\t                    return true;\r\n\t            if (typeof (toCheck) == 'number')\r\n\t                if (toCheck == 1 || toCheck == 0)\r\n\t                    return true;\r\n\t            return false;\r\n\t        }\r\n\t\r\n\t        var arrConcat = function (dest, toAdd) {\r\n\t            if (!dest)\r\n\t                dest = [];\r\n\t            if (toAdd)\r\n\t                for (var i = 0; i < toAdd.length; i++)\r\n\t                    dest.push(toAdd[i]);\r\n\t        }\r\n\t\r\n\t\r\n\t        /*Data append validation*/\r\n\t        Data_Validator.prototype.dataAppendCheck = function (cols, dataOld, dataNew) {\r\n\t            if (!cols || !dataOld || !dataNew)\r\n\t                return null;\r\n\t\r\n\t            var toRet = [];\r\n\t            for (var o = 0; o < dataOld.length; o++) {\r\n\t                for (n = 0; n < dataNew.length; n++) {\r\n\t                    var dimValsCollision = sameDimVals(dataOld[o], dataNew[n], cols);\r\n\t                    if (dimValsCollision) {\r\n\t                        //if (!sameData) {//If the rows have the same data ignore\r\n\t                        toRet.push({ dataOldIndex: o, dataNewIndex: n });\r\n\t                        //}\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            return toRet;\r\n\t        }\r\n\t        //checks if two rows have the same data fields (ignores the key columns)\r\n\t        //Enable that after removing the duplicated lines from the newData set\r\n\t        /*var sameData = function (cols, oldRow, newRow) {\r\n\t            for (var d = 0; d < cols.length; d++) {\r\n\t                if (!cols[d].key) {\r\n\t                    if (oldRow[d] != newRow[d])\r\n\t                        return false;\r\n\t                }\r\n\t            }\r\n\t            return true;\r\n\t        }*/\r\n\t\r\n\t        Data_Validator.prototype.dataMerge = function (cols, dataOld, dataNew, mode) {\r\n\t\r\n\t            var oldLen = dataOld.length; //To avoid the count to increase on push\r\n\t            for (var n = 0; n < dataNew.length; n++) {\r\n\t                var found = false;\r\n\t                for (var o = 0; o < oldLen; o++) {\r\n\t                    if (sameDimVals(dataOld[o], dataNew[n], cols)) {\r\n\t                        found = true;\r\n\t                        if (mode == 'keepOld') {\r\n\t                            //do nothing, skip the line\r\n\t                        }\r\n\t                        else if (mode == 'keepNew') {\r\n\t                            copyRow(dataNew[n], dataOld[o]);\r\n\t                        }\r\n\t                        //break;\r\n\t                    }\r\n\t                }\r\n\t                if (!found) {//Not found, add it.\r\n\t                    dataOld.push(dataNew[n]);\r\n\t                }\r\n\t            }\r\n\t\r\n\t            return dataOld;\r\n\t        }\r\n\t\r\n\t        var copyRow = function (src, dst) {\r\n\t            for (var i = 0; i < src.length; i++)\r\n\t                dst[i] = src[i];\r\n\t        }\r\n\t\r\n\t        return Data_Validator;\r\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function ($) {\r\n\t\r\n\t        function CodelistUtils() {\r\n\t        };\r\n\t\r\n\t        CodelistUtils.prototype.findCodeInCodelist = function (code, codelist) {\r\n\t            var found = isInNode(codelist.data, code);\r\n\t            return found;\r\n\t        }\r\n\t\r\n\t        function isInNode(arr, code) {\r\n\t            for (var i = 0; i < arr.length; i++) {\r\n\t                if (arr[i].code == code) {\r\n\t                    return arr[i];\r\n\t                }\r\n\t            }\r\n\t\r\n\t            var res = null;\r\n\t            for (i = 0; i < arr.length; i++) {\r\n\t                if (res != null)\r\n\t                    break;\r\n\t                if (arr[i].children) {\r\n\t                    res = isInNode(arr[i].children, code);\r\n\t                }\r\n\t            }\r\n\t\r\n\t            return res;\r\n\t        };\r\n\t\r\n\t        return CodelistUtils;\r\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=divValRes style=display:none></div> <div id=DataUploadColsMatch style=display:none> <div class=row> <div class=col-xs-12> <p id=DataMatchColumn> Match the DSD columns with the CSV ones </p> <div id=divCsvMatcher> </div> <p> <button id=btnCsvMatcherOk type=button class=btn>Ok</button> <button id=btnCsvMatcherCancel type=button class=btn>Cancel</button> </p> </div> </div> </div> <div id=DataUploadContainer style=display:none> <div class=row> <div class=col-xs-12> <p id=DataDuplicateFound class=text-center> Some duplicated values found, keep old data or replace with the new values just uploaded? </p> <p class=text-center> <button id=btnDataMergeKeepNew type=button class=btn>Replace with new values</button> <button id=btnDataMergeKeepOld type=button class=btn>Keep old values</button> <button id=btnDataMergeCancel type=button class=btn>Cancel</button> </p> </div> </div> </div> <div id=divDataEditor> <div id=divDataEdit> </div> <div id=divDataGridBtns> <button id=btnAddRow type=button class=\\\"btn btn-default\\\"><span class=\\\"glyphicon glyphicon-plus\\\"></span></button> </div> </div> \";\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function ($) {\r\n\t    this.defConfig = {\r\n\t        'fSep': ',',\r\n\t        'rSep': '\\r\\n',\r\n\t        'quot': '\"',\r\n\t        'head': false,\r\n\t        'trim': true\r\n\t    }\r\n\t\r\n\t\r\n\t    function CSV_To_Dataset(config,separator) {\r\n\t        this.config = {\r\n\t            'fSep': separator,\r\n\t            'rSep': '\\r\\n',\r\n\t            'quot': '\"',\r\n\t            'head': false,\r\n\t            'trim': true\r\n\t        };\r\n\t        //defConfig.fSep = separator;\r\n\t        $.extend(true, this.config,/* defConfig,*/ config);\r\n\t        this.stringsArr;\r\n\t    };\r\n\t\r\n\t    CSV_To_Dataset.prototype.convert = function (csv) {\r\n\t        this.stringsArr = toStringArray(csv, this.config);\r\n\t        _cleanEmptyCols(this.stringsArr);\r\n\t    };\r\n\t    //Removes empty columns left by Excel\r\n\t    function _cleanEmptyCols(data) {\r\n\t        for (var c = data[0].length - 1; c >= 0 ; c--) {\r\n\t            if (data[0][c].trim() == \"\") {\r\n\t                _removeEmptyCol(data, c);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    function _removeEmptyCol(data, colIndex) {\r\n\t        for (var r = 0; r < data.length; r++) {\r\n\t            data[r].splice(colIndex, 1);\r\n\t        }\r\n\t    };\r\n\t    CSV_To_Dataset.prototype.getColumns = function () {\r\n\t        return stringArrToCol(this.stringsArr);\r\n\t    };\r\n\t    CSV_To_Dataset.prototype.getData = function () {\r\n\t        return stringArrToData(this.stringsArr);\r\n\t    };\r\n\t    function stringArrToCol(data) {\r\n\t        if (!data)\r\n\t            throw new Error(\"Nothing to parse\");\r\n\t        if (!data[0])\r\n\t            throw new Error(\"Nothing to parse\");\r\n\t\r\n\t        return data[0];\r\n\t    };\r\n\t    function stringArrToData(data) {\r\n\t        var toRet = [];\r\n\t        for (i = 1; i < data.length; i++)\r\n\t            toRet.push(data[i]);\r\n\t        return toRet;\r\n\t    };\r\n\t\r\n\t\r\n\t    //Convert a CSV to a multidimentional strings array\r\n\t    function toStringArray(str, o) {\r\n\t        var a = [['']];\r\n\t        for (var r = f = p = q = 0; p < str.length; p++) {\r\n\t            switch (c = str.charAt(p)) {\r\n\t                case o.quot:\r\n\t                    if (q && str.charAt(p + 1) == o.quot) {\r\n\t                        a[r][f] += o.quot;\r\n\t                        ++p;\r\n\t                    } else {\r\n\t                        q ^= 1;\r\n\t                    }\r\n\t                    break;\r\n\t                case o.fSep:\r\n\t                    if (!q) {\r\n\t                        if (o.trim) {\r\n\t                            a[r][f] = a[r][f].replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\r\n\t                        }\r\n\t                        a[r][++f] = '';\r\n\t                    } else {\r\n\t                        a[r][f] += c;\r\n\t                    }\r\n\t                    break;\r\n\t                case o.rSep.charAt(0):\r\n\t                    if (!q && (!o.rSep.charAt(1) || (o.rSep.charAt(1) && o.rSep.charAt(1) == str.charAt(p + 1)))) {\r\n\t                        if (o.trim) {\r\n\t                            a[r][f] = a[r][f].replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\r\n\t                        }\r\n\t                        a[++r] = [''];\r\n\t                        a[r][f = 0] = '';\r\n\t                        if (o.rSep.charAt(1)) {\r\n\t                            ++p;\r\n\t                        }\r\n\t                    } else {\r\n\t                        a[r][f] += c;\r\n\t                    }\r\n\t                    break;\r\n\t                default:\r\n\t                    a[r][f] += c;\r\n\t            }\r\n\t        }\r\n\t        if (o.head) {\r\n\t            a.shift()\r\n\t        }\r\n\t        if (a[a.length - 1].length < a[0].length) {\r\n\t            a.pop()\r\n\t        }\r\n\t        return a;\r\n\t    };\r\n\t\r\n\t    return CSV_To_Dataset;\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2),\r\n\t    __webpack_require__(32),\r\n\t    __webpack_require__(28)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, Err, clUtils) {\r\n\t\r\n\t        function Validator_CSV() { };\r\n\t\r\n\t        Validator_CSV.prototype.validate = function (dsdCols, codelists, csvCols, csvData) {\r\n\t            var toRet = [];\r\n\t\r\n\t            if (!dsdCols) {\r\n\t                toRet.push({ type: Err.DSD_COLUMNS_NULL });\r\n\t                return toRet;\r\n\t            }\r\n\t            if (!csvCols) {\r\n\t                toRet.push({ type: Err.CSV_COLUMNS_NULL });\r\n\t                return toRet;\r\n\t            }\r\n\t            if (dsdCols.length > csvCols.length) {\r\n\t                toRet.push({ type: Err.WRONG_COLUMN_COUNT });\r\n\t                return toRet;\r\n\t            }\r\n\t            /*for (var i = 0; i < dsdCols.length; i++) {\r\n\t                if (dsdCols[i].id != csvCols[i]) {\r\n\t                    toRet.push({ type: Err.WRONG_COLUMN_ID, index: i });\r\n\t                }\r\n\t            }*/\r\n\t\r\n\t            /*for (i = 0; i < dsdCols.length; i++) {\r\n\t                if (dsdCols[i].dataType == 'code') {\r\n\t                    var clId = dsdCols[i].domain.codes[0].idCodeList;\r\n\t                    if (dsdCols[i].domain.codes[0].version)\r\n\t                        clId += \"|\" + dsdCols[i].domain.codes[0].version;\r\n\t                    var unkCodes = this.checkCodes(dsdCols[i], codelists[clId], csvData, i);\r\n\t                    if (unkCodes.length > 0) {\r\n\t                        toRet.push({ type: Err.UNKNOWN_CODES, columnId: csvCols[i], codes: unkCodes, codelistId: clId });\r\n\t                    }\r\n\t                }\r\n\t            }*/\r\n\t\r\n\t            var row = 0;\r\n\t            for (i = 0; i < dsdCols.length; i++) {\r\n\t                if (nullOnEmpty(dsdCols[i].dataType)) {\r\n\t                    for (row = 0; row < csvData.length; row++) {\r\n\t                        if (csvData[row][i] == \"\") {\r\n\t                            csvData[row][i] = null;\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            return toRet;\r\n\t        };\r\n\t\r\n\t        Validator_CSV.prototype.validateCodes = function (dsdCols, codelists, csvCols, csvData) {\r\n\t            var toRet = [];\r\n\t            if (csvData == null || csvData.length == 0)\r\n\t                return toRet;\r\n\t            if (csvCols == null || csvCols.length == 0)\r\n\t                return toRet;\r\n\t\r\n\t            for (i = 0; i < dsdCols.length; i++) {\r\n\t                if (dsdCols[i].dataType == 'code') {\r\n\t                    var clId = dsdCols[i].domain.codes[0].idCodeList;\r\n\t                    if (dsdCols[i].domain.codes[0].version)\r\n\t                        clId += \"|\" + dsdCols[i].domain.codes[0].version;\r\n\t\r\n\t                    var unkCodes = this.checkCodes(dsdCols[i], codelists[clId], csvData, i);\r\n\t                    if (unkCodes.length > 0) {\r\n\t                        toRet.push({ type: Err.UNKNOWN_CODES, columnId: csvCols[i], codes: unkCodes, codelistId: clId });\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            return toRet;\r\n\t        };\r\n\t\r\n\t        function nullOnEmpty(dataType) {\r\n\t            if (dataType == 'code')\r\n\t                return true;\r\n\t            if (dataType == 'number')\r\n\t                return true;\r\n\t            if (dataType == 'pecentage')\r\n\t                return true;\r\n\t            return false;\r\n\t        }\r\n\t\r\n\t        Validator_CSV.prototype.checkCodes = function (dsdCol, cl, csvData, index) {\r\n\t            var unkCodes = [];\r\n\t            for (var i = 0; i < csvData.length; i++) {\r\n\t                if (csvData[i][index]) {\r\n\t                    var isIn = isInCodelist(cl, csvData[i][index]);\r\n\t                    if (!isIn) {\r\n\t                        var uCode = csvData[i][index];\r\n\t                        if ($.inArray(uCode, unkCodes) == -1)\r\n\t                            unkCodes.push(uCode);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            return unkCodes;\r\n\t        };\r\n\t\r\n\t        function isInCodelist(cl, code) {\r\n\t            var clU = new clUtils();\r\n\t            var found = clU.findCodeInCodelist(code, cl);\r\n\t            if (found == null)\r\n\t                return false;\r\n\t            return true;\r\n\t            /*var isIn = isInNode(cl.data, code);\r\n\t            return isIn;*/\r\n\t        };\r\n\t        \r\n\t        /*function isInNode(arr, code) {\r\n\t            for (var i = 0; i < arr.length; i++) {\r\n\t                if (arr[i].code == code) {\r\n\t                    return true;\r\n\t                }\r\n\t            }\r\n\t\r\n\t            var res = false;\r\n\t            for (i = 0; i < arr.length; i++)\r\n\t                if (arr[i].children)\r\n\t                    res = res || isInNode(arr[i].children, code);\r\n\t\r\n\t            return res;\r\n\t        };*/\r\n\t\r\n\t\r\n\t        return new Validator_CSV();\r\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\r\n\t        'use strict';\r\n\t        var e = {\r\n\t            //Col errors\r\n\t            DSD_COLUMNS_NULL: 'nullDSDCols',\r\n\t            CSV_COLUMNS_NULL: 'nullCsvCols',\r\n\t            WRONG_COLUMN_COUNT: 'wrongColumnCount',\r\n\t            //WRONG_COLUMN_ID: 'wrongColumnId',\r\n\t            UNKNOWN_CODES:'unknownCodes'\r\n\t        };\r\n\t        return e;\r\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t        __webpack_require__(2),\r\n\t        __webpack_require__(8),\r\n\t        __webpack_require__(34),\r\n\t        __webpack_require__(24)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, log, colsMatchHTML, MLUtils) {\r\n\t        var widgetName = \"ColumnsMatch\";\r\n\t\r\n\t        var defConfig = {\r\n\t            maxRows: 5\r\n\t        };\r\n\t        var e = {\r\n\t            /*EVT_VALUE_CHANGED: 'valueChanged.' + widgetName + '.fenix',\r\n\t            EVT_ROW_ADDED: 'rowAdded.' + widgetName + '.fenix',\r\n\t            EVT_ROW_DELETED: 'rowDeleted.' + widgetName + '.fenix'*/\r\n\t        };\r\n\t        var h = {\r\n\t            trDSD: \"#trDSD\",\r\n\t            trCSV: \"#trCSV\",\r\n\t            tblColMatch: \"#tblColMatch\"\r\n\t        };\r\n\t        var html = {\r\n\t            rowDSD: '<td>%title%<br/>type: %type%</td>',\r\n\t            //rowCSV: '<td id=\"csvHead\" ondrop=\"this.drop(event)\" ondragover=\"this.allowDrop(event)\"><span id=\"%colId%\" draggable=\"true\" ondragstart=\"this.drag(event)\">%colId%</span></td>'\r\n\t            rowCSV: '<td class=\"csvHead\" style=\"cursor:move;\" draggable=\"true\"><div id=\"%colId%\" draggable=\"true\">%colId%</div></td>'\r\n\t        };\r\n\t\r\n\t        var ColumnsMatch = function (config) {\r\n\t            log.info(\"ColumnsMatch\",config);\r\n\t            this.config = {};\r\n\t            $.extend(true, this.config, defConfig, config);\r\n\t            this.$cnt;\r\n\t\r\n\t            this.$tblColMatch;\r\n\t            this.$trDsd;\r\n\t            this.$trCsv;\r\n\t\r\n\t            this.dsd;\r\n\t            this.csvCols;\r\n\t            this.csvData;\r\n\t\r\n\t            this.lang = 'EN';\r\n\t        };\r\n\t\r\n\t        //Render - creation\r\n\t        ColumnsMatch.prototype.render = function (container, config, callB) {\r\n\t            log.info(\"ColumnsMatch render\",container, config, callB);\r\n\t            $.extend(true, this.config, config);\r\n\t\r\n\t            this.$cnt = container;\r\n\t            this.$cnt.html(colsMatchHTML);\r\n\t\r\n\t            this.$tblColMatch = this.$cnt.find(h.tblColMatch);\r\n\t            this.$trDsd = this.$cnt.find(h.trDSD);\r\n\t            this.$trCsv = this.$cnt.find(h.trCSV);\r\n\t\r\n\t            this._bindEvents();\r\n\t\r\n\t            this._doML();\r\n\t            if (callB) callB();\r\n\t        }\r\n\t\r\n\t        ColumnsMatch.prototype.setData = function (dsd, csvCols, csvData) {\r\n\t            log.info(\"ColumnsMatch setData\",dsd, csvCols, csvData);\r\n\t            this.dsd = dsd;\r\n\t            this.csvCols = csvCols;\r\n\t            this.csvData = csvData;\r\n\t            var cols = dsd.columns;\r\n\t            this.$trDsd.html('');\r\n\t            this.$trCsv.html('');\r\n\t            if (!cols) return;\r\n\t            for (var i = 0; i < cols.length; i++) {\r\n\t                var title = cols[i].title[this.lang];\r\n\t                var toSet = html.rowDSD.replace('%title%', title);\r\n\t                toSet = toSet.replace('%type%', cols[i].dataType);\r\n\t\r\n\t                this.$trDsd.append(toSet);\r\n\t            }\r\n\t\r\n\t            for (i = 0; i < csvCols.length; i++) {\r\n\t                toSet = html.rowCSV.replace('%colId%', csvCols[i]);\r\n\t                toSet = toSet.replace('%colId%', csvCols[i]);\r\n\t                this.$trCsv.append(toSet);\r\n\t                this.bindCsvHeadEvents();\r\n\t            }\r\n\t            this._updateView(this.csvCols, this.csvData);\r\n\t        }\r\n\t        ColumnsMatch.prototype.getCsvCols = function () {\r\n\t            log.info(\"ColumnsMatch getCsvCols\");\r\n\t            var newOrder = this._getColIndexes(this.csvCols);\r\n\t            var toRet = [];\r\n\t            for (var i = 0; i < this.dsd.columns.length; i++) {\r\n\t                toRet[i] = this.csvCols[newOrder[i]];\r\n\t            }\r\n\t            return toRet;\r\n\t        }\r\n\t        ColumnsMatch.prototype.getCsvData = function () {\r\n\t            log.info(\"ColumnsMatch getCsvData\");\r\n\t            var newOrder = this._getColIndexes(this.csvCols);\r\n\t            var toRet = [];\r\n\t            for (var i = 0; i < this.csvData.length; i++) {\r\n\t                var row = [];\r\n\t                for (var j = 0; j < this.dsd.columns.length; j++) {\r\n\t                    row[j] = this.csvData[i][newOrder[j]];\r\n\t                }\r\n\t                toRet[i] = row;\r\n\t            }\r\n\t            return toRet;\r\n\t        }\r\n\t\r\n\t        ColumnsMatch.prototype._updateView = function (csvCols, csvData) {\r\n\t            log.info(\"ColumnsMatch _updateView\",csvCols, csvData);\r\n\t            var maxRCount = this.config.maxRows;\r\n\t            if (csvData.length < maxRCount) {\r\n\t                maxRCount = csvData.length\r\n\t            }\r\n\t            this._removeDataRows();\r\n\t            var idx = this._getColIndexes(csvCols);\r\n\t            var toAdd = \"\";\r\n\t            for (i = 0; i < maxRCount; i++) {\r\n\t                toAdd += \"<tr>\" + csvRowToRow(csvData[i], idx) + \"</tr>\";\r\n\t            }\r\n\t            toAdd += \"<tr>\";\r\n\t            for (i = 0; i < idx.length; i++) {\r\n\t                toAdd += \"<td>...</td>\";\r\n\t            }\r\n\t            toAdd += \"</tr>\";\r\n\t            this.$tblColMatch.append(toAdd);\r\n\t        }\r\n\t        ColumnsMatch.prototype._getColIndexes = function (csvCols) {\r\n\t            log.info(\"ColumnsMatch _getColIndexes\",csvCols);\r\n\t            var $tdCsv = this.$trCsv.find('td');\r\n\t            var toRet = [];\r\n\t            for (var i = 0; i < $tdCsv.length; i++) {\r\n\t                var colId = $($tdCsv[i]).find('div')[0].id;\r\n\t                toRet[i] = findIndex(colId, csvCols);\r\n\t            }\r\n\t            log.info(\"ColumnsMatch _getColIndexes<\",toRet);\r\n\t            return toRet;\r\n\t        }\r\n\t        ColumnsMatch.prototype._removeDataRows = function () {\r\n\t            var rows = this.$tblColMatch.find(\"tr\");\r\n\t            if (rows.length > 2) {\r\n\t                for (var i = 2; i < rows.length; i++) {\r\n\t                    rows[i].remove();\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        function findIndex(colId, cols) {\r\n\t            for (var i = 0; i < cols.length; i++) {\r\n\t                if (cols[i] == colId)\r\n\t                    return i;\r\n\t            }\r\n\t            return -1;\r\n\t        }\r\n\t        function csvRowToRow(csvRow, csvOrder) {\r\n\t            var toRet = \"\";\r\n\t            for (var i = 0; i < csvOrder.length; i++) {\r\n\t                toRet += \"<td>\";\r\n\t                toRet += csvRow[csvOrder[i]];\r\n\t                toRet += \"</td>\";\r\n\t            }\r\n\t            return toRet;\r\n\t        }\r\n\t\r\n\t        ColumnsMatch.prototype._bindEvents = function () { }\r\n\t\r\n\t        ColumnsMatch.prototype.bindCsvHeadEvents = function () {\r\n\t            var tds = this.$trCsv.find('.csvHead');\r\n\t            var me = this;\r\n\t            for (var i = 0; i < tds.length; i++) {\r\n\t                $(tds[i]).on('drop', function (event) { me.drop(event); });\r\n\t                $(tds[i]).on('dragover', me.allowDrop);\r\n\t                $(tds[i]).find('div').on('dragover', me.allowDrop);\r\n\t                $(tds[i]).find('div').on('dragstart', me.drag);\r\n\t            }\r\n\t        }\r\n\t        ColumnsMatch.prototype._doML = function () { }\r\n\t\r\n\t        ColumnsMatch.prototype.drag = function (ev) {\r\n\t            ev.originalEvent.dataTransfer.setData(\"text\", ev.target.id);\r\n\t        }\r\n\t        ColumnsMatch.prototype.allowDrop = function (ev) {\r\n\t            ev.preventDefault();\r\n\t        }\r\n\t        ColumnsMatch.prototype.drop = function (ev) {\r\n\t            ev.preventDefault();\r\n\t            var data = ev.originalEvent.dataTransfer.getData(\"text\");\r\n\t            /*\r\n\t            console.log($('#' + data));\r\n\t            console.log($(data));\r\n\t            console.log(data);\r\n\t            */\r\n\t            var $toMoveSrc = $('div#' + data);\r\n\t            var $cntSrc = $toMoveSrc.parent();\r\n\t\r\n\t            var $toMoveDest;\r\n\t            var $cntDest;\r\n\t            if ($(ev.target).is('div')) {\r\n\t                $toMoveDest = $(ev.target);\r\n\t                $cntDest = $toMoveDest.parent();\r\n\t            } else {\r\n\t                $cntDest = $(ev.target);\r\n\t                $toMoveDest = $cntDest.find('div');\r\n\t            }\r\n\t\r\n\t            $toMoveDest.remove();\r\n\t            $toMoveSrc.remove();\r\n\t            $cntDest.append($toMoveSrc);\r\n\t            $cntSrc.append($toMoveDest);\r\n\t\r\n\t            this._updateView(this.csvCols, this.csvData);\r\n\t            this.bindCsvHeadEvents();\r\n\t        }\r\n\t\r\n\t        return ColumnsMatch;\r\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<table id=tblColMatch class=\\\"table table-bordered\\\"> <tbody> <tr id=trDSD></tr> <tr id=trCSV></tr> </tbody> </table>\";\n\n/***/ }\n/******/ ])});;\n\n\n/** WEBPACK FOOTER **\n ** fenix-ui-DataEditor.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c0624ccf6ac7ad9e34ec\n **/","define([\r\n    'jquery',\r\n    './DataEditor/DataEdit',\r\n    './DataEditor/helpers/CSV_To_Dataset',\r\n    './DataEditor/helpers/Validator_CSV',\r\n    './DataEditor/helpers/Data_Validator',\r\n    './DataEditor/ColumnsMatch/ColumnsMatch'\r\n\r\n], function ($, DataEdit, Csv2Dataset, ValidatorCSV, DataValidator, ColumnsMatch) {\r\n    var cfg = {};\r\n    var dataEdit;\r\n\r\n    function init(containerID, config, callB) {\r\n        cfg = config;\r\n        dataEdit = new DataEdit();\r\n        dataEdit.render($(containerID), cfg, callB);\r\n    }\r\n\r\n    function setColumns(columns, cLists, callB) {\r\n        dataEdit.setColumns(columns, cLists, callB);\r\n    }\r\n    function getColumns() { return dataEdit.getColumns(); }\r\n    function getCodelists() { return dataEdit.getCodelists(); }\r\n\r\n    function getData() { return dataEdit.getData(); }\r\n    function getDataWithoutValidation() { return dataEdit.getDataWithoutValidation(); }\r\n    function setData(data) { dataEdit.setData(data); }\r\n    function appendData(data) { dataEdit.appendData(data); }\r\n    function removeAllData() { dataEdit.removeAllData(); }\r\n    function getColumnsWithDistincts() { return dataEdit.getColumnsWithDistincts(); }\r\n\r\n    function isEditable(editable) {\r\n        if (typeof (editable) != 'undefined')\r\n            dataEdit.isEditable(editable);\r\n        else\r\n            return dataEdit.isEditable();\r\n    }\r\n    function destroy() {\r\n        if (dataEdit)\r\n            dataEdit.destroy();\r\n    }\r\n    function hasChanged() { return dataEdit.hasChanged(); }\r\n\r\n    function CSV_To_Dataset(a,b) {\r\n        return new Csv2Dataset(a,b);\r\n    }\r\n\r\n    function Validator_CSV() {\r\n        return ValidatorCSV;\r\n    }\r\n\r\n    function Columns_Match() {\r\n        return new ColumnsMatch();\r\n    }\r\n\r\n    function Data_Validator() {\r\n        return new DataValidator();\r\n    }\r\n\r\n    return {\r\n        init: init,\r\n        setColumns: setColumns,\r\n        getColumns: getColumns,\r\n        getCodelists: getCodelists,\r\n        getData: getData,\r\n        getDataWithoutValidation: getDataWithoutValidation,\r\n        setData: setData,\r\n        appendData: appendData,\r\n        removeAllData: removeAllData,\r\n        getColumnsWithDistincts: getColumnsWithDistincts,\r\n        isEditable: isEditable,\r\n        destroy: destroy,\r\n        hasChanged: hasChanged,\r\n        CSV_To_Dataset: CSV_To_Dataset,\r\n        Validator_CSV: Validator_CSV,\r\n        Columns_Match: Columns_Match,\r\n        Data_Validator: Data_Validator\r\n    }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/index.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jquery\"\n ** module id = 2\n ** module chunks = 0\n **/","define([\r\n'jquery',\r\n'../../nls/labels',\r\n'./simpleEditors/DataEditor',\r\n'./simpleEditors/ValidationResultsViewer',\r\n'./helpers/Data_Validator',\r\n'../../html/DataEditor/DataEdit.html',\r\n'amplify-pubsub'\r\n],\r\nfunction ($, mlRes, DataEditor, ValidationResultsViewer, Data_Validator, DataEditHTML, amplify) {\r\n\r\n    var widgetName = \"DataEdit\";\r\n    var defConfig = {};\r\n    var e = {\r\n        dataEditorValueChanged: 'valueChanged.DataEditor.fenix',\r\n        dataEditorRowAdded: 'rowAdded.DataEditor.fenix',\r\n        dataEditorRowDeleted: 'rowDeleted.DataEditor.fenix'\r\n    };\r\n\r\n    var DataEdit = function (config) {\r\n        console.log('DataEdit');\r\n        this.config = {};\r\n        $.extend(true, this.config, defConfig, config);\r\n\r\n        this.$container;\r\n\r\n        this.dataEditor;\r\n        this.$dataEditor;\r\n\r\n        this.valResView;\r\n        this.$valResView;\r\n\r\n        this.cols;\r\n        this.codelists;\r\n\r\n        this.editEnabled = true;\r\n        this.changed = false;\r\n    };\r\n\r\n    //Render - creation\r\n    DataEdit.prototype.render = function (container, config, callB) {\r\n        console.log('Render - creation');\r\n        $.extend(true, this.config, config);\r\n\r\n        this.$container = container;\r\n        this.$container.html(DataEditHTML);\r\n\r\n        this.$dataEditor = this.$container.find('#divDataEditor');\r\n        this.dataEditor = new DataEditor();\r\n        this.dataEditor.render(this.$container.find('#divDataEdit'), this.config);\r\n\r\n        this.$valResView = this.$container.find('#divValRes');\r\n        this.valResView = new ValidationResultsViewer(this.config.lang);\r\n        this.valResView.render(this.$valResView);\r\n\r\n        this.doML();\r\n\r\n        var me = this;\r\n\r\n        //Merge valueChanged, rowAdded and rowDeleted?\r\n        amplify.subscribe(e.dataEditorValueChanged, this, this.updateValidationOnChange);\r\n        amplify.subscribe(e.dataEditorRowAdded, this, this.updateValidationOnChange);\r\n        amplify.subscribe(e.dataEditorRowDeleted, this, this.updateValidationOnChange);\r\n\r\n        this.$dataEditor.find('#btnAddRow').on('click', function (args) { me.dataEditor.newRow(); });\r\n\r\n        if (callB)\r\n            callB();\r\n    }\r\n    //Validation\r\n    DataEdit.prototype.updateValidation = function (data) {\r\n        this.changed = true;\r\n        var val = new Data_Validator();\r\n        var valRes = val.validate(this.cols, this.codelists, data);\r\n        this.updateValRes(valRes);\r\n        this.dataEditor.showValidationResults(valRes);\r\n    };\r\n    DataEdit.prototype.updateValidationOnChange = function (evt) { this.updateValidation(evt.allData); };\r\n    DataEdit.prototype.updateValRes = function (valRes) {\r\n        if (!valRes)\r\n            this.$valResView.hide();\r\n        else if (valRes.length == 0)\r\n            this.$valResView.hide();\r\n        else {\r\n            this.$valResView.show();\r\n            this.valResView.setValidationResults(valRes);\r\n        }\r\n    };    \r\n\r\n    DataEdit.prototype.getValidationResults = function () {\r\n        var val = new Data_Validator();\r\n        return val.validate(this.cols, this.codelists, this.dataEditor.getData());\r\n    };\r\n    //END Validation\r\n\r\n    //Set columns and codelists\r\n    DataEdit.prototype.setColumns = function (columns, codelists, callB) {\r\n        this.cols = columns;\r\n        this.codelists = codelists;\r\n        if (!this.cols || this.cols.length == 0)\r\n            throw new Error(\"At least one column must be defined\");\r\n\r\n        this.uiEnabled(false);\r\n        checkCodeColumnsAndCodelists(this.cols, this.codelists);\r\n        this.dataEditor.setColumns(this.cols, this.codelists, callB);\r\n        this.uiEnabled(true);\r\n    };\r\n    DataEdit.prototype.getColumns = function () { return this.cols; };\r\n    DataEdit.prototype.getCodelists = function () { return this.codelists; };\r\n\r\n    DataEdit.prototype.uiEnabled = function (enabled) {\r\n        if (enabled) {\r\n            this.$dataEditor.find('#btnAddRow').removeAttr('disabled');\r\n            this.$dataEditor.removeAttr('disabled');\r\n        }\r\n        else {\r\n            this.$dataEditor.find('#btnAddRow').attr('disabled', 'disabled');\r\n            this.$dataEditor.attr('disabled', 'disabled');\r\n        }\r\n    };\r\n\r\n    var checkCodeColumnsAndCodelists = function (cols, cLists) {\r\n        //console.log(\"cLists\",cLists);\r\n        if (!cols) return;\r\n        for (var i = 0; i < cols.length; i++)\r\n            if (cols[i].dataType == 'code') {\r\n                if (!cLists)\r\n                    throw new Error(\"Codelist for the column \" + cols[i].id + \" missing\");\r\n                //TODO: extend to multiple codelists\r\n                var cListId = cols[i].domain.codes[0].idCodeList;\r\n\r\n                if (cols[i].domain.codes[0].version)\r\n                    cListId = cListId + \"|\" + cols[i].domain.codes[0].version;\r\n\r\n                if (!(cListId in cLists))\r\n                    throw new Error(\"Codelist '\"+cListId+\"' for the column '\"+cols[i].id+\"' missing\");\r\n            }\r\n    };\r\n\r\n    DataEdit.prototype.getData = function () {\r\n        var valRes = this.getValidationResults();\r\n\r\n        if (valRes == null || valRes.length == 0)\r\n            return this.dataEditor.getData();\r\n        else\r\n            return false;\r\n    };\r\n    DataEdit.prototype.getDataWithoutValidation = function () {\r\n        return this.dataEditor.getData();\r\n    };\r\n    DataEdit.prototype.setData = function (data) {\r\n        if (this.cols)\r\n            this.dataEditor.setData(data);\r\n        this.updateValidation(data);\r\n        this.changed = false;\r\n    };\r\n    /*DataEdit.prototype.appendData = function (data) {\r\n        if (this.cols)\r\n            this.dataEditor.appendData(data);\r\n        this.changed = true;\r\n        this.updateValidation(this.dataEditor.getData());\r\n    };*/\r\n    DataEdit.prototype.removeAllData = function () {\r\n        this.dataEditor.removeAllData();\r\n    };\r\n    DataEdit.prototype.hasChanged = function () {\r\n        return this.changed;\r\n    };\r\n\r\n    //Column Distincts\r\n    DataEdit.prototype.getColumnsWithDistincts = function () {\r\n        var data = this.dataEditor.getData();\r\n        for (var i = 0; i < this.cols.length; i++) {\r\n            var col = this.cols[i];\r\n            switch (col.dataType) {\r\n                case 'code':\r\n                case 'customCode':\r\n                    var dist = getColumnDistinct(data, i);\r\n                    if (dist) {\r\n                        //TODO: Allow multiple codelists\r\n                        col.values = { codes: [] };\r\n                        col.values.codes[0] = { idCodeList: col.domain.codes[0].idCodeList };\r\n                        if (col.domain.codes[0].version)\r\n                            col.values.codes[0].version = col.domain.codes[0].version;\r\n                        col.values.codes[0].codes = [];\r\n                        for (var d = 0; d < dist.length; d++) {\r\n                            col.values.codes[0].codes.push({ code: dist[d] });\r\n                        }\r\n                    }\r\n                    else col.values = null;\r\n                    break;\r\n                case 'date':\r\n                case 'month':\r\n                case 'year':\r\n                    var dist = getColumnDistinct(data, i);\r\n                    if (dist)\r\n                        col.values = { timeList: dist };\r\n                    else\r\n                        col.values = null;\r\n                    break;\r\n            }\r\n        }\r\n        return this.cols;\r\n    };\r\n\r\n    var getColumnDistinct = function (data, idx) {\r\n        var toRet = [];\r\n        if (!data)\r\n            return null;\r\n        for (var i = 0; i < data.length; i++)\r\n            if ($.inArray(data[i][idx], toRet) == -1)\r\n                toRet.push(data[i][idx]);\r\n        return toRet;\r\n    };\r\n    //End column Distincts\r\n\r\n    DataEdit.prototype.isEditable = function (editable) {\r\n        if (typeof (editable) != 'undefined') {\r\n            if (editable)\r\n                this.$dataEditor.find('#btnAddRow').show();\r\n            else\r\n                this.$dataEditor.find('#btnAddRow').hide();\r\n            this.editEnabled = editable;\r\n            this.dataEditor.isEditable(editable);\r\n        }\r\n        else\r\n            return this.editEnabled;\r\n    };\r\n    DataEdit.prototype.destroy = function () {\r\n        amplify.unsubscribe(e.dataEditorValueChanged, this.updateValidation);\r\n        amplify.unsubscribe(e.dataEditorRowAdded, this.updateValidation);\r\n        amplify.unsubscribe(e.dataEditorRowDeleted, this.updateValidation);\r\n        this.$dataEditor.find('#btnAddRow').off('click');\r\n        this.dataEditor.destroy();\r\n    };\r\n\r\n    //MultiLang\r\n    DataEdit.prototype.doML = function () {\r\n        this.$dataEditor.find('#btnAddRow').html(mlRes['add']);\r\n    };\r\n    //END Multilang\r\n\r\n    return DataEdit;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DataEditor/DataEdit.js\n ** module id = 3\n ** module chunks = 0\n **/","if (typeof define !== 'function') {\r\n    var define = require('amdefine')(module);\r\n}\r\ndefine([\r\n        \"./en/labels\",\r\n        \"./fr/labels\"\r\n    ],\r\n    function (i18nEn,i18nFr) {\r\n\r\n        'use strict';\r\n\r\n        return {\r\n\r\n            en: i18nEn,\r\n            fr: i18nFr\r\n\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/nls/labels.js\n ** module id = 4\n ** module chunks = 0\n **/","/*global define*/\r\ndefine(function () {\r\n\r\n    'use strict';\r\n\r\n    return  {\r\n        //\"ok\": \"Ok\",\r\n        //\"cancel\": \"Cancel\",\r\n        \"confirmDelete\": \"Delete?\",\r\n        \"unsavedData\": \"Some changes are unsaved, cancel anyway?\",\r\n        //\"yearInterval\": \"Year must be a number \",\r\n        //\"monthInterval\": \"Month must be a number (1..12)\",\r\n\r\n        \"nullKey\": \"Key fields cannot be empty\",\r\n        \"sameKeyVals\": \"Key fields cannot be duplicated\",\r\n        \"unknownCode\": \"Unknown code\",\r\n        \"invalidYear\": \"Year is not valid\",\r\n        \"invalidMonth\": \"Month is not valid\",\r\n        \"invalidDate\": \"Date is not valid\",\r\n        \"invalidNumber\": \"Number is not valid\",\r\n        \"invalidBool\": \"Boolean is not valid\",\r\n\r\n        \"NAN\": \"Value is not a number\",\r\n        \"OutOfRange\": \"Value is out of the allowed range\",\r\n        \"Null\": \"Value cannot be blank\"\r\n    }\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/nls/en/labels.js\n ** module id = 5\n ** module chunks = 0\n **/","/*global define*/\r\ndefine(function () {\r\n\r\n    'use strict';\r\n\r\n    return {\r\n\r\n        //\"ok\": \"Ok\",\r\n        //\"cancel\": \"Annuler\",\r\n        \"confirmDelete\": \"Supprimer?\",\r\n        \"unsavedData\": \"Certains changements n'ont pas été enregistrés, annuler quand même?\",\r\n        //\"yearInterval\": \"L'année doit être numérique\",\r\n        //\"monthInterval\": \"Le mois doit être numérique (1..12)\",\r\n\r\n        \"nullKey\": \"Les champs clés ne peuvent pas être vides\",\r\n        \"sameKeyVals\": \"Les champs clés ne peuvent pas être dupliqués\",\r\n        \"unknownCode\": \"Code inconnu\",\r\n        \"invalidYear\": \"L'année n'est pas valable\",\r\n        \"invalidMonth\": \"Le mois n'est pas valable\",\r\n        \"invalidDate\": \"La date n'est pas valable\",\r\n        \"invalidNumber\": \"Le nombre n'est pas valable\",\r\n        \"invalidBool\": \"Booléen n'est pas valable\",\r\n\r\n        \"NAN\": \"La valeur n'est pas numérique\",\r\n        \"OutOfRange\": \"La valeur est hors de la plage autorisée\",\r\n        \"Null\": \"La valeur ne peut pas être vide\"\r\n\r\n    }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/nls/fr/labels.js\n ** module id = 6\n ** module chunks = 0\n **/","define([\r\n        'jquery',\r\n        'loglevel',\r\n        './RowEditorPopup',\r\n        '../../../html/DataEditor/simpleEditors/DataEditor.html',\r\n        '../../../nls/labels',\r\n        '../helpers/MLUtils',\r\n        'amplify-pubsub',\r\n        'bootstrap'\r\n],\r\n    function ($, log, RowEditorPopup, DataEditorHTML, mlRes, MLUtils, amplify) {\r\n        var widgetName = \"DataEditor\";\r\n\r\n        var defConfig = {\r\n            thButtons: \"<th>E</th><th>D</th>\"\r\n        };\r\n        var e = {\r\n            EVT_VALUE_CHANGED: 'valueChanged.' + widgetName + '.fenix',\r\n            EVT_ROW_ADDED: 'rowAdded.' + widgetName + '.fenix',\r\n            EVT_ROW_DELETED: 'rowDeleted.' + widgetName + '.fenix'\r\n        };\r\n        var h = {\r\n            divDataGrid: '#divDataGrid',\r\n            divRowEditorPopup: '#divRowEditorPopup',\r\n            btnEditRowCanc: '#btnEditRowCanc',\r\n            btnEditRowOk: '#btnEditRowOk',\r\n            tblDataBody: '#tblDataBody',\r\n            tblDataHead: '#tblDataHead',\r\n            editButtonsClass: 'bE',\r\n            delButtonsClass: 'bD'\r\n        };\r\n        var html = {\r\n            btnEdit: '<button type=\"button\" class=\"btn btn-default bE\" data-rid=%idx%><span class=\"glyphicon glyphicon-pencil\"></span></button>',\r\n            btnDel: '<button type=\"button\" class=\"btn btn-default bD\"data-rid=%idx%><span class=\"glyphicon glyphicon-trash\"></span></button>'\r\n        };\r\n\r\n        var COLOR_ERROR = \"error\";\r\n        var COLOR_DEFAULT = \"default\";\r\n\r\n        var DataEditor = function (config) {\r\n            this.config = {};\r\n            $.extend(true, this.config, config, defConfig);\r\n\r\n            this.rowEditor = new RowEditorPopup();\r\n\r\n            this.$cnt;\r\n            this.$editWindow;\r\n            this.$dataGrid;\r\n            this.cols;\r\n            this.codelists;\r\n            this.data = [];\r\n            this.$tBody;\r\n            this.editEnabled = true;\r\n\r\n            this.lang = 'en';\r\n        };\r\n\r\n        //Render - creation\r\n        DataEditor.prototype.render = function (container, config, callB) {\r\n            $.extend(true, this.config, config);\r\n\r\n            this.$cnt = container;\r\n            this.$cnt.html(DataEditorHTML);\r\n            this.$dataGrid = this.$cnt.find(h.divDataGrid);\r\n\r\n            this.$editWindow = this.$cnt.find(h.divRowEditorPopup);\r\n            this.rowEditor.render(this.$editWindow);\r\n\r\n            if (localStorage.getItem('locale'))\r\n                this.lang = localStorage.getItem('locale');\r\n\r\n            /*\r\n            var me = this;\r\n            this.$cnt.find(h.btnEditRowCanc).on('click', function () {\r\n                me.$editWindow.modal('hide');\r\n            });\r\n            this.$cnt.find(h.btnEditRowOk).on('click', function () { me.rowEditOk(); });\r\n            this.$editWindow.on('hidden.bs.modal', function (e) {\r\n                me.rowEditor.reset();\r\n                me.$editWindow.off(\"keyup\");\r\n            });\r\n            */\r\n            this._bindEvents();\r\n            this.$tBody = this.$cnt.find(h.tblDataBody);\r\n\r\n            this._doML();\r\n            if (callB) callB();\r\n\r\n            log.info(\"DataEditor rendered\", this.config);\r\n        }\r\n\r\n        DataEditor.prototype.setColumns = function (cols, codelists, callB) {\r\n            this.cols = cols;\r\n            this.codelists = convertCodelists(codelists, this.lang);\r\n            if (!cols) {\r\n                return;\r\n            }\r\n            //The table\r\n            this.updateTableHeader();\r\n\r\n            //The row editor\r\n            this.rowEditor.setColumns(this.cols, this.codelists);\r\n            if (callB) callB();\r\n        };\r\n        var createTH = function (label) {\r\n            return '<th>' + label + '</th>';\r\n        };\r\n\r\n        DataEditor.prototype._showEditWindow = function (row) {\r\n            log.info(\"_showEditWindow\", row);\r\n            this.$editWindow.modal('show');\r\n            this.rowEditor.reset();\r\n            if (row)\r\n                this.rowEditor.setRow(row);\r\n\r\n            var me = this;\r\n            this.$editWindow.on(\"keyup\", function (evt) {\r\n                if (evt.keyCode == 13) {\r\n                    me.rowEditOk();\r\n                }\r\n            });\r\n        };\r\n\r\n        DataEditor.prototype._bindEvents = function () {\r\n            log.info(\"Data Editor - _bindEvents\");\r\n            var me = this;\r\n            this.$cnt.find(h.btnEditRowCanc).on('click', function () {\r\n                if (me.rowEditor.changed()) {\r\n                    if (!confirm(mlRes[me.lang]['unsavedData']))\r\n                        return;\r\n                }\r\n                me.$editWindow.modal('hide');\r\n            });\r\n            this.$cnt.find(h.btnEditRowOk).on('click', function () { me.rowEditOk(); });\r\n            this.$editWindow.on('hidden.bs.modal', function (e) {\r\n                me.rowEditor.reset();\r\n                me.$editWindow.off(\"keyup\");\r\n            });\r\n        };\r\n\r\n        DataEditor.prototype._unbindEvents = function () {\r\n            this.$cnt.find(h.btnEditRowCanc).off('click');\r\n            this.$cnt.find(h.btnEditRowOk).off('click');\r\n            this.$editWindow.off('hidden.bs.modal');\r\n            this.$tBody.find('.' + h.editButtonsClass).off('click');\r\n            this.$tBody.find('.' + h.delButtonsClass).off('click');\r\n        };\r\n\r\n        DataEditor.prototype.destroy = function () {\r\n            this._unbindEvents();\r\n            this.rowEditor.destroy();\r\n            this.$tBody.html('');\r\n        };\r\n\r\n        DataEditor.prototype.rowEditOk = function () {\r\n            if (!this.rowEditor.isValid()) {\r\n                this.rowEditor.updateValidationHelp();\r\n                return;\r\n            }\r\n            var row = this.rowEditor.getRow();\r\n            if (row.uid != -1) {//Edit\r\n                this.data[row.uid] = row.data;\r\n                var evtArgs = {};\r\n                evtArgs.newData = row.data;\r\n                evtArgs.allData = this.data;\r\n                amplify.publish(e.EVT_VALUE_CHANGED, evtArgs);\r\n            }\r\n            else {//New\r\n                this.data.push(row.data);\r\n\r\n                var evtArgs = {};\r\n                evtArgs.allData = this.data;\r\n                amplify.publish(e.EVT_ROW_ADDED, evtArgs);\r\n            }\r\n\r\n            //DO NOT UPDATE ALL THE TABLE!!!\r\n            this.updateTable();\r\n            this.$editWindow.modal('hide');\r\n        }\r\n\r\n        DataEditor.prototype.newRow = function () {\r\n            this._showEditWindow(null);\r\n        }\r\n\r\n        DataEditor.prototype.isEditable = function (editable) {\r\n            console.log(\"isEditable\",editable)\r\n            this.editEnabled = editable;\r\n            if (!this.cols)\r\n                return;\r\n            if (typeof (editable) == 'undefined')\r\n                return this.editEnabled;\r\n            this.updateTableHeader();\r\n            this.updateTable();\r\n        }\r\n\r\n        //DATA\r\n        DataEditor.prototype.setData = function (data) {\r\n            if (!this.cols)\r\n                throw new Error(\"Cannot set data without table structure, use setColumns before setData\");\r\n            if (!data)\r\n                return;\r\n            this.data = data;\r\n            this.updateTable();\r\n        };\r\n\r\n        DataEditor.prototype.removeAllData = function () {\r\n            this.data = [];\r\n            this.updateTable();\r\n        };\r\n        DataEditor.prototype.updateTableHeader = function () {\r\n\r\n            var tHead = this.$cnt.find(h.tblDataHead);\r\n            tHead.html('');\r\n            //tHead.append('<th style=\"display:none;\"></th>');\r\n            tHead.append('<th>#</th>');\r\n            for (var i = 0; i < this.cols.length; i++) {\r\n                //MLUtils get multilanguage string\r\n                tHead.append(createTH(this.cols[i].title[this.lang.toUpperCase()]));\r\n            }\r\n            if (this.editEnabled) tHead.append(this.config.thButtons);\r\n\r\n        };\r\n        DataEditor.prototype.updateTable = function () {\r\n            this.$tBody.html('');\r\n            if (!this.data)\r\n                return;\r\n            for (var i = 0; i < this.data.length; i++) {\r\n                this.$tBody.append(createTblRow(i, this.cols, this.codelists, this.data[i], this.editEnabled));\r\n            }\r\n            //Attach all the events\r\n            if (this.editEnabled) {\r\n                var me = this;\r\n                this.$tBody.find('.' + h.editButtonsClass).on('click', function () {\r\n                    var rowId = $(this).data('rid');\r\n                    me._showEditWindow({ uid: rowId, data: me.data[rowId] });\r\n                });\r\n                this.$tBody.find('.' + h.delButtonsClass).on('click', function () {\r\n                    var res = confirm(mlRes[me.lang]['confirmDelete']);\r\n                    if (!res)\r\n                        return;\r\n                    me.deleteRow($(this).data('rid'));\r\n                });\r\n            }\r\n        };\r\n        DataEditor.prototype.deleteRow = function (index) {\r\n            this.data.splice(index, 1);\r\n            this.updateTable();\r\n            amplify.publish(e.EVT_ROW_DELETED, this.data);\r\n        };\r\n        DataEditor.prototype.getRowByRowId = function (rowId) {\r\n            //Test which one is faster\r\n            /*return this.$tBody.find('tr td:first-child').filter(function () {\r\n                console.log($(this).html()==rowId);\r\n                return ($(this).html() == rowId);\r\n            }).closest('tr');*/\r\n\r\n            var rows = this.$tBody.find('tr');\r\n            for (var i = 0; i < rows.length; i++) {\r\n                if (rowId == $(rows[i]).find('td:first').html())\r\n                    return $(rows[i]);\r\n            };\r\n            return null;\r\n        };\r\n\r\n        function createTblRow(idx, cols, codelists, row, editControls) {\r\n\r\n            var toRet = '<tr>';\r\n            //toRet += '<td style=\"display:none;\">' + idx + '</td>'\r\n            toRet += '<td>' + idx + '</td>'\r\n            for (var i = 0; i < cols.length; i++) { //was row.lenght\r\n                toRet += '<td>';\r\n                if (row[i] === null)\r\n                    toRet += '';\r\n                else if (cols[i].dataType == 'code')\r\n                    toRet += addLabelToData(cols[i], codelists, row[i], this.lang);\r\n                else {\r\n                    toRet += row[i];\r\n                }\r\n                toRet += '</td>';\r\n            }\r\n            if (editControls) {\r\n                toRet += '<td>' + html.btnEdit.replace('%idx%', idx) + '</td>';\r\n                toRet += '<td>' + html.btnDel.replace('%idx%', idx) + '</td>';\r\n            }\r\n            toRet += '</tr>';\r\n            return toRet;\r\n        };\r\n        var getCodelistUid = function (domain) {\r\n            //Make it handle multiple codelsits\r\n            var cListUid = domain.codes[0].idCodeList;\r\n            if (domain.codes[0].version) cListUid += \"|\" + domain.codes[0].version;\r\n            return cListUid;\r\n        };\r\n        function addLabelToData(col, codelists, data) {\r\n            //TODO Make it handle multiple Codelists\r\n        //    console.log(\"addLabelToData\",col, codelists, data);\r\n            var cListUID = getCodelistUid(col.domain);\r\n        //    console.log(cListUID);\r\n            var lbl = getCodeLabel(codelists[cListUID].data, data);\r\n            if (lbl === null) return '';\r\n            return lbl;\r\n        };\r\n        var getCodeLabel = function (codes, code) {\r\n            if (!codes)\r\n                return null;\r\n            for (var i = 0; i < codes.length; i++)\r\n                if (codes[i].code == code)\r\n                    //return codes[i].title + \" [\" + code + \"]\";\r\n                    return codes[i].title;\r\n            return null;\r\n        };\r\n\r\n        DataEditor.prototype.getData = function () {\r\n            log.info(\"getData \", this.data)\r\n            return this.data;\r\n        }\r\n        //END Data\r\n\r\n\r\n        //Validation results\r\n        DataEditor.prototype.showValidationResults = function (valRes) {\r\n\r\n            /* this.resetValidationResults();\r\n             if (!valRes)\r\n                 return;\r\n             for (var i = 0; i < valRes.length; i++) {\r\n                 if (valRes[i].colId)\r\n                     this.setCellError(valRes[i].dataIndex, valRes[i].colId);\r\n                 else\r\n                     this.setRowError(valRes[i].dataIndex, valRes[i].colId);\r\n             }*/\r\n\r\n\r\n            /* this.resetValidationResults();\r\n        \r\n             if (!valRes)\r\n                 return;\r\n             for (var i = 0; i < valRes.length; i++) {\r\n                 if (valRes[i].colId)\r\n                     this.setCellColor(valRes[i].dataIndex, valRes[i].colId, COLOR_ERROR);\r\n                 else\r\n                     this.setRowColor(valRes[i].dataIndex, COLOR_ERROR);\r\n             }*/\r\n        }\r\n\r\n        DataEditor.prototype.resetValidationResults = function () {\r\n            /*var rowCount = this.$dataGrid.jqxGrid('getrows').length;\r\n            for (var i = 0; i < rowCount; i++)\r\n                this.setRowColor(i, COLOR_DEFAULT);*/\r\n        }\r\n\r\n        DataEditor.prototype.setRowColor = function (rowIdx, color) {\r\n            /*var cols = this.$dataGrid.jqxGrid('columns');\r\n        \r\n            for (var i = 0; i < cols.records.length; i++)\r\n                this.setCellColor(rowIdx, cols.records[i].datafield, color);*/\r\n        }\r\n\r\n        DataEditor.prototype.setCellColor = function (rowIdx, colId, color) {\r\n            /*var htmlRows = this.$dataGrid.find(\"div[role='row']\");\r\n            var htmlRow = htmlRows[rowIdx];\r\n            var colIdx = this.$dataGrid.jqxGrid('getcolumnindex', colId);\r\n            var tds = $(htmlRow).find(\"div[role='gridcell']\");\r\n            this.changeCellBackgroundColor(tds[colIdx], color);*/\r\n        }\r\n        DataEditor.prototype.setCellError = function (rowIdx, colId) {\r\n            /*var colIndex = -1;\r\n            for (var i = 0; i < this.cols.length; i++) {\r\n                if (colId == this.cols[i]) {\r\n                    colIndex = i;\r\n                }\r\n            }\r\n            var row = $tBody.find('td:first');\r\n            console.log(row);*/\r\n\r\n\r\n        };\r\n\r\n        DataEditor.prototype.changeCellBackgroundColor = function (htmlCell, color) {\r\n            /*if (color == COLOR_ERROR)\r\n                $(htmlCell).addClass(\"fx-red-cell\");\r\n            else if (color == COLOR_DEFAULT)\r\n                $(htmlCell).removeClass(\"fx-red-cell\");*/\r\n        }\r\n\r\n        //END Validation results\r\n\r\n        //Codelists helpers\r\n        function convertCodelists(codelists, lang) {\r\n            var toRet = {};\r\n            for (var cl in codelists) {\r\n                toRet[cl] = { metadata: {} };\r\n                toRet[cl].data = convertCodes(codelists[cl].data, lang);\r\n            }\r\n            return toRet;\r\n        }\r\n        //number of levels for a codelist is not always available.\r\n        //Always call the recursive flatten\r\n        function convertCodes(codes, lang) {\r\n            if (!codes)\r\n                return null;\r\n            var toRet = [];\r\n            recFlatten(codes, toRet, lang)\r\n            return toRet;\r\n        }\r\n        /*function convertCodes(levels, codes, lang) {\r\n            if (!codes)\r\n                return null;\r\n            var toRet = [];\r\n            if (levels == 1) {\r\n                for (var i = 0; i < codes.length; i++)\r\n                    toRet.push(convertCode(codes[i], lang));\r\n            }\r\n            else {\r\n                recFlatten(codes, toRet, lang)\r\n            }\r\n            return toRet;\r\n        }*/\r\n        function recFlatten(node, list, lang) {\r\n            if (!node)\r\n                return;\r\n            for (var i = 0; i < node.length; i++) {\r\n                list.push(convertCode(node[i], lang));\r\n                if (node[i].children)\r\n                    recFlatten(node[i].children, list);\r\n            }\r\n        }\r\n        function convertCode(code, lang) {\r\n\r\n            var MLUtils_getAvailableLang = function (ml, lang) {\r\n                if (!ml)\r\n                    return \"\";\r\n                if (!lang)\r\n                    lang = 'EN';\r\n                lang = lang.toUpperCase();\r\n                if (lang in ml)\r\n                    return lang;\r\n                if ('EN' in ml)\r\n                    return 'EN';\r\n                for (var langs in ml)\r\n                    return langs;\r\n            }\r\n\r\n            return {\r\n                level: code.level,\r\n                title: code.title[MLUtils_getAvailableLang(code.title,lang)] + \" [\" + code.code + \"]\",\r\n                code: code.code\r\n            };\r\n        }\r\n        //End Codelists helpers\r\n\r\n        DataEditor.prototype._doML = function () {\r\n        }\r\n\r\n        return DataEditor;\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DataEditor/simpleEditors/DataEditor.js\n ** module id = 7\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"loglevel\"\n ** module id = 8\n ** module chunks = 0\n **/","define([\r\n        'jquery',\r\n        'loglevel',\r\n        '../../../nls/labels',\r\n        './rE/RowEditorFactory'\r\n],\r\nfunction ($, log, MLRes, reFactory) {\r\n    var widgetName = \"DataEditorPopup\";\r\n    var yMax = 3000;\r\n    var yMin = 0;\r\n\r\n    var defConfig = { YMin: 0, YMax: 3000, decimalDigits: 5 };\r\n    var reFactory = new reFactory();\r\n\r\n    var RowEditorPopup = function (config) {\r\n        this.config = {};\r\n        $.extend(true, this.config, defConfig, config);\r\n\r\n        this.$window;\r\n        this.cols;\r\n        this.codelists;\r\n\r\n        this.lang = 'EN';\r\n        if (localStorage.getItem('locale'))\r\n            this.lang = localStorage.getItem('locale');\r\n\r\n        this.lang = this.lang.toLowerCase();\r\n\r\n        this.editors = [];\r\n        this.uidInEdit = -1;\r\n\r\n        this.oldVal = null;\r\n    };\r\n\r\n    RowEditorPopup.prototype.render = function (container, config) {\r\n        $.extend(true, this.config, config);\r\n        this.$window = container;\r\n\r\n    }\r\n    RowEditorPopup.prototype.setColumns = function (cols, codelists) {\r\n        this.cols = cols;\r\n        this.codelists = codelists;\r\n        if (!cols) {\r\n            return;\r\n        }\r\n        this.createStrucure();\r\n    }\r\n\r\n    RowEditorPopup.prototype.createStrucure = function () {\r\n        this.editors = [];\r\n\r\n        var $tbl = this.$window.find('#tblRowEditor');\r\n        var tBody = $tbl.find('tbody');\r\n        var toAppend;\r\n        for (var i = 0; i < this.cols.length; i++) {\r\n            toAppend = '<tr>';\r\n            toAppend += '<td>' + this.cols[i].title[this.lang.toUpperCase()] + '</td>';\r\n            toAppend += '<td><div id=\"' + generateEditFiledId(this.cols[i].id) + '\"></div></td>';\r\n            toAppend += '</tr>';\r\n            tBody.append(toAppend);\r\n        }\r\n        for (var i = 0; i < this.cols.length; i++) {\r\n            var col = this.cols[i];\r\n            var cnt = tBody.find('#' + generateEditFiledId(col.id));\r\n            var cfg = null;\r\n            this.editors[i] = reFactory.create(col.dataType, cfg);\r\n\r\n            switch (col.dataType) {\r\n                case 'code':\r\n                    var codelistUid = col.domain.codes[0].idCodeList;\r\n                    if (col.domain.codes[0].version)\r\n                        codelistUid += \"|\" + col.domain.codes[0].version;\r\n                    this.editors[i].render(cnt, null, [this.codelists[codelistUid]]);\r\n                    break;\r\n                case 'customCode':\r\n                    //ADD custom code edit\r\n                    break;\r\n                case 'year':\r\n                    var yMin = this.config.YMin;\r\n                    var yMax = this.config.YMax;\r\n                    if (col.domain && col.domain.period) {\r\n                        yMin = col.domain.period.from;\r\n                        yMax = col.domain.period.to;\r\n                    }\r\n                    this.editors[i].render(cnt, { yMin: yMin, yMax: yMax });\r\n                    break;\r\n                case 'number':\r\n                case 'percentage':\r\n                    this.editors[i].render(cnt, { decimalDigits: this.config.decimalDigits });\r\n                    break;\r\n                case 'month':\r\n                case 'date':\r\n                case 'text':\r\n                case 'bool':\r\n                    this.editors[i].render(cnt, null);\r\n                    break;\r\n            }\r\n            if (col.key)\r\n                this.editors[i].isMandatory(true);\r\n        }\r\n    }\r\n\r\n    function generateEditFiledId(id) {\r\n        return 'trRowEdit_' + id;\r\n    }\r\n    RowEditorPopup.prototype.reset = function (row) {\r\n        log.info(\"RowEditorPopup - reset\", this.editors, this.cols.length, row)\r\n        this.uidInEdit = -1;\r\n        if (!this.cols) return;\r\n        for (var i = 0; i < this.cols.length; i++) {\r\n            this.editors[i].reset();\r\n        }\r\n        this.oldVal = null;\r\n    }\r\n\r\n    RowEditorPopup.prototype.updateValidationHelp = function () {\r\n        if (!this.cols)\r\n            return;\r\n        for (var i = 0; i < this.cols.length; i++) {\r\n            if (this.editors[i].updateValidationHelp)\r\n                this.editors[i].updateValidationHelp();\r\n        }\r\n    }\r\n\r\n    RowEditorPopup.prototype.isValid = function () {\r\n        for (var i = 0; i < this.cols.length; i++)\r\n            if (!this.editors[i].isValid())\r\n                return false;\r\n        return true;\r\n    }\r\n\r\n    RowEditorPopup.prototype.setRow = function (row) {\r\n        log.info(\"setRow\", row)\r\n        this.reset();\r\n        if (!this.cols)\r\n            throw new Error('cannot set row when columns are null');\r\n        this.oldVal = row;\r\n        if (row.uid != 'undefined')\r\n            this.uidInEdit = row.uid;\r\n        else\r\n            this.uidInEdit = -1;\r\n        for (var i = 0; i < this.cols.length; i++)\r\n            if (this.editors[i]) {\r\n                this.editors[i].setValue(row.data[i]);\r\n            }\r\n            else\r\n                throw new Error('Editor cannot be null for dataType ' + this.cols[i].dataType);\r\n    }\r\n    RowEditorPopup.prototype.getRow = function (row) {\r\n        if (!this.cols)\r\n            throw new Error('cannot get row when columns are null');\r\n        var toRet = { uid: this.uidInEdit, data: [] };\r\n        for (var i = 0; i < this.cols.length; i++) {\r\n            var val = this.editors[i].getValue();\r\n            if (!val)\r\n                toRet.data[i] = null;\r\n            else if (this.cols[i].dataType == 'number' || this.cols[i].dataType == 'percentage')\r\n                toRet.data[i] = parseFloat(val);\r\n            else\r\n                toRet.data[i] = val;\r\n        }\r\n        return toRet;\r\n    };\r\n\r\n    RowEditorPopup.prototype.changed = function () {\r\n        var newVal = this.getRow();\r\n\r\n        if (this.oldVal == null) {\r\n            for (var i = 0; i < this.cols.length; i++) {\r\n                if (newVal.data[i] != '')\r\n                    return true;\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < this.cols.length; i++) {\r\n                if (newVal.data[i] != this.oldVal.data[i])\r\n                    return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    RowEditorPopup.prototype.destroy = function () {\r\n        if (!this.cols)\r\n            return;\r\n        for (var i = 0; i < this.cols.length; i++)\r\n            this.editors[i].destroy();\r\n    }\r\n\r\n    return RowEditorPopup;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DataEditor/simpleEditors/RowEditorPopup.js\n ** module id = 9\n ** module chunks = 0\n **/","define([\r\n        'jquery',\r\n        './RowEditor_bool',\r\n        './RowEditor_code',\r\n        './RowEditor_date',\r\n        './RowEditor_month',\r\n        './RowEditor_number',\r\n        './RowEditor_string',\r\n        './RowEditor_year'\r\n],\r\nfunction ($, reBool, reCode, reDate, reMonth, reNumber, reString, reYear) {\r\n    var defConfig = {};\r\n\r\n    var RowEditorFactory = function (config) {\r\n        this.config = {};\r\n        $.extend(true, this.config, defConfig, config);\r\n    };\r\n\r\n    RowEditorFactory.prototype.create = function (id, config) {\r\n        switch (id) {\r\n            case 'code':\r\n                return new reCode(config);\r\n                break;\r\n            case 'customCode':\r\n                //return new reCustomCode();\r\n                break;\r\n            case 'year':\r\n                return new reYear(config);\r\n                break;\r\n            case 'month':\r\n                return new reMonth(config);\r\n                break;\r\n            case 'date':\r\n                return new reDate(config);\r\n                break;\r\n            case 'number':\r\n            case 'percentage':\r\n                return new reNumber(config);\r\n                break;\r\n            case 'text':\r\n                return new reString(config);\r\n                break;\r\n            case 'bool':\r\n                return new reBool(config);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return RowEditorFactory;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DataEditor/simpleEditors/rE/RowEditorFactory.js\n ** module id = 10\n ** module chunks = 0\n **/","define([\r\n        'jquery',\r\n        '../../../../nls/labels',\r\n        './RowEditor_base',\r\n        'bootstrap'\r\n],\r\nfunction ($, mlRes, rowEditorBase) {\r\n    var defConfig = {};\r\n\r\n    var RowEditor_bool = function (config) {\r\n        this.parent.constructor.call(this, config);\r\n    };\r\n    RowEditor_bool.prototype = Object.create(rowEditorBase.prototype);\r\n    RowEditor_bool.prototype.constructor = RowEditor_bool;\r\n    RowEditor_bool.prototype.parent = rowEditorBase.prototype;\r\n\r\n    RowEditor_bool.prototype.render = function (container, config) {\r\n        $.extend(true, this.config, config);\r\n        this.$cnt = container;\r\n        var html = '<input type=\"checkbox\" />';\r\n        this.$cnt.html(html);\r\n        var me = this;\r\n        var $chk = this.$cnt.find('input');\r\n\r\n\r\n\r\n\r\n        //WAIT for the CSS to be fixed and remove this\r\n        $chk.show();\r\n\r\n\r\n\r\n        $chk.on('click', function () { me.updateValidationHelp(); });\r\n    }\r\n    RowEditor_bool.prototype.destroy = function () { this.$cnt.find('input').off('click'); }\r\n\r\n    RowEditor_bool.prototype.updateValidationHelp = function () {\r\n        var error = this.validate();\r\n        this.parent.updateValidationHelp.call(this, error);\r\n    }\r\n    RowEditor_bool.prototype.reset = function () {\r\n        this.$cnt.find('input').prop('checked', false);\r\n        this.$cnt.popover('destroy');\r\n    }\r\n    RowEditor_bool.prototype.setValue = function (val) {\r\n        this.reset();\r\n        this.$cnt.find('input').prop('checked', val);\r\n    }\r\n    RowEditor_bool.prototype.getValue = function () {\r\n        return this.$cnt.find('input').prop('checked');\r\n    }\r\n    RowEditor_bool.prototype.isMandatory = function (m) {\r\n        if (m == 'undefined')\r\n            return this.mandatory;\r\n        this.mandatory = m;\r\n    }\r\n    RowEditor_bool.prototype.validate = function () {\r\n        /*var val = this.getValue();\r\n        var toRet = [];\r\n        if (this.mandatory && !val)\r\n            return this.ERROR_NULL;*/\r\n        return null;\r\n    }\r\n    RowEditor_bool.prototype.isValid = function () {\r\n        if (this.validate() == null)\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    return RowEditor_bool;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DataEditor/simpleEditors/rE/RowEditor_bool.js\n ** module id = 11\n ** module chunks = 0\n **/","define([\r\n        'jquery',\r\n        '../../../../nls/labels',\r\n        'bootstrap'\r\n],\r\nfunction ($, mlRes) {\r\n    var defConfig = {};\r\n\r\n    var RowEditor_base = function (config) {\r\n        this.config = {};\r\n        $.extend(true, this.config, defConfig, config);\r\n        this.$cnt;\r\n        this.mandatory = false;\r\n\r\n        this.ERROR_NAN = \"NAN\";\r\n        this.ERROR_OUT_OF_RANGE = \"OutOfRange\";\r\n        this.ERROR_NULL = \"Null\";\r\n    };\r\n    RowEditor_base.prototype.updateValidationHelp = function () {\r\n        var error = this.validate();\r\n        if (error == null) {\r\n            this.$cnt.popover('destroy');\r\n        }\r\n        else {\r\n            var errMSG = mlRes[error];\r\n            this.$cnt.popover({ container: this.$cnt, content: errMSG, html: true });\r\n            this.$cnt.popover('show');\r\n        }\r\n        /*if (error == null) {\r\n            this.$cnt.popover('destroy');\r\n        }\r\n        else {\r\n            var errMSG = mlRes[error];\r\n            this.$cnt.popover({ container: this.$cnt, content: errMSG, html: true });\r\n            this.$cnt.popover('show');\r\n        }*/\r\n    };\r\n    RowEditor_base.prototype.isMandatory = function (m) {\r\n        if (m == 'undefined')\r\n            return this.mandatory;\r\n        this.mandatory = m;\r\n    };\r\n    RowEditor_base.prototype.isValid = function () {\r\n        if (this.validate() == null)\r\n            return true;\r\n        return false;\r\n    }\r\n    return RowEditor_base;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DataEditor/simpleEditors/rE/RowEditor_base.js\n ** module id = 12\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"bootstrap\"\n ** module id = 13\n ** module chunks = 0\n **/","define([\r\n        'jquery',\r\n        '../../../../nls/labels',\r\n        './RowEditor_base',\r\n        'bootstrap'\r\n],\r\nfunction ($, mlRes, rowEditorBase) {\r\n    var defConfig = {\r\n        elemCode: '<select class=\"%class%\"></select>',\r\n        elemClass: \"form-control\",\r\n        optionCode: '<span class=\"cl_lev%lev%\">%label%</span>',\r\n        emptyEntryValue: \"-\",\r\n        emptyEntryLabel: \"-\"\r\n    };\r\n\r\n    var RowEditor_code = function (config) {\r\n        this.parent.constructor.call(this, config);\r\n        $.extend(true, this.config, defConfig);\r\n        this.codelists;\r\n        this.$ddl;\r\n    }\r\n    RowEditor_code.prototype = Object.create(rowEditorBase.prototype);\r\n    RowEditor_code.prototype.constructor = RowEditor_code;\r\n    RowEditor_code.prototype.parent = rowEditorBase.prototype;\r\n\r\n    RowEditor_code.prototype.render = function (container, config, codelists) {\r\n        $.extend(true, this.config, config);\r\n        this.$cnt = container;\r\n        this.codelists = codelists;\r\n        this.createEditor();\r\n    }\r\n\r\n    RowEditor_code.prototype.createEditor = function () {\r\n        var e = defConfig.elemCode.replace('%class%', defConfig.elemClass);\r\n        this.$ddl = $(e);\r\n        //Err?\r\n        if (!this.codelists || !this.codelists[0] || !this.codelists[0].data)\r\n            return;\r\n        var toApp = $('<option></option>');\r\n        toApp.val(this.config.emptyEntryValue);\r\n        toApp.html(this.config.emptyEntryLabel);\r\n        this.$ddl.append(toApp);\r\n\r\n        for (var i = 0; i < this.codelists[0].data.length; i++) {\r\n            toApp = $('<option></option>').val(this.codelists[0].data[i].code);\r\n            toApp.html(_getTitle(this.codelists[0].metadata.levels, this.codelists[0].data[i].level, this.codelists[0].data[i].title));\r\n            this.$ddl.append(toApp);\r\n        }\r\n        this.$cnt.append(this.$ddl);\r\n        this._bindEvents();\r\n    };\r\n\r\n    function _getTitle(levels, level, label) {\r\n        if (levels == 0)\r\n            return title;\r\n        var toRet = defConfig.optionCode;\r\n        toRet = toRet.replace('%lev%', level);\r\n        var blanks = \"\";\r\n        switch (level) {\r\n            case 2:\r\n                blanks = \"&nbsp;\";\r\n                break;\r\n            case 3:\r\n                blanks = \"&nbsp;&nbsp;\";\r\n                break;\r\n            case 4:\r\n                blanks = \"&nbsp;&nbsp;&nbsp;\";\r\n                break;\r\n            default:\r\n                blanks = \"&nbsp;&nbsp;&nbsp;&nbsp;\";\r\n                break;\r\n        }\r\n        return toRet.replace('%label%', blanks + \"\" + label);\r\n    };\r\n\r\n    RowEditor_code.prototype._bindEvents = function () {\r\n        var me = this;\r\n        this.$cnt.on('select', function () { me.updateValidationHelp(); });\r\n    };\r\n    RowEditor_code.prototype._unbindEvents = function () {\r\n        this.$cnt.off('select');\r\n    };\r\n\r\n    RowEditor_code.prototype.destroy = function () {\r\n        this._unbindEvents();\r\n        //Is this needed???//this.$cnt.html('');\r\n        //this.$cnt.jqxComboBox('destroy');\r\n    }\r\n    RowEditor_code.prototype.updateValidationHelp = function () {\r\n        var error = this.validate();\r\n        this.parent.updateValidationHelp.call(this, error);\r\n    }\r\n    RowEditor_code.prototype.reset = function () {\r\n        this.$ddl.val(this.config.emptyEntryValue);\r\n        //this.$cnt.jqxComboBox('selectIndex', 0)\r\n        //this.$cnt.popover('destroy');\r\n    }\r\n    RowEditor_code.prototype.setValue = function (val) {\r\n        this.reset();\r\n        this.$ddl.val(val);\r\n        this.updateValidationHelp();\r\n    }\r\n    RowEditor_code.prototype.getValue = function () {\r\n        var toRet = this.$ddl.val();\r\n        if (toRet == this.config.emptyEntryValue)\r\n            return '';\r\n        return toRet;\r\n    }\r\n    /*RowEditor_code.prototype.getSelectedItem = function () {\r\n         //var item = this.$cnt.jqxComboBox('getSelectedItem');\r\n         //if (!item)\r\n         //    return null;\r\n         //return item;\r\n    }*/\r\n    RowEditor_code.prototype.isMandatory = function (m) {\r\n        if (m == 'undefined')\r\n            return this.mandatory;\r\n        this.mandatory = m;\r\n    }\r\n    RowEditor_code.prototype.validate = function () {\r\n        var val = this.getValue();\r\n        if (this.mandatory && !val)\r\n            return this.ERROR_NULL;\r\n        return null;\r\n    }\r\n    RowEditor_code.prototype.isValid = function () {\r\n        if (this.validate() == null)\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    return RowEditor_code;\r\n});\r\n\r\n\r\n/*\r\ndefine([\r\n        'jquery',\r\n        'jqxall',\r\n        'i18n!fx-DataEditor/multiLang/DataEditor/nls/ML_DataEdit',\r\n        'fx-DataEditor/js/DataEditor/simpleEditors/rE/RowEditor_base',\r\n        'bootstrap'\r\n],\r\nfunction ($, jqx, mlRes, rowEditorBase) {\r\n    var defConfig = {};\r\n    var emptyEntryValue = \"-\";\r\n    var emptyEntryLabel = \"-\";\r\n\r\n    var RowEditor_code = function (config) {\r\n        this.parent.constructor.call(this, config);\r\n        this.codelists;\r\n    }\r\n    RowEditor_code.prototype = Object.create(rowEditorBase.prototype);\r\n    RowEditor_code.prototype.constructor = RowEditor_code;\r\n    RowEditor_code.prototype.parent = rowEditorBase.prototype;\r\n\r\n    RowEditor_code.prototype.render = function (container, config, codelists) {\r\n        $.extend(true, this.config, config);\r\n        this.$cnt = container;\r\n        this.codelists = codelists;\r\n        this.createEditor();\r\n    }\r\n    RowEditor_code.prototype.createEditor = function () {\r\n        //TODO make it handle multiple codelists\r\n        var codesSrc = {\r\n            localdata: this.codelists[0].data, datatype: 'array', datafields: [\r\n                { name: 'code', type: 'string' },\r\n                { name: 'title', type: 'string' },\r\n                { name: 'level', type: 'string' }\r\n            ]\r\n        };\r\n        var codesTextDataAdapter = new $.jqx.dataAdapter(codesSrc);\r\n\r\n        var me = this;\r\n        this.$cnt.jqxComboBox({\r\n            source: codesTextDataAdapter,\r\n            displayMember: 'title',\r\n            valueMember: 'code',\r\n            promptText: '',\r\n            autoComplete: true,\r\n            searchMode: 'containsignorecase',\r\n            renderer: function (index, label, value) {\r\n                if (me.codelists[0].metadata.levels == 1)\r\n                    return label;\r\n                if (me.codelists[0].data[index]) {\r\n                    switch (me.codelists[0].data[index].level) {\r\n                        case 1:\r\n                            return '<span class=\"cl_lev1\">' + label + '</span>';\r\n                            break;\r\n                        case 2:\r\n                            return '<span class=\"cl_lev2\">&nbsp;' + label + '</span>';\r\n                            break;\r\n                        case 3:\r\n                            return '<span class=\"cl_lev3\">&nbsp;&nbsp;' + label + '</span>';\r\n                            break;\r\n                        case 4:\r\n                            return '<span class=\"cl_lev4\">&nbsp;&nbsp;&nbsp;' + label + '</span>';\r\n                            break;\r\n                        default:\r\n                            return '<span class=\"cl_lev5\">&nbsp;&nbsp;&nbsp;&nbsp;' + label + '</span>';\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        this.$cnt.jqxComboBox('insertAt', { label: emptyEntryLabel, value: emptyEntryValue }, 0);\r\n        this.$cnt.on('select', function () { me.updateValidationHelp(); });\r\n    }\r\n    RowEditor_code.prototype.destroy = function () {\r\n        this.$cnt.jqxComboBox('destroy');\r\n        this.$cnt.off('select');\r\n    }\r\n    RowEditor_code.prototype.updateValidationHelp = function () {\r\n        var error = this.validate();\r\n        this.parent.updateValidationHelp.call(this, error);\r\n    }\r\n    RowEditor_code.prototype.reset = function () {\r\n        this.$cnt.jqxComboBox('selectIndex', 0)\r\n        this.$cnt.popover('destroy');\r\n    }\r\n    RowEditor_code.prototype.setValue = function (val) {\r\n        this.reset();\r\n        if (!val)\r\n            val = emptyEntryValue;\r\n        var items = this.$cnt.jqxComboBox('getItems');\r\n        for (var i = 0; i < items.length; i++)\r\n            if (items[i].value == val) {\r\n                this.$cnt.jqxComboBox('selectIndex', i);\r\n            }\r\n        this.updateValidationHelp();\r\n    }\r\n    RowEditor_code.prototype.getValue = function () {\r\n        var item = this.$cnt.jqxComboBox('getSelectedItem');\r\n        if (!item)\r\n            return null;\r\n        if (item.value == emptyEntryValue)\r\n            return null;\r\n        return item.value;\r\n    }\r\n    RowEditor_code.prototype.getSelectedItem = function () {\r\n        var item = this.$cnt.jqxComboBox('getSelectedItem');\r\n        if (!item)\r\n            return null;\r\n        return item;\r\n    }\r\n    RowEditor_code.prototype.isMandatory = function (m) {\r\n        if (m == 'undefined')\r\n            return this.mandatory;\r\n        this.mandatory = m;\r\n    }\r\n    RowEditor_code.prototype.validate = function () {\r\n        var val = this.getValue();\r\n        if (this.mandatory && !val)\r\n            return this.ERROR_NULL;\r\n        return null;\r\n    }\r\n    RowEditor_code.prototype.isValid = function () {\r\n        if (this.validate() == null)\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    return RowEditor_code;\r\n});*/\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DataEditor/simpleEditors/rE/RowEditor_code.js\n ** module id = 14\n ** module chunks = 0\n **/","define([\r\n        'jquery',\r\n        'eonasdan-bootstrap-datetimepicker',\r\n        '../../../../nls/labels',\r\n        './RowEditor_base',\r\n        '../../../../html/DataEditor/simpleEditors/RowEditorTime.html',\r\n        'moment',\r\n        'bootstrap'\r\n],\r\nfunction ($, datetimepicker, mlRes, rowEditorBase, RowEditorTimeHTML) {\r\n    var defConfig = { yMin: 0, yMax: 3000 };\r\n    var h = {\r\n        inputTime: '#inputTime'\r\n    };\r\n\r\n    var RowEditor_date = function (config) {\r\n        this.parent.constructor.call(this, config);\r\n        $.extend(true, this.config, defConfig);\r\n        this.$datePicker;\r\n    };\r\n    RowEditor_date.prototype = Object.create(rowEditorBase.prototype);\r\n    RowEditor_date.prototype.constructor = rowEditorBase;\r\n    RowEditor_date.prototype.parent = rowEditorBase.prototype;\r\n\r\n    RowEditor_date.prototype.render = function (container, config) {\r\n        $.extend(true, this.config, config);\r\n        this.$cnt = container;\r\n        this.$cnt.html(RowEditorTimeHTML);\r\n\r\n        this.$datePicker = this.$cnt.find('#inputTime');\r\n        this.$datePicker.datetimepicker({ viewMode: 'days', locale: 'en', format: \"DD/MM/YYYY\" });\r\n        var me = this;\r\n        this.$cnt.on('change', function () { me.updateValidationHelp(); });\r\n    };\r\n    RowEditor_date.prototype.destroy = function () {\r\n        this.$datePicker.data(\"DateTimePicker\").destroy();\r\n        this.$datePicker.off('change');\r\n    };\r\n    /*RowEditor_date.prototype.updateValidationHelp = function () {\r\n        var error = this.validate();\r\n        this.parent.updateValidationHelp.call(this, error);\r\n    };*/\r\n\r\n    RowEditor_date.prototype.reset = function () {\r\n        this.$datePicker.data(\"DateTimePicker\").clear();\r\n        //this.$cnt.popover('destroy');\r\n    };\r\n    RowEditor_date.prototype.setValue = function (val) {\r\n        this.reset();\r\n        if (val) {\r\n            val = \"\" + val;\r\n            var d = val.substring(6, 8);\r\n            var m = val.substring(4, 6);\r\n            m = m - 1;\r\n            var y = val.substring(0, 4);\r\n            this.$datePicker.data('DateTimePicker').date(new Date(y, m, d));\r\n        }\r\n    };\r\n    RowEditor_date.prototype.getValue = function () {\r\n        var dt = this.$datePicker.data('DateTimePicker').date();\r\n        if (!dt)\r\n            return '';\r\n        var d = \"\" + dt.date();\r\n        var m = \"\" + (dt.month() + 1);\r\n        var y = \"\" + dt.year();\r\n        if (d.length == 1)\r\n            d = \"0\" + d;\r\n        if (m.length == 1)\r\n            m = \"0\" + m;\r\n        while (y.length < 4)\r\n            y = \"0\" + y;\r\n        return y + m + d;\r\n    };\r\n    /*RowEditor_date.prototype.isMandatory = function (m) {\r\n        if (m == 'undefined')\r\n            return this.mandatory;\r\n        this.mandatory = m;\r\n    }*/\r\n\r\n    RowEditor_date.prototype.validate = function () {\r\n        var val = this.getValue();\r\n        if (this.mandatory && !val)\r\n            return this.ERROR_NULL;\r\n        var y = val.substring(4, 8);\r\n        if (y < this.config.yMin) return this.ERROR_OUT_OF_RANGE;\r\n        if (y > this.config.yMax) return this.ERROR_OUT_OF_RANGE;\r\n        return null;\r\n    };\r\n    /*RowEditor_date.prototype.isValid = function () {\r\n        if (this.validate() == null)\r\n            return true;\r\n        return false;\r\n    }*/\r\n\r\n    return RowEditor_date;\r\n});\r\n\r\n\r\n/*\r\ndefine([\r\n        'jquery',\r\n        'jqxall',\r\n        'i18n!fx-DataEditor/multiLang/DataEditor/nls/ML_DataEdit',\r\n        'fx-DataEditor/js/DataEditor/simpleEditors/rE/RowEditor_base',\r\n        'bootstrap'\r\n],\r\nfunction ($, jqx, mlRes, rowEditorBase) {\r\n    var defConfig = { yMin: 0, yMax: 3000 };\r\n\r\n    var RowEditor_date = function (config) {\r\n        this.parent.constructor.call(this, config);\r\n    };\r\n    RowEditor_date.prototype = Object.create(rowEditorBase.prototype);\r\n    RowEditor_date.prototype.constructor = RowEditor_date;\r\n    RowEditor_date.prototype.parent = rowEditorBase.prototype;\r\n\r\n    RowEditor_date.prototype.render = function (container, config) {\r\n        $.extend(true, this.config, config);\r\n        this.$cnt = container;\r\n\r\n        this.$cnt.jqxCalendar();\r\n        var me = this;\r\n        this.$cnt.on('change', function () { me.updateValidationHelp(); });\r\n    }\r\n    RowEditor_date.prototype.destroy = function () {\r\n        this.$cnt.jqxCalendar('destroy');\r\n        this.$cnt.off('change');\r\n    }\r\n    RowEditor_date.prototype.updateValidationHelp = function () {\r\n        var error = this.validate();\r\n        this.parent.updateValidationHelp.call(this, error);\r\n    }\r\n\r\n    RowEditor_date.prototype.reset = function () {\r\n        this.$cnt.jqxCalendar('clear');\r\n        this.$cnt.popover('destroy');\r\n    }\r\n    RowEditor_date.prototype.setValue = function (val) {\r\n        this.reset();\r\n        if (val) {\r\n            val = \"\" + val;\r\n            var d = val.substring(6, 8);\r\n            var m = val.substring(4, 6);\r\n            m = m - 1;\r\n            var y = val.substring(0, 4);\r\n            this.$cnt.jqxCalendar('setDate', new Date(y, m, d));\r\n        }\r\n\r\n    }\r\n    RowEditor_date.prototype.getValue = function () {\r\n        var dt = this.$cnt.jqxCalendar('getDate');\r\n        if (!dt)\r\n            return null;\r\n        var d = \"\" + dt.getDate();\r\n        var m = \"\" + (dt.getMonth() + 1);\r\n        var y = \"\" + dt.getFullYear();\r\n        if (d.length == 1)\r\n            d = \"0\" + d;\r\n        if (m.length == 1)\r\n            m = \"0\" + m;\r\n        while (y.length < 4)\r\n            y = \"0\" + y;\r\n        return y + m + d;\r\n    }\r\n    RowEditor_date.prototype.isMandatory = function (m) {\r\n        if (m == 'undefined')\r\n            return this.mandatory;\r\n        this.mandatory = m;\r\n    }\r\n\r\n    RowEditor_date.prototype.validate = function () {\r\n        var val = this.getValue();\r\n        if (this.mandatory && !val)\r\n            return this.ERROR_NULL;\r\n        var y = val.substring(4, 8);\r\n        if (y < this.config.yMin) return this.ERROR_OUT_OF_RANGE;\r\n        if (y > this.config.yMax) return this.ERROR_OUT_OF_RANGE;\r\n        return null;\r\n    }\r\n    RowEditor_date.prototype.isValid = function () {\r\n        if (this.validate() == null)\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    return RowEditor_date;\r\n});\r\n*/\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DataEditor/simpleEditors/rE/RowEditor_date.js\n ** module id = 15\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_16__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"eonasdan-bootstrap-datetimepicker\"\n ** module id = 16\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"input-group date\\\" id=inputTime> <input type=text class=form-control /> <span class=input-group-addon> <span class=\\\"glyphicon glyphicon-calendar\\\"></span> </span> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/html/DataEditor/simpleEditors/RowEditorTime.html\n ** module id = 17\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_18__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"moment\"\n ** module id = 18\n ** module chunks = 0\n **/","define([\r\n        'jquery',\r\n        '../../../../nls/labels',\r\n        './RowEditor_date',\r\n        'bootstrap'\r\n],\r\nfunction ($, mlRes, rowEditorDate) {\r\n    var defConfig = { yMin: 0, yMax: 3000 };\r\n\r\n    var RowEditor_month = function (config) {\r\n        this.parent.constructor.call(this, config);\r\n    };\r\n    RowEditor_month.prototype = Object.create(rowEditorDate.prototype);\r\n    RowEditor_month.prototype.constructor = rowEditorDate;\r\n    RowEditor_month.prototype.parent = rowEditorDate.prototype;\r\n\r\n    RowEditor_month.prototype.render = function (container, config) {\r\n        $.extend(true, this.config, config);\r\n        this.parent.render.call(this, container, config);\r\n        this.$datePicker.data(\"DateTimePicker\").format(\"MM/YYYY\");\r\n        this.$datePicker.data(\"DateTimePicker\").viewMode(\"months\");\r\n    };\r\n    RowEditor_month.prototype.setValue = function (val) {\r\n        this.reset();\r\n        if (val) {\r\n            var y = val.substring(0, 4) + \"\";\r\n            var m = val.substring(4, 6) + \"\";\r\n            m = m - 1;\r\n            this.$datePicker.data('DateTimePicker').date(new Date(y, m, 1));\r\n        }\r\n    };\r\n    RowEditor_month.prototype.getValue = function () {\r\n        var dt = this.$datePicker.data('DateTimePicker').date();\r\n        if (!dt)\r\n            return '';\r\n        var m = \"\" + (dt.month() + 1);\r\n        var y = \"\" + dt.year();\r\n        if (m.length == 1)\r\n            m = \"0\" + m;\r\n        while (y.length < 4)\r\n            y = \"0\" + y;\r\n        return y + m;\r\n    };\r\n    RowEditor_month.prototype.validate = function () {\r\n        var val = this.getValue();\r\n        if (this.mandatory && !val)\r\n            return this.ERROR_NULL;\r\n        if (!val)\r\n            return null;\r\n        var y = val.substring(0, 4);\r\n        var m = val.substring(4, 6);\r\n        if (this.mandatory && (m == '' || y == ''))\r\n            return this.ERROR_NULL;\r\n        if (y < this.config.yMin || y > this.config.yMax)\r\n            return this.ERROR_OUT_OF_RANGE;\r\n        if (m == '' && y == '') {\r\n            return null;\r\n        }\r\n    };\r\n    return RowEditor_month;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DataEditor/simpleEditors/rE/RowEditor_month.js\n ** module id = 19\n ** module chunks = 0\n **/","define([\r\n        'jquery',\r\n        '../../../../nls/labels',\r\n        './RowEditor_base',\r\n        'bootstrap'\r\n],\r\nfunction ($, mlRes, rowEditorBase) {\r\n    var defConfig = {\r\n        decimalDigits: 5,\r\n        html: '<input type=\"input\" class=\"form-control\">'\r\n    };\r\n\r\n    var RowEditor_number = function (config) {\r\n        this.parent.constructor.call(this, config);\r\n        $.extend(true, this.config, defConfig);\r\n        this.$cnt;\r\n        this.$txt;\r\n    };\r\n    RowEditor_number.prototype = Object.create(rowEditorBase.prototype);\r\n    RowEditor_number.prototype.constructor = RowEditor_number;\r\n    RowEditor_number.prototype.parent = rowEditorBase.prototype;\r\n\r\n    RowEditor_number.prototype.render = function (container, config) {\r\n        $.extend(true, this.config, config);\r\n        this.$cnt = container;\r\n        this.$cnt.html(this.config.html);\r\n        this.$txt = this.$cnt.find('input');\r\n        var me = this;\r\n        this.$cnt.on('valueChanged', function () { me.updateValidationHelp(); });\r\n    }\r\n    RowEditor_number.prototype.destroy = function () {\r\n        this.$cnt.off('valueChanged');\r\n    }\r\n    RowEditor_number.prototype.updateValidationHelp = function () {\r\n        var error = this.validate();\r\n        this.parent.updateValidationHelp.call(this, error);\r\n    }\r\n    RowEditor_number.prototype.reset = function () {\r\n        this.$txt.val('');\r\n        this.$cnt.popover('destroy');\r\n    }\r\n    RowEditor_number.prototype.setValue = function (val) {\r\n        this.reset();\r\n        this.$txt.val(val);\r\n    }\r\n    RowEditor_number.prototype.getValue = function () {\r\n        var toRet = this.$txt.val().trim();\r\n        return toRet;\r\n    }\r\n    RowEditor_number.prototype.isMandatory = function (m) {\r\n        if (m == 'undefined')\r\n            return this.mandatory;\r\n        this.mandatory = m;\r\n    }\r\n\r\n    RowEditor_number.prototype.validate = function () {\r\n        var val = this.getValue();\r\n        if (val != '') {\r\n            if (isNaN(val))\r\n                return this.ERROR_NAN;\r\n        }\r\n        else {\r\n            if (this.mandatory)\r\n                return this.ERROR_NULL;\r\n        }\r\n        return null;\r\n    }\r\n    RowEditor_number.prototype.isValid = function () {\r\n        if (this.validate() == null)\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    return RowEditor_number;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DataEditor/simpleEditors/rE/RowEditor_number.js\n ** module id = 20\n ** module chunks = 0\n **/","define([\r\n        'jquery',\r\n        '../../../../nls/labels',\r\n        './RowEditor_base',\r\n        'bootstrap'\r\n],\r\nfunction ($, mlRes, rowEditorBase) {\r\n    var defConfig = {\r\n        html: '<input type=\"text\" class=\"form-control\">'\r\n    };\r\n    var ERROR_NULL = \"Null\";\r\n\r\n    var RowEditor_string = function (config) {\r\n        this.parent.constructor.call(this, config, defConfig);\r\n        $.extend(true, this.config, defConfig);\r\n        this.$cnt;\r\n        this.txt;\r\n        //this.$cnt;\r\n    };\r\n    RowEditor_string.prototype = Object.create(rowEditorBase.prototype);\r\n    RowEditor_string.prototype.constructor = RowEditor_string;\r\n    RowEditor_string.prototype.parent = rowEditorBase.prototype;\r\n\r\n    RowEditor_string.prototype.render = function (container, config) {\r\n        $.extend(true, this.config, config);\r\n        this.$cnt = container;\r\n        this.$cnt.html(this.config.html);\r\n        this.txt = this.$cnt.find('input');\r\n        var me = this;\r\n        this.$cnt.on('valueChanged', function () { me.updateValidationHelp(); });\r\n    };\r\n    RowEditor_string.prototype.destroy = function () {\r\n        this.$cnt.off('valuechanged');\r\n    };\r\n    RowEditor_string.prototype.updateValidationHelp = function () {\r\n        var error = this.validate();\r\n        this.parent.updateValidationHelp.call(this, error);\r\n    };\r\n    RowEditor_string.prototype.reset = function () {\r\n        this.txt.val('');\r\n        this.$cnt.popover('destroy');\r\n    };\r\n    RowEditor_string.prototype.setValue = function (val) {\r\n        this.reset();\r\n        this.txt.val(val);\r\n    };\r\n    RowEditor_string.prototype.getValue = function () {\r\n        return this.txt.val().trim();\r\n    };\r\n    RowEditor_string.prototype.isMandatory = function (m) {\r\n        if (m == 'undefined')\r\n            return this.mandatory;\r\n        this.mandatory = m;\r\n    };\r\n    RowEditor_string.prototype.validate = function () {\r\n        var val = this.getValue();\r\n        if (this.mandatory && val.trim() == '')\r\n            return this.ERROR_NULL;\r\n        return null;\r\n    };\r\n    RowEditor_string.prototype.isValid = function () {\r\n        if (this.validate() == null)\r\n            return true;\r\n        return false;\r\n    };\r\n\r\n    return RowEditor_string;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DataEditor/simpleEditors/rE/RowEditor_string.js\n ** module id = 21\n ** module chunks = 0\n **/","define([\r\n        'jquery',\r\n        '../../../../nls/labels',\r\n        './RowEditor_date',\r\n        'bootstrap'\r\n],\r\nfunction ($, mlRes, rowEditorDate) {\r\n    var defConfig = { yMin: 0, yMax: 3000 };\r\n\r\n    var RowEditor_year = function (config) {\r\n        this.parent.constructor.call(this, config);\r\n    };\r\n    RowEditor_year.prototype = Object.create(rowEditorDate.prototype);\r\n    RowEditor_year.prototype.constructor = rowEditorDate;\r\n    RowEditor_year.prototype.parent = rowEditorDate.prototype;\r\n\r\n    RowEditor_year.prototype.render = function (container, config) {\r\n        $.extend(true, this.config, config);\r\n        this.parent.render.call(this, container, config);\r\n        this.$datePicker.data(\"DateTimePicker\").format(\"YYYY\");\r\n        this.$datePicker.data(\"DateTimePicker\").viewMode(\"years\");\r\n    };\r\n    RowEditor_year.prototype.setValue = function (val) {\r\n        this.reset();\r\n        if (val) {\r\n            this.$datePicker.data('DateTimePicker').date(new Date(val, 0, 1));\r\n        }\r\n    };\r\n    RowEditor_year.prototype.getValue = function () {\r\n        var dt = this.$datePicker.data('DateTimePicker').date();\r\n        if (!dt)\r\n            return '';\r\n        return \"\" + dt.year();\r\n    };\r\n    RowEditor_year.prototype.validate = function () {\r\n        var val = this.getValue();\r\n        if (this.mandatory && !val) \r\n            return this.ERROR_NULL;\r\n        if (!val)\r\n            return null;\r\n        if (val < this.config.yMin)\r\n            return this.ERROR_OUT_OF_RANGE;\r\n        if (val > this.config.yMax)\r\n            return this.ERROR_OUT_OF_RANGE;\r\n    };\r\n\r\n    return RowEditor_year;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DataEditor/simpleEditors/rE/RowEditor_year.js\n ** module id = 22\n ** module chunks = 0\n **/","module.exports = \"<div id=divRowEditorPopup class=modal data-backdrop=false> <div class=\\\"modal-dialog modal-lg\\\"> <div class=modal-content> <div class=modal-body> <table id=tblRowEditor> <tbody></tbody> </table> </div> <div class=modal-footer> <button id=btnEditRowCanc type=button class=\\\"btn btn-default\\\"><span class=\\\"glyphicon glyphicon-remove\\\"></span></button> <button id=btnEditRowOk type=button class=\\\"btn btn-primary\\\"><span class=\\\"glyphicon glyphicon-ok\\\"></span></button> </div> </div> </div> </div> <div id=divDataGrid> <table id=tblData class=\\\"table table-bordered table-condensed\\\"> <thead> <tr id=tblDataHead></tr> </thead> <tbody id=tblDataBody></tbody> </table> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/html/DataEditor/simpleEditors/DataEditor.html\n ** module id = 23\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_25__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"amplify-pubsub\"\n ** module id = 25\n ** module chunks = 0\n **/","define([\r\n'jquery',\r\n '../../../nls/labels'\r\n],\r\nfunction ($, mlRes) {\r\n\r\n\r\n    var ValidationResultsViewer = function (lang) {\r\n        this.lang = lang;\r\n        this.$valResGrid;\r\n    };\r\n\r\n    //Render - creation\r\n    ValidationResultsViewer.prototype.render = function (container) {\r\n        this.$valResGrid = container;\r\n    }\r\n\r\n    ValidationResultsViewer.prototype.setValidationResults = function (valRes) {\r\n        this.$valResGrid.html();\r\n        if (!valRes)  return;\r\n        var toAdd = \"\";\r\n\r\n        console.log(this.lang,mlRes);\r\n\r\n        toAdd = '<table><tbody>';\r\n\r\n        for (var i = 0; i < valRes.length; i++) {\r\n            toAdd += '<tr><td>';\r\n            toAdd += mlRes[this.lang.toLowerCase()][valRes[i].error];\r\n            if (valRes[i].dataIndex)\r\n                toAdd += \" line: \" + valRes[i].dataIndex;\r\n            toAdd += '</tr></td>';\r\n            //toAdd += \"</br>\";\r\n        }\r\n        toAdd += '</table></tbody>';\r\n\r\n        this.$valResGrid.html(toAdd);\r\n    }\r\n\r\n    return ValidationResultsViewer;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DataEditor/simpleEditors/ValidationResultsViewer.js\n ** module id = 26\n ** module chunks = 0\n **/","define(['jquery',\r\n    './CodelistUtils'\r\n],\r\n    function ($, clUtils) {\r\n\r\n        var MSG_NULL_KEY = 'nullKey';\r\n        var MSG_SAME_KEY_VALS = 'sameKeyVals';\r\n        var MSG_UNKNOWN_CODE = 'unknownCode';\r\n        var MSG_INVALID_YEAR = 'invalidYear';\r\n        var MSG_INVALID_MONTH = 'invalidMonth';\r\n        var MSG_INVALID_DATE = 'invalidDate';\r\n        var MSG_INVALID_NUMBER = 'invalidNumber';\r\n        var MSG_INVALID_BOOL = 'invalidBool';\r\n\r\n        //Columns/headers validation\r\n        function Data_Validator() { };\r\n\r\n        Data_Validator.prototype.validate = function (cols, codelists, data) {\r\n            var toRet = [];\r\n\r\n            var emptyKeyVals = this.checkEmptyKeyVals(cols, data);\r\n            var duplicateKeyVals = this.checkDuplicateKeyVals(cols, data);\r\n            var wrongDataTypes = this.checkWrongDataTypes(cols, codelists, data);\r\n            var valueFlags = this.checkValueFlags();\r\n\r\n            if (emptyKeyVals && emptyKeyVals.length > 0)\r\n                arrConcat(toRet, emptyKeyVals);\r\n            if (duplicateKeyVals && duplicateKeyVals.length > 0)\r\n                arrConcat(toRet, duplicateKeyVals);\r\n            if (wrongDataTypes && wrongDataTypes.length > 0)\r\n                arrConcat(toRet, wrongDataTypes);\r\n            if (valueFlags && valueFlags.length > 0)\r\n                arrConcat(toRet, valueFlags);\r\n\r\n            return toRet;\r\n        }\r\n\r\n        Data_Validator.prototype.checkEmptyKeyVals = function (cols, data) {\r\n            if (!cols || !data)\r\n                return null;\r\n            var toRet = [];\r\n            for (var i = 0; i < data.length; i++)\r\n                for (var c = 0; c < cols.length; c++) {\r\n                    if (cols[c].key) {\r\n                        if (!data[i][c])\r\n                            toRet.push({ error: MSG_NULL_KEY, colId: cols[c].id, dataIndex: i });\r\n                    }\r\n                }\r\n\r\n            return toRet;\r\n        }\r\n\r\n        Data_Validator.prototype.checkDuplicateKeyVals = function (cols, data) {\r\n            if (!cols || !data)\r\n                return null;\r\n\r\n            var toRet = [];\r\n\r\n            for (var r1 = 0; r1 < data.length - 1; r1++)\r\n                for (var r2 = r1 + 1; r2 < data.length; r2++)\r\n                    if (sameDimVals(data[r1], data[r2], cols)) {\r\n                        toRet.push({ error: MSG_SAME_KEY_VALS, dataIndex: r1 });\r\n                        toRet.push({ error: MSG_SAME_KEY_VALS, dataIndex: r2 });\r\n                    }\r\n\r\n            return toRet;\r\n        }\r\n\r\n        var sameDimVals = function (row1, row2, cols) {\r\n            for (var d = 0; d < cols.length; d++) {\r\n                if (cols[d].key)\r\n                    if (row1[d] != row2[d]) {\r\n                        return false;\r\n                    }\r\n            }\r\n            return true;\r\n        }\r\n\r\n        Data_Validator.prototype.checkWrongDataTypes = function (cols, codelists, data) {\r\n            if (!cols || !data)\r\n                return null;\r\n\r\n            var toRet = [];\r\n            for (var i = 0; i < data.length; i++) {\r\n                arrConcat(toRet, checkRowDataTypes(cols, codelists, data[i], i));\r\n            }\r\n            return toRet;\r\n\r\n            /*var colInfo = {};\r\n            for (var c = 0; c < cols.length; c++) \r\n\r\n                if (cols[c].dataType)\r\n                    colInfo[cols[c].id] = { dataType: cols[c].dataType, domain: cols[c].domain, codes: cols[c].codes };\r\n            }\r\n            var toRet = [];\r\n            for (var i = 0; i < data.length; i++) {\r\n                arrConcat(toRet, checkRowDataTypes(colInfo, data[i], i));\r\n            }\r\n            return toRet;*/\r\n        }\r\n\r\n        var checkRowDataTypes = function (cols, codelists, dataRow, rowIdx) {\r\n            var toRet = [];\r\n            for (var d = 0; d < cols.length; d++) {\r\n                switch (cols[d].dataType) {\r\n                    case 'code':\r\n                        var cListUID = cols[d].domain.codes[0].idCodeList;\r\n                        if (cols[d].domain.codes[0].version)\r\n                            cListUID = cListUID + \"|\" + cols[d].domain.codes[0].version;\r\n                        if (!checkCode(dataRow[d], codelists[cListUID]))\r\n                            toRet.push({ error: MSG_UNKNOWN_CODE, dataIndex: rowIdx, colId: cols[d].id });\r\n                        break;\r\n                    case 'year':\r\n                        if (!checkYear(dataRow[d]))\r\n                            toRet.push({ error: MSG_INVALID_YEAR, dataIndex: rowIdx, colId: cols[d].id });\r\n                        else {\r\n                            if (cols[d].domain && cols[d].domain.period) {\r\n                                if (cols[d].domain.period.from)//Check from\r\n                                    if (dataRow[d] < cols[d].domain.period.from)\r\n                                        toRet.push({ error: MSG_INVALID_YEAR, dataIndex: rowIdx, colId: cols[d].id, yearLimitFrom: cols[d].domain.period.from, yearValue: dataRow[d] });\r\n                                if (cols[d].domain.period.to) //Check to\r\n                                    if (dataRow[d] > cols[d].domain.period.to)\r\n                                        toRet.push({ error: MSG_INVALID_YEAR, dataIndex: rowIdx, colId: cols[d].id, yearLimitTo: cols[d].domain.period.to, yearValue: dataRow[d] });\r\n                            }\r\n                        }\r\n                        break;\r\n                    case 'month':\r\n                        if (!checkMonth(dataRow[d]))\r\n                            toRet.push({ error: MSG_INVALID_MONTH, dataIndex: rowIdx, colId: cols[d].id });\r\n                        break;\r\n                    case 'date':\r\n                        if (!checkDate(dataRow[d]))\r\n                            toRet.push({ error: MSG_INVALID_DATE, dataIndex: rowIdx, colId: cols[d].id });\r\n                        break;\r\n                    case 'customCode':\r\n                        //TODO: Check custom code\r\n                        break;\r\n                    case 'number':\r\n                    case 'percentage':\r\n                        if (!checkNumber(dataRow[d]))\r\n                            toRet.push({ error: MSG_INVALID_NUMBER, dataIndex: rowIdx, colId: d });\r\n                        break;\r\n                    case 'bool':\r\n                        if (!checkBool(dataRow[d]))\r\n                            toRet.push({ error: MSG_INVALID_BOOL, dataIndex: rowIdx, colId: d });\r\n                        break;\r\n                }\r\n            }\r\n            return toRet;\r\n        }\r\n\r\n        /*var checkRowDataTypes = function (colInfo, dataRow, rowIdx) {\r\n            var toRet = [];\r\n            //for (var d in data) {\r\n            for (var d = 0; d < dataRow.length; d++) {\r\n                if (!colInfo[d])\r\n                    continue;\r\n\r\n                switch (colInfo[d].dataType) {\r\n                    case 'code':\r\n                        if (!checkCode(data[d], colInfo[d].codes))\r\n                            toRet.push({ error: MSG_UNKNOWN_CODE, dataIndex: rowIdx, colId: d });\r\n                        break;\r\n                    case 'year':\r\n                        if (!checkYear(data[d]))\r\n                            toRet.push({ error: MSG_INVALID_YEAR, dataIndex: rowIdx, colId: d });\r\n                        else {\r\n                            if (colInfo[d].domain && colInfo[d].domain.period) {\r\n                                if (colInfo[d].domain.period.from)//Check from\r\n                                    if (data[d] < colInfo[d].domain.period.from)\r\n                                        toRet.push({ error: MSG_INVALID_YEAR, dataIndex: rowIdx, colId: d, yearLimitFrom: colInfo[d].domain.period.from, yearValue: data[d] });\r\n                                if (colInfo[d].domain.period.to) //Check to\r\n                                    if (data[d] > colInfo[d].domain.period.to)\r\n                                        toRet.push({ error: MSG_INVALID_YEAR, dataIndex: rowIdx, colId: d, yearLimitTo: colInfo[d].domain.period.to, yearValue: data[d] });\r\n                            }\r\n                        }\r\n                        break;\r\n                    case 'month':\r\n                        if (!checkMonth(data[d]))\r\n                            toRet.push({ error: MSG_INVALID_MONTH, dataIndex: rowIdx, colId: d });\r\n                        break;\r\n                    case 'date':\r\n                        if (!checkDate(data[d]))\r\n                            toRet.push({ error: MSG_INVALID_DATE, dataIndex: rowIdx, colId: d });\r\n                        break;\r\n                    case 'customCode':\r\n                        //TODO: Check custom code\r\n                        break;\r\n                    case 'number':\r\n                    case 'percentage':\r\n                        if (!checkNumber(data[d]))\r\n                            toRet.push({ error: MSG_INVALID_NUMBER, dataIndex: rowIdx, colId: d });\r\n                        break;\r\n                    case 'bool':\r\n                        if (!checkBool(data[d]))\r\n                            toRet.push({ error: MSG_INVALID_BOOL, dataIndex: rowIdx, colId: d });\r\n                        break;\r\n                }\r\n            }\r\n            return toRet;\r\n        }*/\r\n\r\n        var checkCode = function (code, codelist) {\r\n\r\n            var clU = new clUtils();\r\n            var code = clU.findCodeInCodelist(code, codelist);\r\n            if (code == null)\r\n                return false;\r\n            return true;\r\n\r\n            /*\r\n            if (!code)\r\n                return true;\r\n            if (!codelist)\r\n                return true;\r\n            if (isInCodelist(codelist, code))\r\n            {\r\n                return true;\r\n            }\r\n            for (var i = 0; i < codelist.data.length; i++)\r\n                if (code == codelist.data[i].code)\r\n                    return true;\r\n            return false;*/\r\n        }\r\n\r\n        var checkYear = function (year) {\r\n            if (!year)\r\n                return true;\r\n            if (!$.isNumeric(year))\r\n                return false;\r\n            if (year.toString().length != 4)\r\n                return false;\r\n            return true;\r\n        }\r\n\r\n        var checkMonth = function (month) {\r\n            if (!month)\r\n                return true;\r\n            if (!$.isNumeric(month))\r\n                return false;\r\n            if (month.toString().length != 6)\r\n                return false;\r\n            if (month.substring(4, 6) > 12 || month.substring(4, 6) < 1)\r\n                return false;\r\n            return true;\r\n        }\r\n\r\n        var checkDate = function (date) {\r\n            //ADD a true date format:\r\n            //could be done by creating a date object and then check if it matches the orginal date\r\n            if (!date)\r\n                return true;\r\n            if (!$.isNumeric(date))\r\n                return false;\r\n            if (date.toString().length != 8)\r\n                return false;\r\n            if (date.substring(4, 6) > 12 || date.substring(4, 6) < 1)\r\n                return false;\r\n\r\n            return true;\r\n        }\r\n\r\n\r\n        Data_Validator.prototype.checkValueFlags = function (cols, data) {\r\n            //TODO: Add configuration rulees for value - flags\r\n\r\n            /*var flagColId = \"\";\r\n             var valueColId = \"\";\r\n             for (var i = 0; i < cols.length; i++) {\r\n             if (cols[i].subject && cols[i].subject == 'flag')\r\n             flagColId = cols[i].id;\r\n             if (cols[i].subject && cols[i].subject == 'value')\r\n             valueColId = cols[i].id;\r\n             }\r\n\r\n             CONTINUE...\r\n             */\r\n        }\r\n\r\n        var checkNumber = function (num) {\r\n            if (!num)\r\n                return true;\r\n            if (num == \"\")\r\n                return true;\r\n            if ($.isNumeric(num))\r\n                return true;\r\n            return false;\r\n        }\r\n        var checkBool = function (toCheck) {\r\n            if (typeof (toCheck) == 'boolean')\r\n                return true;\r\n            if (typeof (toCheck) == 'string')\r\n                if (toCheck == 'true' || toCheck == 'false')\r\n                    return true;\r\n            if (typeof (toCheck) == 'number')\r\n                if (toCheck == 1 || toCheck == 0)\r\n                    return true;\r\n            return false;\r\n        }\r\n\r\n        var arrConcat = function (dest, toAdd) {\r\n            if (!dest)\r\n                dest = [];\r\n            if (toAdd)\r\n                for (var i = 0; i < toAdd.length; i++)\r\n                    dest.push(toAdd[i]);\r\n        }\r\n\r\n\r\n        /*Data append validation*/\r\n        Data_Validator.prototype.dataAppendCheck = function (cols, dataOld, dataNew) {\r\n            if (!cols || !dataOld || !dataNew)\r\n                return null;\r\n\r\n            var toRet = [];\r\n            for (var o = 0; o < dataOld.length; o++) {\r\n                for (n = 0; n < dataNew.length; n++) {\r\n                    var dimValsCollision = sameDimVals(dataOld[o], dataNew[n], cols);\r\n                    if (dimValsCollision) {\r\n                        //if (!sameData) {//If the rows have the same data ignore\r\n                        toRet.push({ dataOldIndex: o, dataNewIndex: n });\r\n                        //}\r\n                    }\r\n                }\r\n            }\r\n            return toRet;\r\n        }\r\n        //checks if two rows have the same data fields (ignores the key columns)\r\n        //Enable that after removing the duplicated lines from the newData set\r\n        /*var sameData = function (cols, oldRow, newRow) {\r\n            for (var d = 0; d < cols.length; d++) {\r\n                if (!cols[d].key) {\r\n                    if (oldRow[d] != newRow[d])\r\n                        return false;\r\n                }\r\n            }\r\n            return true;\r\n        }*/\r\n\r\n        Data_Validator.prototype.dataMerge = function (cols, dataOld, dataNew, mode) {\r\n\r\n            var oldLen = dataOld.length; //To avoid the count to increase on push\r\n            for (var n = 0; n < dataNew.length; n++) {\r\n                var found = false;\r\n                for (var o = 0; o < oldLen; o++) {\r\n                    if (sameDimVals(dataOld[o], dataNew[n], cols)) {\r\n                        found = true;\r\n                        if (mode == 'keepOld') {\r\n                            //do nothing, skip the line\r\n                        }\r\n                        else if (mode == 'keepNew') {\r\n                            copyRow(dataNew[n], dataOld[o]);\r\n                        }\r\n                        //break;\r\n                    }\r\n                }\r\n                if (!found) {//Not found, add it.\r\n                    dataOld.push(dataNew[n]);\r\n                }\r\n            }\r\n\r\n            return dataOld;\r\n        }\r\n\r\n        var copyRow = function (src, dst) {\r\n            for (var i = 0; i < src.length; i++)\r\n                dst[i] = src[i];\r\n        }\r\n\r\n        return Data_Validator;\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DataEditor/helpers/Data_Validator.js\n ** module id = 27\n ** module chunks = 0\n **/","define(['jquery'],\r\n    function ($) {\r\n\r\n        function CodelistUtils() {\r\n        };\r\n\r\n        CodelistUtils.prototype.findCodeInCodelist = function (code, codelist) {\r\n            var found = isInNode(codelist.data, code);\r\n            return found;\r\n        }\r\n\r\n        function isInNode(arr, code) {\r\n            for (var i = 0; i < arr.length; i++) {\r\n                if (arr[i].code == code) {\r\n                    return arr[i];\r\n                }\r\n            }\r\n\r\n            var res = null;\r\n            for (i = 0; i < arr.length; i++) {\r\n                if (res != null)\r\n                    break;\r\n                if (arr[i].children) {\r\n                    res = isInNode(arr[i].children, code);\r\n                }\r\n            }\r\n\r\n            return res;\r\n        };\r\n\r\n        return CodelistUtils;\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DataEditor/helpers/CodelistUtils.js\n ** module id = 28\n ** module chunks = 0\n **/","module.exports = \"<div id=divValRes style=display:none></div> <div id=DataUploadColsMatch style=display:none> <div class=row> <div class=col-xs-12> <p id=DataMatchColumn> Match the DSD columns with the CSV ones </p> <div id=divCsvMatcher> </div> <p> <button id=btnCsvMatcherOk type=button class=btn>Ok</button> <button id=btnCsvMatcherCancel type=button class=btn>Cancel</button> </p> </div> </div> </div> <div id=DataUploadContainer style=display:none> <div class=row> <div class=col-xs-12> <p id=DataDuplicateFound class=text-center> Some duplicated values found, keep old data or replace with the new values just uploaded? </p> <p class=text-center> <button id=btnDataMergeKeepNew type=button class=btn>Replace with new values</button> <button id=btnDataMergeKeepOld type=button class=btn>Keep old values</button> <button id=btnDataMergeCancel type=button class=btn>Cancel</button> </p> </div> </div> </div> <div id=divDataEditor> <div id=divDataEdit> </div> <div id=divDataGridBtns> <button id=btnAddRow type=button class=\\\"btn btn-default\\\"><span class=\\\"glyphicon glyphicon-plus\\\"></span></button> </div> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/html/DataEditor/DataEdit.html\n ** module id = 29\n ** module chunks = 0\n **/","define(\r\n    ['jquery'],\r\nfunction ($) {\r\n    this.defConfig = {\r\n        'fSep': ',',\r\n        'rSep': '\\r\\n',\r\n        'quot': '\"',\r\n        'head': false,\r\n        'trim': true\r\n    }\r\n\r\n\r\n    function CSV_To_Dataset(config,separator) {\r\n        this.config = {\r\n            'fSep': separator,\r\n            'rSep': '\\r\\n',\r\n            'quot': '\"',\r\n            'head': false,\r\n            'trim': true\r\n        };\r\n        //defConfig.fSep = separator;\r\n        $.extend(true, this.config,/* defConfig,*/ config);\r\n        this.stringsArr;\r\n    };\r\n\r\n    CSV_To_Dataset.prototype.convert = function (csv) {\r\n        this.stringsArr = toStringArray(csv, this.config);\r\n        _cleanEmptyCols(this.stringsArr);\r\n    };\r\n    //Removes empty columns left by Excel\r\n    function _cleanEmptyCols(data) {\r\n        for (var c = data[0].length - 1; c >= 0 ; c--) {\r\n            if (data[0][c].trim() == \"\") {\r\n                _removeEmptyCol(data, c);\r\n            }\r\n        }\r\n    };\r\n    function _removeEmptyCol(data, colIndex) {\r\n        for (var r = 0; r < data.length; r++) {\r\n            data[r].splice(colIndex, 1);\r\n        }\r\n    };\r\n    CSV_To_Dataset.prototype.getColumns = function () {\r\n        return stringArrToCol(this.stringsArr);\r\n    };\r\n    CSV_To_Dataset.prototype.getData = function () {\r\n        return stringArrToData(this.stringsArr);\r\n    };\r\n    function stringArrToCol(data) {\r\n        if (!data)\r\n            throw new Error(\"Nothing to parse\");\r\n        if (!data[0])\r\n            throw new Error(\"Nothing to parse\");\r\n\r\n        return data[0];\r\n    };\r\n    function stringArrToData(data) {\r\n        var toRet = [];\r\n        for (i = 1; i < data.length; i++)\r\n            toRet.push(data[i]);\r\n        return toRet;\r\n    };\r\n\r\n\r\n    //Convert a CSV to a multidimentional strings array\r\n    function toStringArray(str, o) {\r\n        var a = [['']];\r\n        for (var r = f = p = q = 0; p < str.length; p++) {\r\n            switch (c = str.charAt(p)) {\r\n                case o.quot:\r\n                    if (q && str.charAt(p + 1) == o.quot) {\r\n                        a[r][f] += o.quot;\r\n                        ++p;\r\n                    } else {\r\n                        q ^= 1;\r\n                    }\r\n                    break;\r\n                case o.fSep:\r\n                    if (!q) {\r\n                        if (o.trim) {\r\n                            a[r][f] = a[r][f].replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\r\n                        }\r\n                        a[r][++f] = '';\r\n                    } else {\r\n                        a[r][f] += c;\r\n                    }\r\n                    break;\r\n                case o.rSep.charAt(0):\r\n                    if (!q && (!o.rSep.charAt(1) || (o.rSep.charAt(1) && o.rSep.charAt(1) == str.charAt(p + 1)))) {\r\n                        if (o.trim) {\r\n                            a[r][f] = a[r][f].replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\r\n                        }\r\n                        a[++r] = [''];\r\n                        a[r][f = 0] = '';\r\n                        if (o.rSep.charAt(1)) {\r\n                            ++p;\r\n                        }\r\n                    } else {\r\n                        a[r][f] += c;\r\n                    }\r\n                    break;\r\n                default:\r\n                    a[r][f] += c;\r\n            }\r\n        }\r\n        if (o.head) {\r\n            a.shift()\r\n        }\r\n        if (a[a.length - 1].length < a[0].length) {\r\n            a.pop()\r\n        }\r\n        return a;\r\n    };\r\n\r\n    return CSV_To_Dataset;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DataEditor/helpers/CSV_To_Dataset.js\n ** module id = 30\n ** module chunks = 0\n **/","define(['jquery',\r\n    './Validator_CSV_Errors',\r\n    './CodelistUtils'\r\n],\r\n    function ($, Err, clUtils) {\r\n\r\n        function Validator_CSV() { };\r\n\r\n        Validator_CSV.prototype.validate = function (dsdCols, codelists, csvCols, csvData) {\r\n            var toRet = [];\r\n\r\n            if (!dsdCols) {\r\n                toRet.push({ type: Err.DSD_COLUMNS_NULL });\r\n                return toRet;\r\n            }\r\n            if (!csvCols) {\r\n                toRet.push({ type: Err.CSV_COLUMNS_NULL });\r\n                return toRet;\r\n            }\r\n            if (dsdCols.length > csvCols.length) {\r\n                toRet.push({ type: Err.WRONG_COLUMN_COUNT });\r\n                return toRet;\r\n            }\r\n            /*for (var i = 0; i < dsdCols.length; i++) {\r\n                if (dsdCols[i].id != csvCols[i]) {\r\n                    toRet.push({ type: Err.WRONG_COLUMN_ID, index: i });\r\n                }\r\n            }*/\r\n\r\n            /*for (i = 0; i < dsdCols.length; i++) {\r\n                if (dsdCols[i].dataType == 'code') {\r\n                    var clId = dsdCols[i].domain.codes[0].idCodeList;\r\n                    if (dsdCols[i].domain.codes[0].version)\r\n                        clId += \"|\" + dsdCols[i].domain.codes[0].version;\r\n                    var unkCodes = this.checkCodes(dsdCols[i], codelists[clId], csvData, i);\r\n                    if (unkCodes.length > 0) {\r\n                        toRet.push({ type: Err.UNKNOWN_CODES, columnId: csvCols[i], codes: unkCodes, codelistId: clId });\r\n                    }\r\n                }\r\n            }*/\r\n\r\n            var row = 0;\r\n            for (i = 0; i < dsdCols.length; i++) {\r\n                if (nullOnEmpty(dsdCols[i].dataType)) {\r\n                    for (row = 0; row < csvData.length; row++) {\r\n                        if (csvData[row][i] == \"\") {\r\n                            csvData[row][i] = null;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return toRet;\r\n        };\r\n\r\n        Validator_CSV.prototype.validateCodes = function (dsdCols, codelists, csvCols, csvData) {\r\n            var toRet = [];\r\n            if (csvData == null || csvData.length == 0)\r\n                return toRet;\r\n            if (csvCols == null || csvCols.length == 0)\r\n                return toRet;\r\n\r\n            for (i = 0; i < dsdCols.length; i++) {\r\n                if (dsdCols[i].dataType == 'code') {\r\n                    var clId = dsdCols[i].domain.codes[0].idCodeList;\r\n                    if (dsdCols[i].domain.codes[0].version)\r\n                        clId += \"|\" + dsdCols[i].domain.codes[0].version;\r\n\r\n                    var unkCodes = this.checkCodes(dsdCols[i], codelists[clId], csvData, i);\r\n                    if (unkCodes.length > 0) {\r\n                        toRet.push({ type: Err.UNKNOWN_CODES, columnId: csvCols[i], codes: unkCodes, codelistId: clId });\r\n                    }\r\n                }\r\n            }\r\n            return toRet;\r\n        };\r\n\r\n        function nullOnEmpty(dataType) {\r\n            if (dataType == 'code')\r\n                return true;\r\n            if (dataType == 'number')\r\n                return true;\r\n            if (dataType == 'pecentage')\r\n                return true;\r\n            return false;\r\n        }\r\n\r\n        Validator_CSV.prototype.checkCodes = function (dsdCol, cl, csvData, index) {\r\n            var unkCodes = [];\r\n            for (var i = 0; i < csvData.length; i++) {\r\n                if (csvData[i][index]) {\r\n                    var isIn = isInCodelist(cl, csvData[i][index]);\r\n                    if (!isIn) {\r\n                        var uCode = csvData[i][index];\r\n                        if ($.inArray(uCode, unkCodes) == -1)\r\n                            unkCodes.push(uCode);\r\n                    }\r\n                }\r\n            }\r\n            return unkCodes;\r\n        };\r\n\r\n        function isInCodelist(cl, code) {\r\n            var clU = new clUtils();\r\n            var found = clU.findCodeInCodelist(code, cl);\r\n            if (found == null)\r\n                return false;\r\n            return true;\r\n            /*var isIn = isInNode(cl.data, code);\r\n            return isIn;*/\r\n        };\r\n        \r\n        /*function isInNode(arr, code) {\r\n            for (var i = 0; i < arr.length; i++) {\r\n                if (arr[i].code == code) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            var res = false;\r\n            for (i = 0; i < arr.length; i++)\r\n                if (arr[i].children)\r\n                    res = res || isInNode(arr[i].children, code);\r\n\r\n            return res;\r\n        };*/\r\n\r\n\r\n        return new Validator_CSV();\r\n    })\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DataEditor/helpers/Validator_CSV.js\n ** module id = 31\n ** module chunks = 0\n **/","define([],\r\n    function () {\r\n        'use strict';\r\n        var e = {\r\n            //Col errors\r\n            DSD_COLUMNS_NULL: 'nullDSDCols',\r\n            CSV_COLUMNS_NULL: 'nullCsvCols',\r\n            WRONG_COLUMN_COUNT: 'wrongColumnCount',\r\n            //WRONG_COLUMN_ID: 'wrongColumnId',\r\n            UNKNOWN_CODES:'unknownCodes'\r\n        };\r\n        return e;\r\n    })\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DataEditor/helpers/Validator_CSV_Errors.js\n ** module id = 32\n ** module chunks = 0\n **/","define([\r\n        'jquery',\r\n        'loglevel',\r\n        '../../../html/DataEditor/ColumnsMatch/ColumnsMatch.html',\r\n        '../helpers/MLUtils'\r\n],\r\n    function ($, log, colsMatchHTML, MLUtils) {\r\n        var widgetName = \"ColumnsMatch\";\r\n\r\n        var defConfig = {\r\n            maxRows: 5\r\n        };\r\n        var e = {\r\n            /*EVT_VALUE_CHANGED: 'valueChanged.' + widgetName + '.fenix',\r\n            EVT_ROW_ADDED: 'rowAdded.' + widgetName + '.fenix',\r\n            EVT_ROW_DELETED: 'rowDeleted.' + widgetName + '.fenix'*/\r\n        };\r\n        var h = {\r\n            trDSD: \"#trDSD\",\r\n            trCSV: \"#trCSV\",\r\n            tblColMatch: \"#tblColMatch\"\r\n        };\r\n        var html = {\r\n            rowDSD: '<td>%title%<br/>type: %type%</td>',\r\n            //rowCSV: '<td id=\"csvHead\" ondrop=\"this.drop(event)\" ondragover=\"this.allowDrop(event)\"><span id=\"%colId%\" draggable=\"true\" ondragstart=\"this.drag(event)\">%colId%</span></td>'\r\n            rowCSV: '<td class=\"csvHead\" style=\"cursor:move;\" draggable=\"true\"><div id=\"%colId%\" draggable=\"true\">%colId%</div></td>'\r\n        };\r\n\r\n        var ColumnsMatch = function (config) {\r\n            log.info(\"ColumnsMatch\",config);\r\n            this.config = {};\r\n            $.extend(true, this.config, defConfig, config);\r\n            this.$cnt;\r\n\r\n            this.$tblColMatch;\r\n            this.$trDsd;\r\n            this.$trCsv;\r\n\r\n            this.dsd;\r\n            this.csvCols;\r\n            this.csvData;\r\n\r\n            this.lang = 'EN';\r\n        };\r\n\r\n        //Render - creation\r\n        ColumnsMatch.prototype.render = function (container, config, callB) {\r\n            log.info(\"ColumnsMatch render\",container, config, callB);\r\n            $.extend(true, this.config, config);\r\n\r\n            this.$cnt = container;\r\n            this.$cnt.html(colsMatchHTML);\r\n\r\n            this.$tblColMatch = this.$cnt.find(h.tblColMatch);\r\n            this.$trDsd = this.$cnt.find(h.trDSD);\r\n            this.$trCsv = this.$cnt.find(h.trCSV);\r\n\r\n            this._bindEvents();\r\n\r\n            this._doML();\r\n            if (callB) callB();\r\n        }\r\n\r\n        ColumnsMatch.prototype.setData = function (dsd, csvCols, csvData) {\r\n            log.info(\"ColumnsMatch setData\",dsd, csvCols, csvData);\r\n            this.dsd = dsd;\r\n            this.csvCols = csvCols;\r\n            this.csvData = csvData;\r\n            var cols = dsd.columns;\r\n            this.$trDsd.html('');\r\n            this.$trCsv.html('');\r\n            if (!cols) return;\r\n            for (var i = 0; i < cols.length; i++) {\r\n                var title = cols[i].title[this.lang];\r\n                var toSet = html.rowDSD.replace('%title%', title);\r\n                toSet = toSet.replace('%type%', cols[i].dataType);\r\n\r\n                this.$trDsd.append(toSet);\r\n            }\r\n\r\n            for (i = 0; i < csvCols.length; i++) {\r\n                toSet = html.rowCSV.replace('%colId%', csvCols[i]);\r\n                toSet = toSet.replace('%colId%', csvCols[i]);\r\n                this.$trCsv.append(toSet);\r\n                this.bindCsvHeadEvents();\r\n            }\r\n            this._updateView(this.csvCols, this.csvData);\r\n        }\r\n        ColumnsMatch.prototype.getCsvCols = function () {\r\n            log.info(\"ColumnsMatch getCsvCols\");\r\n            var newOrder = this._getColIndexes(this.csvCols);\r\n            var toRet = [];\r\n            for (var i = 0; i < this.dsd.columns.length; i++) {\r\n                toRet[i] = this.csvCols[newOrder[i]];\r\n            }\r\n            return toRet;\r\n        }\r\n        ColumnsMatch.prototype.getCsvData = function () {\r\n            log.info(\"ColumnsMatch getCsvData\");\r\n            var newOrder = this._getColIndexes(this.csvCols);\r\n            var toRet = [];\r\n            for (var i = 0; i < this.csvData.length; i++) {\r\n                var row = [];\r\n                for (var j = 0; j < this.dsd.columns.length; j++) {\r\n                    row[j] = this.csvData[i][newOrder[j]];\r\n                }\r\n                toRet[i] = row;\r\n            }\r\n            return toRet;\r\n        }\r\n\r\n        ColumnsMatch.prototype._updateView = function (csvCols, csvData) {\r\n            log.info(\"ColumnsMatch _updateView\",csvCols, csvData);\r\n            var maxRCount = this.config.maxRows;\r\n            if (csvData.length < maxRCount) {\r\n                maxRCount = csvData.length\r\n            }\r\n            this._removeDataRows();\r\n            var idx = this._getColIndexes(csvCols);\r\n            var toAdd = \"\";\r\n            for (i = 0; i < maxRCount; i++) {\r\n                toAdd += \"<tr>\" + csvRowToRow(csvData[i], idx) + \"</tr>\";\r\n            }\r\n            toAdd += \"<tr>\";\r\n            for (i = 0; i < idx.length; i++) {\r\n                toAdd += \"<td>...</td>\";\r\n            }\r\n            toAdd += \"</tr>\";\r\n            this.$tblColMatch.append(toAdd);\r\n        }\r\n        ColumnsMatch.prototype._getColIndexes = function (csvCols) {\r\n            log.info(\"ColumnsMatch _getColIndexes\",csvCols);\r\n            var $tdCsv = this.$trCsv.find('td');\r\n            var toRet = [];\r\n            for (var i = 0; i < $tdCsv.length; i++) {\r\n                var colId = $($tdCsv[i]).find('div')[0].id;\r\n                toRet[i] = findIndex(colId, csvCols);\r\n            }\r\n            log.info(\"ColumnsMatch _getColIndexes<\",toRet);\r\n            return toRet;\r\n        }\r\n        ColumnsMatch.prototype._removeDataRows = function () {\r\n            var rows = this.$tblColMatch.find(\"tr\");\r\n            if (rows.length > 2) {\r\n                for (var i = 2; i < rows.length; i++) {\r\n                    rows[i].remove();\r\n                }\r\n            }\r\n        }\r\n        function findIndex(colId, cols) {\r\n            for (var i = 0; i < cols.length; i++) {\r\n                if (cols[i] == colId)\r\n                    return i;\r\n            }\r\n            return -1;\r\n        }\r\n        function csvRowToRow(csvRow, csvOrder) {\r\n            var toRet = \"\";\r\n            for (var i = 0; i < csvOrder.length; i++) {\r\n                toRet += \"<td>\";\r\n                toRet += csvRow[csvOrder[i]];\r\n                toRet += \"</td>\";\r\n            }\r\n            return toRet;\r\n        }\r\n\r\n        ColumnsMatch.prototype._bindEvents = function () { }\r\n\r\n        ColumnsMatch.prototype.bindCsvHeadEvents = function () {\r\n            var tds = this.$trCsv.find('.csvHead');\r\n            var me = this;\r\n            for (var i = 0; i < tds.length; i++) {\r\n                $(tds[i]).on('drop', function (event) { me.drop(event); });\r\n                $(tds[i]).on('dragover', me.allowDrop);\r\n                $(tds[i]).find('div').on('dragover', me.allowDrop);\r\n                $(tds[i]).find('div').on('dragstart', me.drag);\r\n            }\r\n        }\r\n        ColumnsMatch.prototype._doML = function () { }\r\n\r\n        ColumnsMatch.prototype.drag = function (ev) {\r\n            ev.originalEvent.dataTransfer.setData(\"text\", ev.target.id);\r\n        }\r\n        ColumnsMatch.prototype.allowDrop = function (ev) {\r\n            ev.preventDefault();\r\n        }\r\n        ColumnsMatch.prototype.drop = function (ev) {\r\n            ev.preventDefault();\r\n            var data = ev.originalEvent.dataTransfer.getData(\"text\");\r\n            /*\r\n            console.log($('#' + data));\r\n            console.log($(data));\r\n            console.log(data);\r\n            */\r\n            var $toMoveSrc = $('div#' + data);\r\n            var $cntSrc = $toMoveSrc.parent();\r\n\r\n            var $toMoveDest;\r\n            var $cntDest;\r\n            if ($(ev.target).is('div')) {\r\n                $toMoveDest = $(ev.target);\r\n                $cntDest = $toMoveDest.parent();\r\n            } else {\r\n                $cntDest = $(ev.target);\r\n                $toMoveDest = $cntDest.find('div');\r\n            }\r\n\r\n            $toMoveDest.remove();\r\n            $toMoveSrc.remove();\r\n            $cntDest.append($toMoveSrc);\r\n            $cntSrc.append($toMoveDest);\r\n\r\n            this._updateView(this.csvCols, this.csvData);\r\n            this.bindCsvHeadEvents();\r\n        }\r\n\r\n        return ColumnsMatch;\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/DataEditor/ColumnsMatch/ColumnsMatch.js\n ** module id = 33\n ** module chunks = 0\n **/","module.exports = \"<table id=tblColMatch class=\\\"table table-bordered\\\"> <tbody> <tr id=trDSD></tr> <tr id=trCSV></tr> </tbody> </table>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/html/DataEditor/ColumnsMatch/ColumnsMatch.html\n ** module id = 34\n ** module chunks = 0\n **/"],"sourceRoot":""}